<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: %3 Pages: 1 -->
<svg width="4577pt" height="3785pt"
 viewBox="0.00 0.00 4576.51 3784.57" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 3780.5704)">
<title>%3</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-3780.5704 4572.5092,-3780.5704 4572.5092,4 -4,4"/>
<!-- phone&#45;tree.parse.ast/dispatches -->
<g id="node1" class="node node function">
<title>phone&#45;tree.parse.ast/dispatches</title>
<g id="a_node1"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/ast.clj, line 35&#10;(defn dispatches&#10; &#160;&quot;Returns a seq of potential dispatch vals for an `ast` node, in decreasing&#10; &#160;precedence:&#10;&#10; &#160;&#45; the java method for an `:instance&#45;call` or `:static&#45;call` node&#10; &#160;&#160;&#160;(as a symbol: &#39;java.class/method&#45;name)&#10; &#160;&#45; the clojure function for an `:invoke` node&#10; &#160;&#160;&#160;(as a symbol: &#39;clojure.ns/fn&#45;name)&#10; &#160;&#45; the clojure function or macro in the original form, for any node&#10; &#160;&#160;&#160;(as a symbol: &#39;clojure.ns/fn&#45;name)&#10; &#160;&#45; the ast `:op`, for any node (a keyword)&quot;&#10; &#160;[{:keys [op] :as ast}]&#10; &#160;(&#45;&gt;&gt; [;; java.class/method&#45;name&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(when (#{:instance&#45;call :static&#45;call} op)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(when&#45;let [cls (:class ast)]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(symbol (.getName cls) (str (:method ast)))))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;;; clojure.ns/fn&#45;name&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(when (= :invoke op)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(some&#45;&gt; ast :fn :var util/var&#45;&gt;symbol))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;;; first var in the original form (a macro or function)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(some&#45;&gt; (first&#45;form&#45;var ast) util/var&#45;&gt;symbol)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;;; raw op&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;op]&#10; &#160;&#160;&#160;&#160;&#160;&#160;(filter identity)&#10; &#160;&#160;&#160;&#160;&#160;&#160;(distinct)))">
<ellipse fill="#ffffff" stroke="#000000" cx="2400.6058" cy="-2463.5704" rx="120.2295" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-2459.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/dispatches</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/first&#45;form&#45;var -->
<g id="node31" class="node node function">
<title>phone&#45;tree.parse.ast/first&#45;form&#45;var</title>
<g id="a_node31"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/ast.clj, line 24&#10;(defn first&#45;form&#45;var&#10; &#160;&quot;Returns the first item of the original form, if it is a var used in a&#10; &#160;function or macro call position.&quot;&#10; &#160;[ast]&#10; &#160;;; If the original form was a macro, :raw&#45;forms is a sequence of&#10; &#160;;; macroexpansions, so the first one is the original form. If the original&#10; &#160;;; form was not a macro, :form is the original form.&#10; &#160;(let [raw&#45;form (form ast)]&#10; &#160;&#160;&#160;(when (list? raw&#45;form)&#10; &#160;&#160;&#160;&#160;&#160;(ast&#45;resolve ast (first raw&#45;form)))))">
<ellipse fill="#ffffff" stroke="#000000" cx="2808.9258" cy="-2317.5704" rx="131.3218" ry="18"/>
<text text-anchor="middle" x="2808.9258" y="-2313.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/first&#45;form&#45;var</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/dispatches&#45;&gt;phone&#45;tree.parse.ast/first&#45;form&#45;var -->
<g id="edge1" class="edge edge">
<title>phone&#45;tree.parse.ast/dispatches&#45;&gt;phone&#45;tree.parse.ast/first&#45;form&#45;var</title>
<g id="a_edge1"><a xlink:title="phone&#45;tree.parse.ast/dispatches &#45;&gt; phone&#45;tree.parse.ast/first&#45;form&#45;var">
<path fill="none" stroke="#000000" d="M2520.2176,-2461.2606C2543.6486,-2456.7785 2567.102,-2449.1425 2587.0076,-2436.5704 2611.3952,-2421.1676 2600.213,-2400.2454 2623.0076,-2382.5704 2652.0283,-2360.0675 2689.4211,-2345.0056 2723.0536,-2335.1019"/>
<polygon fill="#000000" stroke="#000000" points="2724.2229,-2338.4085 2732.8918,-2332.3176 2722.3166,-2331.673 2724.2229,-2338.4085"/>
</a>
</g>
</g>
<!-- phone&#45;tree.util/var&#45;&gt;symbol -->
<g id="node104" class="node node function">
<title>phone&#45;tree.util/var&#45;&gt;symbol</title>
<g id="a_node104"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/util.clj, line 3&#10;(defn var&#45;&gt;symbol [v]&#10; &#160;(symbol (some&#45;&gt; v meta :ns str)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(some&#45;&gt; v meta :name str)))">
<ellipse fill="#ffffff" stroke="#000000" cx="3530.8009" cy="-2363.5704" rx="109.4412" ry="18"/>
<text text-anchor="middle" x="3530.8009" y="-2359.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.util/var&#45;&gt;symbol</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/dispatches&#45;&gt;phone&#45;tree.util/var&#45;&gt;symbol -->
<g id="edge2" class="edge edge">
<title>phone&#45;tree.parse.ast/dispatches&#45;&gt;phone&#45;tree.util/var&#45;&gt;symbol</title>
<g id="a_edge2"><a xlink:title="phone&#45;tree.parse.ast/dispatches &#45;&gt; phone&#45;tree.util/var&#45;&gt;symbol">
<path fill="none" stroke="#000000" d="M2485.6662,-2476.3409C2527.0099,-2481.9223 2577.4865,-2487.8173 2623.0076,-2490.5704 2949.5143,-2510.3172 3048.3145,-2592.9293 3358.9899,-2490.5704 3419.7228,-2470.5606 3476.5715,-2419.9095 3507.2267,-2388.9587"/>
<polygon fill="#000000" stroke="#000000" points="3509.9758,-2391.1522 3514.4425,-2381.5449 3504.9596,-2386.2699 3509.9758,-2391.1522"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _reify -->
<g id="node2" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse _reify</title>
<g id="a_node2"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/class.clj, line 51&#10;(defmethod ast/parse :reify&#10; &#160;[ast]&#10; &#160;(record&#45;reify! (:class&#45;name ast) (meta (:form ast)))&#10; &#160;;; call the default method&#10; &#160;((get&#45;method ast/parse :default) ast))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="1930.3771" cy="-3331.5704" rx="123.0946" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-3327.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse :reify</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/record&#45;reify! -->
<g id="node82" class="node node function">
<title>phone&#45;tree.parse.class/record&#45;reify!</title>
<g id="a_node82"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/class.clj, line 35&#10;(defn record&#45;reify!&#10; &#160;&quot;Records this reify form in `reify&#45;templates`&#10;&#10; &#160;Called during analysis of reify forms.&quot;&#10; &#160;[cls metadata]&#10; &#160;(let [prefix (reify&#45;prefix cls)]&#10; &#160;&#160;&#160;(when (and prefix metadata)&#10; &#160;&#160;&#160;&#160;&#160;(swap! reify&#45;templates assoc [prefix metadata] cls))))">
<ellipse fill="#ffffff" stroke="#000000" cx="3530.8009" cy="-3596.5704" rx="135.6222" ry="18"/>
<text text-anchor="middle" x="3530.8009" y="-3592.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.class/record&#45;reify!</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _reify&#45;&gt;phone&#45;tree.parse.class/record&#45;reify! -->
<g id="edge3" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _reify&#45;&gt;phone&#45;tree.parse.class/record&#45;reify!</title>
<g id="a_edge3"><a xlink:title="phone&#45;tree.parse.ast/parse :reify &#45;&gt; phone&#45;tree.parse.class/record&#45;reify!">
<path fill="none" stroke="#000000" d="M1998.2985,-3346.6054C2170.3083,-3384.2416 2637.4024,-3483.705 3030.844,-3542.5704 3158.272,-3561.6357 3304.9392,-3576.6659 3406.3107,-3585.977"/>
<polygon fill="#000000" stroke="#000000" points="3406.0076,-3589.4637 3416.2845,-3586.888 3406.6444,-3582.4928 3406.0076,-3589.4637"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse -->
<g id="node130" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse</title>
<g id="a_node130"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/ast.clj, line 61&#10;(declare parse)&#10;&#10;file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/ast.clj, line 70&#10;(defmulti parse&#10; &#160;&quot;Parses an `ast` into an intermediate graph representation (a combined seq of&#10; &#160;nodes and edges).&#10;&#10; &#160;Dispatches on the most specific of:&#10;&#10; &#160;&#45; java method (as a symbol)&#10; &#160;&#45; clojure function or macro (fully qualified symbol)&#10; &#160;&#45; ast node :op (keyword)&quot;&#10; &#160;parse&#45;dispatch)">
<ellipse fill="#e6e6fa" stroke="#000000" cx="1481.7476" cy="-2861.5704" rx="101.8711" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-2857.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _reify&#45;&gt;phone&#45;tree.parse.ast/parse -->
<g id="edge4" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _reify&#45;&gt;phone&#45;tree.parse.ast/parse</title>
<g id="a_edge4"><a xlink:title="phone&#45;tree.parse.ast/parse :reify &#45;&gt; phone&#45;tree.parse.ast/parse">
<path fill="none" stroke="#000000" d="M1872.0251,-3347.4554C1817.8099,-3354.5472 1737.4054,-3353.3036 1682.5503,-3313.5704 1536.9278,-3208.0916 1494.6295,-2971.5823 1484.52,-2889.8228"/>
<polygon fill="#000000" stroke="#000000" points="1487.9827,-2889.2987 1483.3465,-2879.772 1481.0299,-2890.1105 1487.9827,-2889.2987"/>
</a>
</g>
</g>
<!-- clojure.tools.namespace.dir/scan&#45;all -->
<g id="node3" class="node node">
<title>clojure.tools.namespace.dir/scan&#45;all</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1481.7476" cy="-289.5704" rx="137.1179" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-285.3704" font-family="Times,serif" font-size="14.00" fill="#000000">clojure.tools.namespace.dir/scan&#45;all</text>
</g>
<!-- phone&#45;tree.graph/read&#45;lines -->
<g id="node4" class="node node function">
<title>phone&#45;tree.graph/read&#45;lines</title>
<g id="a_node4"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 108&#10;(def read&#45;lines (memoize (comp vec str/split&#45;lines slurp)))">
<ellipse fill="#ffffff" stroke="#000000" cx="3194.917" cy="-861.5704" rx="107.6672" ry="18"/>
<text text-anchor="middle" x="3194.917" y="-857.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/read&#45;lines</text>
</a>
</g>
</g>
<!-- clojure.string/split&#45;lines -->
<g id="node76" class="node node">
<title>clojure.string/split&#45;lines</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="3530.8009" cy="-861.5704" rx="94.2061" ry="18"/>
<text text-anchor="middle" x="3530.8009" y="-857.3704" font-family="Times,serif" font-size="14.00" fill="#000000">clojure.string/split&#45;lines</text>
</g>
<!-- phone&#45;tree.graph/read&#45;lines&#45;&gt;clojure.string/split&#45;lines -->
<g id="edge5" class="edge edge">
<title>phone&#45;tree.graph/read&#45;lines&#45;&gt;clojure.string/split&#45;lines</title>
<g id="a_edge5"><a xlink:title="phone&#45;tree.graph/read&#45;lines &#45;&gt; clojure.string/split&#45;lines">
<path fill="none" stroke="#000000" d="M3302.5787,-861.5704C3342.1188,-861.5704 3386.799,-861.5704 3426.0772,-861.5704"/>
<polygon fill="#000000" stroke="#000000" points="3426.2048,-865.0705 3436.2048,-861.5704 3426.2047,-858.0705 3426.2048,-865.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/edge&#45;with&#45;attrs -->
<g id="node5" class="node node function">
<title>phone&#45;tree.graph/edge&#45;with&#45;attrs</title>
<g id="a_node5"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 21&#10;(defn edge&#45;with&#45;attrs [g edge]&#10; &#160;[(lg/src edge) (lg/dest edge) (or (la/attrs g edge) {})])">
<ellipse fill="#ffffff" stroke="#000000" cx="1481.7476" cy="-1911.5704" rx="126.0019" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-1907.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/edge&#45;with&#45;attrs</text>
</a>
</g>
</g>
<!-- loom.graph/src -->
<g id="node77" class="node node">
<title>loom.graph/src</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="2400.6058" cy="-1349.5704" rx="63.3017" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-1345.3704" font-family="Times,serif" font-size="14.00" fill="#000000">loom.graph/src</text>
</g>
<!-- phone&#45;tree.graph/edge&#45;with&#45;attrs&#45;&gt;loom.graph/src -->
<g id="edge8" class="edge edge">
<title>phone&#45;tree.graph/edge&#45;with&#45;attrs&#45;&gt;loom.graph/src</title>
<g id="a_edge8"><a xlink:title="phone&#45;tree.graph/edge&#45;with&#45;attrs &#45;&gt; loom.graph/src">
<path fill="none" stroke="#000000" d="M1569.6621,-1898.5465C1594.5918,-1894.4799 1621.7059,-1889.702 1646.5503,-1884.5704 1662.7018,-1881.2343 1666.2679,-1878.1938 1682.5503,-1875.5704 1737.073,-1866.7858 2138.9549,-1877.4215 2178.2039,-1838.5704 2245.4087,-1772.0471 2156.2278,-1489.2738 2214.2039,-1414.5704 2241.4203,-1379.5015 2288.8127,-1363.2798 2328.998,-1355.8109"/>
<polygon fill="#000000" stroke="#000000" points="2329.775,-1359.2289 2339.0426,-1354.0945 2328.5959,-1352.3289 2329.775,-1359.2289"/>
</a>
</g>
</g>
<!-- loom.graph/dest -->
<g id="node142" class="node node">
<title>loom.graph/dest</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="2400.6058" cy="-1441.5704" rx="67.1696" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-1437.3704" font-family="Times,serif" font-size="14.00" fill="#000000">loom.graph/dest</text>
</g>
<!-- phone&#45;tree.graph/edge&#45;with&#45;attrs&#45;&gt;loom.graph/dest -->
<g id="edge7" class="edge edge">
<title>phone&#45;tree.graph/edge&#45;with&#45;attrs&#45;&gt;loom.graph/dest</title>
<g id="a_edge7"><a xlink:title="phone&#45;tree.graph/edge&#45;with&#45;attrs &#45;&gt; loom.graph/dest">
<path fill="none" stroke="#000000" d="M1596.658,-1919.1422C1769.2737,-1928.2968 2085.2024,-1935.766 2178.2039,-1875.5704 2327.1705,-1779.1511 2381.2891,-1549.7064 2396.0155,-1469.6834"/>
<polygon fill="#000000" stroke="#000000" points="2399.462,-1470.2921 2397.7658,-1459.8339 2392.57,-1469.0673 2399.462,-1470.2921"/>
</a>
</g>
</g>
<!-- loom.attr/attrs -->
<g id="node174" class="node node">
<title>loom.attr/attrs</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1930.3771" cy="-1811.5704" rx="59.9272" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-1807.3704" font-family="Times,serif" font-size="14.00" fill="#000000">loom.attr/attrs</text>
</g>
<!-- phone&#45;tree.graph/edge&#45;with&#45;attrs&#45;&gt;loom.attr/attrs -->
<g id="edge6" class="edge edge">
<title>phone&#45;tree.graph/edge&#45;with&#45;attrs&#45;&gt;loom.attr/attrs</title>
<g id="a_edge6"><a xlink:title="phone&#45;tree.graph/edge&#45;with&#45;attrs &#45;&gt; loom.attr/attrs">
<path fill="none" stroke="#000000" d="M1593.4711,-1903.1718C1611.8611,-1899.0355 1630.2266,-1893.0841 1646.5503,-1884.5704 1666.8935,-1873.9603 1662.1118,-1857.9956 1682.5503,-1847.5704 1737.9218,-1819.3268 1808.7413,-1811.4017 1860.4844,-1809.9093"/>
<polygon fill="#000000" stroke="#000000" points="1860.6461,-1813.4067 1870.5685,-1809.6925 1860.4955,-1806.4083 1860.6461,-1813.4067"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _instance&#45;call -->
<g id="node6" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse _instance&#45;call</title>
<g id="a_node6"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/interop.clj, line 9&#10;(defmethod ast/parse :instance&#45;call&#10; &#160;[{:keys [instance method args] :as ast}]&#10; &#160;(let [cls (or (guess&#45;class instance)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(guess&#45;class ast)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;java.lang.Object)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;;; method is already munged if this is from a clojure protocol&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;method&#45;sym (symbol (.getName cls) (str method))]&#10; &#160;&#160;&#160;(concat ;; edge to the protocol fn itself&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(build/edge ast {:dest method&#45;sym})&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; args are parsed as children of the enclosing scope&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(ast/parse&#45;children instance args))))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="1930.3771" cy="-3077.5704" rx="151.0744" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-3073.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse :instance&#45;call</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;children -->
<g id="node20" class="node node function">
<title>phone&#45;tree.parse.ast/parse&#45;children</title>
<g id="a_node20"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/ast.clj, line 81&#10;(defn parse&#45;children&#10; &#160;&quot;Parses any combination of ast nodes or sequences of ast nodes.&quot;&#10; &#160;[&amp; children]&#10; &#160;(mapcat parse (flatten children)))">
<ellipse fill="#ffffff" stroke="#000000" cx="2400.6058" cy="-3113.5704" rx="133.7099" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-3109.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse&#45;children</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _instance&#45;call&#45;&gt;phone&#45;tree.parse.ast/parse&#45;children -->
<g id="edge9" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _instance&#45;call&#45;&gt;phone&#45;tree.parse.ast/parse&#45;children</title>
<g id="a_edge9"><a xlink:title="phone&#45;tree.parse.ast/parse :instance&#45;call &#45;&gt; phone&#45;tree.parse.ast/parse&#45;children">
<path fill="none" stroke="#000000" d="M2057.6278,-3087.3125C2124.7634,-3092.4523 2206.8797,-3098.739 2273.9296,-3103.8723"/>
<polygon fill="#000000" stroke="#000000" points="2273.8943,-3107.3797 2284.1324,-3104.6534 2274.4288,-3100.4001 2273.8943,-3107.3797"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/guess&#45;class -->
<g id="node33" class="node node function">
<title>phone&#45;tree.parse.class/guess&#45;class</title>
<g id="a_node33"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/class.clj, line 79&#10;(defn guess&#45;class&#10; &#160;&quot;Returns the best guess return class for this ast node.&#10;&#10; &#160;Ignores java.lang.Object&quot;&#10; &#160;[ast]&#10; &#160;;; TODO: I think :class is not necessarily correct here: might need to be&#10; &#160;;; (guess&#45;class (:class ast))?&#10; &#160;#_(prn &quot;guess&#45;class&quot;&#10; &#160;&#160;&#160;&#160;&#160;&#160;(:form ast)&#10; &#160;&#160;&#160;&#160;&#160;&#160;(select&#45;keys (:env ast) [:file :line])&#10; &#160;&#160;&#160;&#160;&#160;&#160;[(guess&#45;class* ast)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(:class ast)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(:o&#45;tag ast)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(:tag ast)])&#10; &#160;(&#45;&gt;&gt; (keep #(% ast) [guess&#45;class* :class :o&#45;tag :tag])&#10; &#160;&#160;&#160;&#160;&#160;&#160;(keep #(cond&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(class? %) %&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(map? %) (guess&#45;class %)))&#10; &#160;&#160;&#160;&#160;&#160;&#160;(remove #{java.lang.Object})&#10; &#160;&#160;&#160;&#160;&#160;&#160;first))">
<ellipse fill="#ffffff" stroke="#000000" cx="2400.6058" cy="-3000.5704" rx="130.3613" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-2996.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.class/guess&#45;class</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _instance&#45;call&#45;&gt;phone&#45;tree.parse.class/guess&#45;class -->
<g id="edge10" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _instance&#45;call&#45;&gt;phone&#45;tree.parse.class/guess&#45;class</title>
<g id="a_edge10"><a xlink:title="phone&#45;tree.parse.ast/parse :instance&#45;call &#45;&gt; phone&#45;tree.parse.class/guess&#45;class">
<path fill="none" stroke="#000000" d="M2053.0226,-3066.9706C2093.0602,-3062.7744 2137.6451,-3057.3169 2178.2039,-3050.5704 2228.9086,-3042.1362 2285.4109,-3029.3898 2328.7762,-3018.8779"/>
<polygon fill="#000000" stroke="#000000" points="2329.7769,-3022.2365 2338.6619,-3016.4652 2328.1172,-3015.4361 2329.7769,-3022.2365"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/edge -->
<g id="node61" class="node node function">
<title>phone&#45;tree.parse.build/edge</title>
<g id="a_node61"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 70&#10;(defn edge&#10; &#160;&quot;Builds a graph edge, returning a sequence with a single edge.&quot;&#10; &#160;[ast {:keys [src dest]}]&#10; &#160;(if src&#10; &#160;&#160;&#160;(list (&#45;&gt;edge {:src (node&#45;id src)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:dest (node&#45;id dest)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:location (ast/location ast)}))&#10; &#160;&#160;&#160;;; make an edge from the current *parent* (or the namespace if it&#39;s a&#10; &#160;&#160;&#160;;; top&#45;level form)&#10; &#160;&#160;&#160;(when&#45;let [parent (or *parent* (get&#45;in ast [:env :ns]))]&#10; &#160;&#160;&#160;&#160;&#160;(log/tracef &quot;Adding edge from *parent* %s (%s) to %s&quot; *parent* parent dest)&#10; &#160;&#160;&#160;&#160;&#160;(recur ast {:src parent, :dest dest}))))">
<ellipse fill="#ffffff" stroke="#000000" cx="2400.6058" cy="-2750.5704" rx="108.1529" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-2746.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/edge</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _instance&#45;call&#45;&gt;phone&#45;tree.parse.build/edge -->
<g id="edge11" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _instance&#45;call&#45;&gt;phone&#45;tree.parse.build/edge</title>
<g id="a_edge11"><a xlink:title="phone&#45;tree.parse.ast/parse :instance&#45;call &#45;&gt; phone&#45;tree.parse.build/edge">
<path fill="none" stroke="#000000" d="M2020.4273,-3092.0582C2072.8546,-3095.1572 2136.6085,-3088.9384 2178.2039,-3050.5704 2240.7372,-2992.8892 2165.5046,-2932.3265 2214.2039,-2862.5704 2245.3467,-2817.9621 2300.491,-2788.086 2342.7485,-2770.491"/>
<polygon fill="#000000" stroke="#000000" points="2344.1414,-2773.7031 2352.0992,-2766.7085 2341.5165,-2767.2139 2344.1414,-2773.7031"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/node&#45;with&#45;attrs -->
<g id="node7" class="node node function">
<title>phone&#45;tree.graph/node&#45;with&#45;attrs</title>
<g id="a_node7"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 18&#10;(defn node&#45;with&#45;attrs [g n]&#10; &#160;[n (or (la/attrs g n) {})])">
<ellipse fill="#ffffff" stroke="#000000" cx="1481.7476" cy="-1857.5704" rx="126.9951" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-1853.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/node&#45;with&#45;attrs</text>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/node&#45;with&#45;attrs&#45;&gt;loom.attr/attrs -->
<g id="edge12" class="edge edge">
<title>phone&#45;tree.graph/node&#45;with&#45;attrs&#45;&gt;loom.attr/attrs</title>
<g id="a_edge12"><a xlink:title="phone&#45;tree.graph/node&#45;with&#45;attrs &#45;&gt; loom.attr/attrs">
<path fill="none" stroke="#000000" d="M1584.6723,-1847.0171C1670.2827,-1838.239 1789.6509,-1825.9997 1863.3717,-1818.4408"/>
<polygon fill="#000000" stroke="#000000" points="1863.872,-1821.9079 1873.4628,-1817.4061 1863.1579,-1814.9444 1863.872,-1821.9079"/>
</a>
</g>
</g>
<!-- phone&#45;tree.log/debug -->
<g id="node8" class="node node function">
<title>phone&#45;tree.log/debug</title>
<g id="a_node8"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/log.clj, line 22&#10;(def debug (partial log :debug))">
<ellipse fill="#ffffff" stroke="#000000" cx="3530.8009" cy="-3704.5704" rx="85.493" ry="18"/>
<text text-anchor="middle" x="3530.8009" y="-3700.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.log/debug</text>
</a>
</g>
</g>
<!-- phone&#45;tree.log/log -->
<g id="node113" class="node node function">
<title>phone&#45;tree.log/log</title>
<g id="a_node113"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/log.clj, line 15&#10;(defn log&#10; &#160;[level &amp; strs]&#10; &#160;(when (enabled? level)&#10; &#160;&#160;&#160;(binding [*out* *err*]&#10; &#160;&#160;&#160;&#160;&#160;(apply println strs))))">
<ellipse fill="#ffffff" stroke="#000000" cx="3905.0123" cy="-3670.5704" rx="75.3702" ry="18"/>
<text text-anchor="middle" x="3905.0123" y="-3666.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.log/log</text>
</a>
</g>
</g>
<!-- phone&#45;tree.log/debug&#45;&gt;phone&#45;tree.log/log -->
<g id="edge13" class="edge edge">
<title>phone&#45;tree.log/debug&#45;&gt;phone&#45;tree.log/log</title>
<g id="a_edge13"><a xlink:title="phone&#45;tree.log/debug &#45;&gt; phone&#45;tree.log/log">
<path fill="none" stroke="#000000" d="M3609.7043,-3697.4014C3672.8027,-3691.6684 3760.9149,-3683.6628 3824.4471,-3677.8904"/>
<polygon fill="#000000" stroke="#000000" points="3824.7828,-3681.3744 3834.425,-3676.9838 3824.1493,-3674.4031 3824.7828,-3681.3744"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/parse&#45;cli -->
<g id="node9" class="node node function">
<title>phone&#45;tree.core/parse&#45;cli</title>
<g id="a_node9"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/core.clj, line 114&#10;(defn parse&#45;cli [args]&#10; &#160;(let [{:keys [options arguments errors summary]} (cli/parse&#45;opts args cli&#45;options)]&#10; &#160;&#160;&#160;(cond&#10; &#160;&#160;&#160;&#160;&#160;(:help options)&#10; &#160;&#160;&#160;&#160;&#160;{:exit 0, :message (usage summary)}&#10; &#160;&#160;&#160;&#160;&#160;errors&#10; &#160;&#160;&#160;&#160;&#160;{:exit 1, :message (str/join &quot;\n&quot; errors)}&#10; &#160;&#160;&#160;&#160;&#160;:else&#10; &#160;&#160;&#160;&#160;&#160;(conform&#45;options options arguments))))">
<ellipse fill="#ffffff" stroke="#000000" cx="385.7518" cy="-289.5704" rx="98.4877" ry="18"/>
<text text-anchor="middle" x="385.7518" y="-285.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.core/parse&#45;cli</text>
</a>
</g>
</g>
<!-- clojure.string/join -->
<g id="node16" class="node node">
<title>clojure.string/join</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="3194.917" cy="-488.5704" rx="73.4583" ry="18"/>
<text text-anchor="middle" x="3194.917" y="-484.3704" font-family="Times,serif" font-size="14.00" fill="#000000">clojure.string/join</text>
</g>
<!-- phone&#45;tree.core/parse&#45;cli&#45;&gt;clojure.string/join -->
<g id="edge14" class="edge edge">
<title>phone&#45;tree.core/parse&#45;cli&#45;&gt;clojure.string/join</title>
<g id="a_edge14"><a xlink:title="phone&#45;tree.core/parse&#45;cli &#45;&gt; clojure.string/join">
<path fill="none" stroke="#000000" d="M481.5776,-293.7086C645.8648,-299.4272 991.5694,-305.447 1280.9449,-270.5704 1297.2175,-268.6092 1300.6821,-264.6109 1316.9449,-262.5704 1587.5902,-228.613 1657.6098,-243.5704 1930.3771,-243.5704 1930.3771,-243.5704 1930.3771,-243.5704 2400.6058,-243.5704 2703.0944,-243.5704 3042.7458,-407.8182 3155.9157,-467.3484"/>
<polygon fill="#000000" stroke="#000000" points="3154.4419,-470.5284 3164.9173,-472.1148 3157.7176,-464.3421 3154.4419,-470.5284"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/conform&#45;options -->
<g id="node21" class="node node function">
<title>phone&#45;tree.core/conform&#45;options</title>
<g id="a_node21"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/core.clj, line 108&#10;(defn conform&#45;options [opts args]&#10; &#160;(cond&#45;&gt; opts&#10; &#160;&#160;&#160;(seq args) (assoc :source&#45;paths args)&#10; &#160;&#160;&#160;(not (:include&#45;clojure opts)) (update :exclude&#45;node (fnil conj []) exclude&#45;clojure&#45;regex)&#10; &#160;&#160;&#160;(not (:include&#45;java opts)) (update :exclude&#45;node (fnil conj []) exclude&#45;java&#45;regex)))">
<ellipse fill="#ffffff" stroke="#000000" cx="737.0902" cy="-243.5704" rx="126.9951" ry="18"/>
<text text-anchor="middle" x="737.0902" y="-239.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.core/conform&#45;options</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/parse&#45;cli&#45;&gt;phone&#45;tree.core/conform&#45;options -->
<g id="edge15" class="edge edge">
<title>phone&#45;tree.core/parse&#45;cli&#45;&gt;phone&#45;tree.core/conform&#45;options</title>
<g id="a_edge15"><a xlink:title="phone&#45;tree.core/parse&#45;cli &#45;&gt; phone&#45;tree.core/conform&#45;options">
<path fill="none" stroke="#000000" d="M465.9156,-279.0747C515.5747,-272.5729 579.8631,-264.1558 633.3797,-257.149"/>
<polygon fill="#000000" stroke="#000000" points="634.1249,-260.5814 643.5859,-255.8127 633.2161,-253.6406 634.1249,-260.5814"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/usage -->
<g id="node22" class="node node function">
<title>phone&#45;tree.core/usage</title>
<g id="a_node22"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/core.clj, line 100&#10;(defn usage [options&#45;summary]&#10; &#160;(&#45;&gt;&gt; [&quot;Usage: lein phone&#45;tree [options] [source&#45;paths]&quot;&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;&quot;&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;Options:&quot;&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;options&#45;summary&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;&quot;]&#10; &#160;&#160;&#160;&#160;&#160;&#160;(str/join &quot;\n&quot;)))">
<ellipse fill="#ffffff" stroke="#000000" cx="737.0902" cy="-335.5704" rx="87.8725" ry="18"/>
<text text-anchor="middle" x="737.0902" y="-331.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.core/usage</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/parse&#45;cli&#45;&gt;phone&#45;tree.core/usage -->
<g id="edge16" class="edge edge">
<title>phone&#45;tree.core/parse&#45;cli&#45;&gt;phone&#45;tree.core/usage</title>
<g id="a_edge16"><a xlink:title="phone&#45;tree.core/parse&#45;cli &#45;&gt; phone&#45;tree.core/usage">
<path fill="none" stroke="#000000" d="M465.9156,-300.0661C521.7995,-307.3828 596.21,-317.1252 652.9467,-324.5537"/>
<polygon fill="#000000" stroke="#000000" points="652.5976,-328.0377 662.9674,-325.8656 653.5064,-321.097 652.5976,-328.0377"/>
</a>
</g>
</g>
<!-- clojure.tools.cli/parse&#45;opts -->
<g id="node39" class="node node">
<title>clojure.tools.cli/parse&#45;opts</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="737.0902" cy="-189.5704" rx="103.8437" ry="18"/>
<text text-anchor="middle" x="737.0902" y="-185.3704" font-family="Times,serif" font-size="14.00" fill="#000000">clojure.tools.cli/parse&#45;opts</text>
</g>
<!-- phone&#45;tree.core/parse&#45;cli&#45;&gt;clojure.tools.cli/parse&#45;opts -->
<g id="edge17" class="edge edge">
<title>phone&#45;tree.core/parse&#45;cli&#45;&gt;clojure.tools.cli/parse&#45;opts</title>
<g id="a_edge17"><a xlink:title="phone&#45;tree.core/parse&#45;cli &#45;&gt; clojure.tools.cli/parse&#45;opts">
<path fill="none" stroke="#000000" d="M411.1786,-271.9508C437.2476,-254.8248 479.5836,-229.5554 519.9953,-216.5704 553.729,-205.7312 591.7067,-199.2063 626.3554,-195.2909"/>
<polygon fill="#000000" stroke="#000000" points="626.9399,-198.7484 636.5115,-194.206 626.1963,-191.788 626.9399,-198.7484"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/cli&#45;options -->
<g id="node105" class="node node">
<title>phone&#45;tree.core/cli&#45;options</title>
<g id="a_node105"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/core.clj, line 31&#10;(def cli&#45;options&#10; &#160;[;; Output options&#10; &#160;&#160;[&quot;&#45;T&quot; &quot;&#45;&#45;format TYPE&quot;&#10; &#160;&#160;&#160;&quot;Output format (edn, dot, html, csv)&quot;&#10; &#160;&#160;&#160;:default :edn&#10; &#160;&#160;&#160;:parse&#45;fn keyword&#10; &#160;&#160;&#160;;; TODO: I can&#39;t tell if this is a difference in versions or what, but&#10; &#160;&#160;&#160;;; sometimes this wants to be a vector and sometimes it wants to be a&#10; &#160;&#160;&#160;;; function :shrug:&#10; &#160;&#160;&#160;#_#_:validate&#45;fn [#{:edn :dot :html :csv}]]&#10; &#160;&#160;[nil &quot;&#45;&#45;dot&#45;attr KEY=VALUE&quot;&#10; &#160;&#160;&#160;&quot;Global dot output options (can be repeated).&quot;&#10; &#160;&#160;&#160;:default ^::replace {:rankdir &quot;LR&quot;}&#10; &#160;&#160;&#160;:parse&#45;fn (fn [s]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(&#45;&gt;&gt; (str/split s #&quot;\s*;\s*&quot;)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(map #(str/split % #&quot;\s*=\s*&quot; 2))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(into {})))&#10; &#160;&#160;&#160;:assoc&#45;fn collect&#45;fn]&#10;&#10; &#160;&#160;;; Graph building options&#10; &#160;&#160;[&quot;&#45;n&quot; &quot;&#45;&#45;include&#45;ns REGEX&quot;&#10; &#160;&#160;&#160;&quot;Project namespaces to analyze (can be repeated).&quot;&#10; &#160;&#160;&#160;:parse&#45;fn re&#45;pattern&#10; &#160;&#160;&#160;:assoc&#45;fn collect&#45;fn]&#10; &#160;&#160;[&quot;&#45;e&quot; &quot;&#45;&#45;exclude&#45;ns REGEX&quot;&#10; &#160;&#160;&#160;&quot;Project namespaces to exclude from analysis (can be repeated).&quot;&#10; &#160;&#160;&#160;:parse&#45;fn re&#45;pattern&#10; &#160;&#160;&#160;:assoc&#45;fn collect&#45;fn]&#10;&#10; &#160;&#160;;; Graph pruning options&#10; &#160;&#160;;; TODO: might remove &#45;&#45;include&#45;clojure and &#45;&#45;include&#45;java for now?&#10; &#160;&#160;[nil &quot;&#45;&#45;include&#45;clojure&quot;&#10; &#160;&#160;&#160;&quot;Include clojure.core and clojure.lang nodes in the graph.&quot;&#10; &#160;&#160;&#160;:default false]&#10; &#160;&#160;[nil &quot;&#45;&#45;include&#45;java&quot;&#10; &#160;&#160;&#160;&quot;Include java.lang and java.util nodes in the graph.&quot;&#10; &#160;&#160;&#160;:default false]&#10; &#160;&#160;[nil &quot;&#45;&#45;exclude&#45;node REGEX&quot;&#10; &#160;&#160;&#160;&quot;Exclude these nodes from the graph (can be repeated).&quot;&#10; &#160;&#160;&#160;:parse&#45;fn re&#45;pattern&#10; &#160;&#160;&#160;:assoc&#45;fn collect&#45;fn]&#10; &#160;&#160;[nil &quot;&#45;&#45;include&#45;node REGEX&quot;&#10; &#160;&#160;&#160;&quot;Include only these nodes in the graph (can be repeated).&quot;&#10; &#160;&#160;&#160;:parse&#45;fn re&#45;pattern&#10; &#160;&#160;&#160;:assoc&#45;fn collect&#45;fn]&#10; &#160;&#160;[&quot;&#45;S&quot; &quot;&#45;&#45;include&#45;descendants REGEX&quot;&#10; &#160;&#160;&#160;&quot;Include only descendants of these nodes in the graph (can be repeated).&quot;&#10; &#160;&#160;&#160;:parse&#45;fn re&#45;pattern&#10; &#160;&#160;&#160;:assoc&#45;fn collect&#45;fn]&#10; &#160;&#160;[&quot;&#45;P&quot; &quot;&#45;&#45;include&#45;ancestors REGEX&quot;&#10; &#160;&#160;&#160;&quot;Include only ancestors of these nodes in the graph (can be repeated).&quot;&#10; &#160;&#160;&#160;:parse&#45;fn re&#45;pattern&#10; &#160;&#160;&#160;:assoc&#45;fn collect&#45;fn]&#10; &#160;&#160;[nil &quot;&#45;&#45;collapse REGEX&quot;&#10; &#160;&#160;&#160;&quot;Collapse intermediate edges between these nodes (can be repeated).&quot;&#10; &#160;&#160;&#160;:parse&#45;fn re&#45;pattern&#10; &#160;&#160;&#160;:assoc&#45;fn collect&#45;fn]&#10;&#10; &#160;&#160;;; Misc options&#10; &#160;&#160;[&quot;&#45;v&quot; nil&#10; &#160;&#160;&#160;&quot;Set verbosity (repeat to increase verbosity)&quot;&#10; &#160;&#160;&#160;:id :log&#45;level&#10; &#160;&#160;&#160;:assoc&#45;fn (fn [m k _]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(update m k #(case %&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(nil, :warn) :debug&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:debug :trace&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:trace)))]&#10; &#160;&#160;])">
<ellipse fill="#c0c0c0" stroke="#000000" cx="737.0902" cy="-135.5704" rx="105.7551" ry="18"/>
<text text-anchor="middle" x="737.0902" y="-131.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.core/cli&#45;options</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/parse&#45;cli&#45;&gt;phone&#45;tree.core/cli&#45;options -->
<g id="edge18" class="edge edge">
<title>phone&#45;tree.core/parse&#45;cli&#45;&gt;phone&#45;tree.core/cli&#45;options</title>
<g id="a_edge18"><a xlink:title="phone&#45;tree.core/parse&#45;cli &#45;&gt; phone&#45;tree.core/cli&#45;options">
<path fill="none" stroke="#000000" d="M398.6143,-271.5252C420.1121,-242.938 466.313,-187.8893 519.9953,-162.5704 551.1042,-147.8981 587.3708,-140.2277 621.253,-136.4415"/>
<polygon fill="#000000" stroke="#000000" points="621.6145,-139.9229 631.2098,-135.4308 620.9075,-132.9586 621.6145,-139.9229"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/reify&#45;prefix -->
<g id="node10" class="node node function">
<title>phone&#45;tree.parse.class/reify&#45;prefix</title>
<g id="a_node10"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/class.clj, line 22&#10;(defn reify&#45;prefix&#10; &#160;&quot;Returns the prefix for a reify class.&#10;&#10; &#160;Reify classes are inner classes of the namespace (and optionally, the&#10; &#160;function) they are defined in. e.g.:&#10;&#10; &#160;&#160;&#160;my.ns$reify__123456&#10; &#160;&#160;&#160;my.ns$my_fn$reify__123456&#10;&#10; &#160;The prefix is everything up to and including \&quot;reify\&quot;&quot;&#10; &#160;[cls]&#10; &#160;(some&#45;&gt;&gt; cls .getName (re&#45;find #&quot;^.*\$reify&quot;)))">
<ellipse fill="#ffffff" stroke="#000000" cx="3905.0123" cy="-3441.5704" rx="130.8286" ry="18"/>
<text text-anchor="middle" x="3905.0123" y="-3437.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.class/reify&#45;prefix</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/exclude&#45;clojure&#45;regex -->
<g id="node11" class="node node">
<title>phone&#45;tree.core/exclude&#45;clojure&#45;regex</title>
<g id="a_node11"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/core.clj, line 27&#10;(def exclude&#45;clojure&#45;regex #&quot;clojure\.(core/|lang\.).*&quot;)">
<ellipse fill="#c0c0c0" stroke="#000000" cx="1135.565" cy="-243.5704" rx="145.2599" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-239.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.core/exclude&#45;clojure&#45;regex</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/ast&#45;resolve -->
<g id="node12" class="node node function">
<title>phone&#45;tree.parse.ast/ast&#45;resolve</title>
<g id="a_node12"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/ast.clj, line 17&#10;(defn ast&#45;resolve&#10; &#160;&quot;Like ns&#45;resolve, but using the :ns from the ast&#39;s :env&quot;&#10; &#160;[ast sym]&#10; &#160;(when&#45;let [env&#45;ns (some&#45;&gt; ast :env :ns find&#45;ns)]&#10; &#160;&#160;&#160;(when (symbol? sym)&#10; &#160;&#160;&#160;&#160;&#160;(ns&#45;resolve env&#45;ns sym))))">
<ellipse fill="#ffffff" stroke="#000000" cx="3194.917" cy="-2128.5704" rx="121.6658" ry="18"/>
<text text-anchor="middle" x="3194.917" y="-2124.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/ast&#45;resolve</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/print&#45;graph -->
<g id="node13" class="node node function">
<title>phone&#45;tree.core/print&#45;graph</title>
<g id="a_node13"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/core.clj, line 149&#10;(defn print&#45;graph [g opts]&#10; &#160;(case (:format opts)&#10; &#160;&#160;&#160;:edn (prn (uber/ubergraph&#45;&gt;edn g))&#10; &#160;&#160;&#160;:dot (println (graph/&#45;&gt;dot g (:dot&#45;attr opts)))&#10; &#160;&#160;&#160;:html (println (html/render (graph/&#45;&gt;json g)))&#10; &#160;&#160;&#160;:csv (println (graph/&#45;&gt;csv g))))">
<ellipse fill="#ffffff" stroke="#000000" cx="737.0902" cy="-1254.5704" rx="107.6672" ry="18"/>
<text text-anchor="middle" x="737.0902" y="-1250.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.core/print&#45;graph</text>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;csv -->
<g id="node49" class="node node function">
<title>phone&#45;tree.graph/&#45;&gt;csv</title>
<g id="a_node49"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 205&#10;(defn &#45;&gt;csv&#10; &#160;&quot;Returns csv output&quot;&#10; &#160;[g]&#10; &#160;(let [topology (&#45;&gt;topology g)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;lines (map flatten topology)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;writer (java.io.StringWriter.)]&#10; &#160;&#160;&#160;(csv/write&#45;csv writer lines)&#10; &#160;&#160;&#160;(str writer)))">
<ellipse fill="#ffffff" stroke="#000000" cx="1135.565" cy="-1281.5704" rx="92.3801" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-1277.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/&#45;&gt;csv</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/print&#45;graph&#45;&gt;phone&#45;tree.graph/&#45;&gt;csv -->
<g id="edge19" class="edge edge">
<title>phone&#45;tree.core/print&#45;graph&#45;&gt;phone&#45;tree.graph/&#45;&gt;csv</title>
<g id="a_edge19"><a xlink:title="phone&#45;tree.core/print&#45;graph &#45;&gt; phone&#45;tree.graph/&#45;&gt;csv">
<path fill="none" stroke="#000000" d="M836.871,-1261.3314C898.452,-1265.504 977.082,-1270.8318 1038.208,-1274.9736"/>
<polygon fill="#000000" stroke="#000000" points="1038.0342,-1278.4698 1048.248,-1275.6539 1038.5075,-1271.4858 1038.0342,-1278.4698"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;json -->
<g id="node132" class="node node function">
<title>phone&#45;tree.graph/&#45;&gt;json</title>
<g id="a_node132"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 179&#10;(defn &#45;&gt;json&#10; &#160;&quot;Returns a json representation of a graph.&#10;&#10; &#160;Notes have :id and :attrs (dot attrs)&#10; &#160;Edges have :src :dest and :attrs (dot attrs)&quot;&#10; &#160;[g]&#10; &#160;(let [g (with&#45;dot&#45;attrs g)]&#10; &#160;&#160;&#160;(json/write&#45;str {:nodes (for [n (uber/nodes g)]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{:id n&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:attrs (uber/attrs g n)})&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:edges (for [e (uber/edges g)]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{:src (uber/src e)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:dest (uber/dest e)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:attrs (uber/attrs g e)})})))">
<ellipse fill="#ffffff" stroke="#000000" cx="1135.565" cy="-1227.5704" rx="95.2873" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-1223.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/&#45;&gt;json</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/print&#45;graph&#45;&gt;phone&#45;tree.graph/&#45;&gt;json -->
<g id="edge20" class="edge edge">
<title>phone&#45;tree.core/print&#45;graph&#45;&gt;phone&#45;tree.graph/&#45;&gt;json</title>
<g id="a_edge20"><a xlink:title="phone&#45;tree.core/print&#45;graph &#45;&gt; phone&#45;tree.graph/&#45;&gt;json">
<path fill="none" stroke="#000000" d="M836.871,-1247.8094C897.5785,-1243.696 974.8548,-1238.4599 1035.5964,-1234.3441"/>
<polygon fill="#000000" stroke="#000000" points="1035.841,-1237.8357 1045.5814,-1233.6675 1035.3677,-1230.8517 1035.841,-1237.8357"/>
</a>
</g>
</g>
<!-- phone&#45;tree.html/render -->
<g id="node165" class="node node function">
<title>phone&#45;tree.html/render</title>
<g id="a_node165"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/html.clj, line 18&#10;(defn render [json&#45;graph]&#10; &#160;(mini&#45;hbs (read&#45;html&#45;resource &quot;template.hbs&quot;)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{:json&#45;graph json&#45;graph}))">
<ellipse fill="#ffffff" stroke="#000000" cx="1135.565" cy="-889.5704" rx="91.2643" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-885.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.html/render</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/print&#45;graph&#45;&gt;phone&#45;tree.html/render -->
<g id="edge21" class="edge edge">
<title>phone&#45;tree.core/print&#45;graph&#45;&gt;phone&#45;tree.html/render</title>
<g id="a_edge21"><a xlink:title="phone&#45;tree.core/print&#45;graph &#45;&gt; phone&#45;tree.html/render">
<path fill="none" stroke="#000000" d="M753.0964,-1236.4943C791.835,-1193.1657 894.5147,-1080.8037 990.1851,-997.5704 1026.3483,-966.1084 1070.9971,-933.8178 1101.2001,-912.8431"/>
<polygon fill="#000000" stroke="#000000" points="1103.4597,-915.5362 1109.7,-906.9741 1099.4823,-909.7759 1103.4597,-915.5362"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;dot -->
<g id="node170" class="node node function">
<title>phone&#45;tree.graph/&#45;&gt;dot</title>
<g id="a_node170"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 160&#10;(defn &#45;&gt;dot&#10; &#160;&quot;Returns a dot file as a string.&#10;&#10; &#160;`attrs` are optional dot graph attributes.&quot;&#10; &#160;([g] (&#45;&gt;dot g nil))&#10; &#160;([g attrs]&#10; &#160;&#160;;; this is a little hacky: ubergraph expects to write to a file, but it uses&#10; &#160;&#160;;; `spit` to write dot, so we can use a writer to get string output&#10; &#160;&#160;(let [writer (java.io.StringWriter.)]&#10; &#160;&#160;&#160;&#160;;; force dorothy to quote ids and attributes&#10; &#160;&#160;&#160;&#160;(with&#45;redefs [dorothy.core/safe&#45;id? (constantly false)]&#10; &#160;&#160;&#160;&#160;&#160;&#160;(&#45;&gt; g&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;with&#45;dot&#45;attrs&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(uber/viz&#45;graph (assoc attrs :save {:format :dot :filename writer}))))&#10; &#160;&#160;&#160;&#160;(str writer))))">
<ellipse fill="#ffffff" stroke="#000000" cx="1135.565" cy="-1565.5704" rx="91.9042" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-1561.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/&#45;&gt;dot</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/print&#45;graph&#45;&gt;phone&#45;tree.graph/&#45;&gt;dot -->
<g id="edge22" class="edge edge">
<title>phone&#45;tree.core/print&#45;graph&#45;&gt;phone&#45;tree.graph/&#45;&gt;dot</title>
<g id="a_edge22"><a xlink:title="phone&#45;tree.core/print&#45;graph &#45;&gt; phone&#45;tree.graph/&#45;&gt;dot">
<path fill="none" stroke="#000000" d="M759.6557,-1272.1822C827.167,-1324.8732 1027.6603,-1481.3533 1104.8221,-1541.5763"/>
<polygon fill="#000000" stroke="#000000" points="1102.7165,-1544.3727 1112.7532,-1547.7663 1107.0234,-1538.8545 1102.7165,-1544.3727"/>
</a>
</g>
</g>
<!-- ubergraph.core/ubergraph&#45;&gt;edn -->
<g id="node173" class="node node">
<title>ubergraph.core/ubergraph&#45;&gt;edn</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1135.565" cy="-1335.5704" rx="122.1589" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-1331.3704" font-family="Times,serif" font-size="14.00" fill="#000000">ubergraph.core/ubergraph&#45;&gt;edn</text>
</g>
<!-- phone&#45;tree.core/print&#45;graph&#45;&gt;ubergraph.core/ubergraph&#45;&gt;edn -->
<g id="edge23" class="edge edge">
<title>phone&#45;tree.core/print&#45;graph&#45;&gt;ubergraph.core/ubergraph&#45;&gt;edn</title>
<g id="a_edge23"><a xlink:title="phone&#45;tree.core/print&#45;graph &#45;&gt; ubergraph.core/ubergraph&#45;&gt;edn">
<path fill="none" stroke="#000000" d="M802.2779,-1268.9766C853.3345,-1280.1394 926.1868,-1295.8025 990.1851,-1308.5704 1008.9435,-1312.3127 1029.0983,-1316.1639 1048.2475,-1319.7436"/>
<polygon fill="#000000" stroke="#000000" points="1047.6851,-1323.1989 1058.1569,-1321.5887 1048.9666,-1316.3172 1047.6851,-1323.1989"/>
</a>
</g>
</g>
<!-- phone&#45;tree.redef/try&#45;require -->
<g id="node14" class="node node function">
<title>phone&#45;tree.redef/try&#45;require</title>
<g id="a_node14"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/redef.clj, line 15&#10;(defn try&#45;require [&amp; args]&#10; &#160;(try&#10; &#160;&#160;&#160;(apply require args)&#10; &#160;&#160;&#160;true&#10; &#160;&#160;&#160;(catch java.io.FileNotFoundException _&#10; &#160;&#160;&#160;&#160;&#160;false)))">
<ellipse fill="#ffffff" stroke="#000000" cx="3530.8009" cy="-3185.5704" rx="108.6103" ry="18"/>
<text text-anchor="middle" x="3530.8009" y="-3181.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.redef/try&#45;require</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _static&#45;call -->
<g id="node15" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse _static&#45;call</title>
<g id="a_node15"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/interop.clj, line 41&#10;(defmethod ast/parse :static&#45;call&#10; &#160;[{:keys [class method args] :as ast}]&#10; &#160;;; java static method invocations&#10; &#160;(let [cls (or (guess&#45;class ast)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;class&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;java.lang.Object)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;method&#45;sym (symbol (.getName cls) (str method))]&#10; &#160;&#160;&#160;(concat ;; edge to the method&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(build/edge ast {:dest method&#45;sym})&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; args are parsed as children of the enclosing scope&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(ast/parse&#45;children args))))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="1930.3771" cy="-3023.5704" rx="140.9509" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-3019.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse :static&#45;call</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _static&#45;call&#45;&gt;phone&#45;tree.parse.ast/parse&#45;children -->
<g id="edge24" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _static&#45;call&#45;&gt;phone&#45;tree.parse.ast/parse&#45;children</title>
<g id="a_edge24"><a xlink:title="phone&#45;tree.parse.ast/parse :static&#45;call &#45;&gt; phone&#45;tree.parse.ast/parse&#45;children">
<path fill="none" stroke="#000000" d="M2051.9972,-3032.7229C2092.3743,-3036.8487 2137.4207,-3042.6305 2178.2039,-3050.5704 2234.0516,-3061.4431 2296.2542,-3079.5958 2340.6435,-3093.6301"/>
<polygon fill="#000000" stroke="#000000" points="2339.8083,-3097.0373 2350.3989,-3096.7387 2341.9336,-3090.3677 2339.8083,-3097.0373"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _static&#45;call&#45;&gt;phone&#45;tree.parse.class/guess&#45;class -->
<g id="edge25" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _static&#45;call&#45;&gt;phone&#45;tree.parse.class/guess&#45;class</title>
<g id="a_edge25"><a xlink:title="phone&#45;tree.parse.ast/parse :static&#45;call &#45;&gt; phone&#45;tree.parse.class/guess&#45;class">
<path fill="none" stroke="#000000" d="M2062.3002,-3017.1177C2126.3826,-3013.9833 2203.2238,-3010.2248 2267.4664,-3007.0826"/>
<polygon fill="#000000" stroke="#000000" points="2267.8478,-3010.5682 2277.6648,-3006.5837 2267.5058,-3003.5765 2267.8478,-3010.5682"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _static&#45;call&#45;&gt;phone&#45;tree.parse.build/edge -->
<g id="edge26" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _static&#45;call&#45;&gt;phone&#45;tree.parse.build/edge</title>
<g id="a_edge26"><a xlink:title="phone&#45;tree.parse.ast/parse :static&#45;call &#45;&gt; phone&#45;tree.parse.build/edge">
<path fill="none" stroke="#000000" d="M2023.3422,-3037.1299C2074.6621,-3039.3117 2136.2994,-3032.4741 2178.2039,-2996.5704 2225.0332,-2956.4471 2177.0752,-2911.8078 2214.2039,-2862.5704 2247.1707,-2818.8522 2302.6108,-2788.7223 2344.4797,-2770.816"/>
<polygon fill="#000000" stroke="#000000" points="2345.8457,-2774.0386 2353.7309,-2766.9623 2343.1539,-2767.5768 2345.8457,-2774.0386"/>
</a>
</g>
</g>
<!-- loom.graph/add&#45;edges -->
<g id="node17" class="node node">
<title>loom.graph/add&#45;edges</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1481.7476" cy="-1051.5704" rx="88.8761" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-1047.3704" font-family="Times,serif" font-size="14.00" fill="#000000">loom.graph/add&#45;edges</text>
</g>
<!-- phone&#45;tree.parse.interop -->
<g id="node18" class="node node namespace">
<title>phone&#45;tree.parse.interop</title>
<g id="a_node18"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/interop.clj, line 1&#10;(ns phone&#45;tree.parse.interop&#10; &#160;&quot;Interop call parsing.&quot;&#10; &#160;(:require [phone&#45;tree.parse.ast :as ast]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.build :as build]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.class :refer [guess&#45;class]]))">
<ellipse fill="#ffb6c1" stroke="#000000" cx="125.7541" cy="-472.5704" rx="96.0913" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-468.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.interop</text>
</a>
</g>
</g>
<!-- loom.graph/nodes -->
<g id="node19" class="node node">
<title>loom.graph/nodes</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="2400.6058" cy="-905.5704" rx="73.9428" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-901.3704" font-family="Times,serif" font-size="14.00" fill="#000000">loom.graph/nodes</text>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;children&#45;&gt;phone&#45;tree.parse.ast/parse -->
<g id="edge27" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;children&#45;&gt;phone&#45;tree.parse.ast/parse</title>
<g id="a_edge27"><a xlink:title="phone&#45;tree.parse.ast/parse&#45;children &#45;&gt; phone&#45;tree.parse.ast/parse">
<path fill="none" stroke="#000000" d="M2338.3232,-3129.6439C2294.012,-3140.2236 2232.8848,-3153.0939 2178.2039,-3158.5704 2068.607,-3169.5469 1779.8311,-3210.2272 1682.5503,-3158.5704 1572.4156,-3100.088 1511.6792,-2951.2394 1490.4765,-2889.2851"/>
<polygon fill="#000000" stroke="#000000" points="1493.7886,-2888.1532 1487.3014,-2879.7766 1487.149,-2890.3704 1493.7886,-2888.1532"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/conform&#45;options&#45;&gt;phone&#45;tree.core/exclude&#45;clojure&#45;regex -->
<g id="edge28" class="edge edge">
<title>phone&#45;tree.core/conform&#45;options&#45;&gt;phone&#45;tree.core/exclude&#45;clojure&#45;regex</title>
<g id="a_edge28"><a xlink:title="phone&#45;tree.core/conform&#45;options &#45;&gt; phone&#45;tree.core/exclude&#45;clojure&#45;regex">
<path fill="none" stroke="#000000" d="M863.9916,-243.5704C900.8001,-243.5704 941.42,-243.5704 979.7807,-243.5704"/>
<polygon fill="#000000" stroke="#000000" points="980.0062,-247.0705 990.0062,-243.5704 980.0062,-240.0705 980.0062,-247.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/exclude&#45;java&#45;regex -->
<g id="node87" class="node node">
<title>phone&#45;tree.core/exclude&#45;java&#45;regex</title>
<g id="a_node87"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/core.clj, line 28&#10;(def exclude&#45;java&#45;regex #&quot;java\.(lang\.|util\.).*&quot;)">
<ellipse fill="#c0c0c0" stroke="#000000" cx="1135.565" cy="-189.5704" rx="135.6125" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-185.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.core/exclude&#45;java&#45;regex</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/conform&#45;options&#45;&gt;phone&#45;tree.core/exclude&#45;java&#45;regex -->
<g id="edge29" class="edge edge">
<title>phone&#45;tree.core/conform&#45;options&#45;&gt;phone&#45;tree.core/exclude&#45;java&#45;regex</title>
<g id="a_edge29"><a xlink:title="phone&#45;tree.core/conform&#45;options &#45;&gt; phone&#45;tree.core/exclude&#45;java&#45;regex">
<path fill="none" stroke="#000000" d="M834.4177,-231.9718C871.8817,-227.3746 915.0489,-221.9162 954.1851,-216.5704 980.8968,-212.9217 1009.7833,-208.7326 1036.4831,-204.7598"/>
<polygon fill="#000000" stroke="#000000" points="1037.2264,-208.1877 1046.5999,-203.2493 1036.1927,-201.2644 1037.2264,-208.1877"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/usage&#45;&gt;clojure.string/join -->
<g id="edge30" class="edge edge">
<title>phone&#45;tree.core/usage&#45;&gt;clojure.string/join</title>
<g id="a_edge30"><a xlink:title="phone&#45;tree.core/usage &#45;&gt; clojure.string/join">
<path fill="none" stroke="#000000" d="M815.9889,-343.5588C857.2921,-348.2009 908.6199,-354.6924 954.1851,-362.5704 970.3358,-365.3627 973.9303,-368.4676 990.1851,-370.5704 1207.0136,-398.6205 1263.1123,-389.5704 1481.7476,-389.5704 1481.7476,-389.5704 1481.7476,-389.5704 2400.6058,-389.5704 2673.1124,-389.5704 2994.1973,-447.6573 3129.5501,-474.8435"/>
<polygon fill="#000000" stroke="#000000" points="3128.864,-478.2755 3139.3591,-476.825 3130.2502,-471.4141 3128.864,-478.2755"/>
</a>
</g>
</g>
<!-- phone&#45;tree.util -->
<g id="node23" class="node node namespace">
<title>phone&#45;tree.util</title>
<g id="a_node23"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/util.clj, line 1&#10;(ns phone&#45;tree.util)">
<ellipse fill="#ffb6c1" stroke="#000000" cx="125.7541" cy="-526.5704" rx="61.8395" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-522.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.util</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol) -->
<g id="node24" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol)</title>
<g id="a_node24"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/protocol.clj, line 58&#10;(defmethod ast/parse &#39;clojure.core/defprotocol&#10; &#160;[{:keys [result] :as ast}]&#10; &#160;(when&#45;let [protocol (some&#45;&gt; (ast/ast&#45;resolve ast result) var&#45;get)]&#10; &#160;&#160;&#160;;; pull all the methods off the protocol definition itself&#10; &#160;&#160;&#160;(flatten&#10; &#160;&#160;&#160;&#160;(for [k (keys (:method&#45;builders protocol))]&#10; &#160;&#160;&#160;&#160;&#160;&#160;(let [protocol&#45;fn (util/var&#45;&gt;symbol k)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;interface&#45;fn (symbol (.getName (:on&#45;interface protocol))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(munge (name protocol&#45;fn)))]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(concat ;; the interface method (no body, it&#39;s just a protocol)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(build/node ast interface&#45;fn)&#10;&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; the clojure function (no body, it&#39;s just a protocol)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(build/node ast protocol&#45;fn)&#10;&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; the `:method` op, which is used for method implementations&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; in deftype and defrecord, only knows about the interface&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; method, not the clojure protocol function. So it&#39;s simplest&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; to have all the calls go through the java interface, e.g.&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;;&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; &#160;&#160;deftype &#45;&#45;&#45;&#45;&#45;&#45;\&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;inferface method&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; &#160;&#160;protocol fn &#45;&#45;/&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;;&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(build/edge ast {:src protocol&#45;fn, :dest interface&#45;fn})))))))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="737.0902" cy="-2368.5704" rx="217.1898" ry="18"/>
<text text-anchor="middle" x="737.0902" y="-2364.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol)</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol)&#45;&gt;phone&#45;tree.parse.ast/ast&#45;resolve -->
<g id="edge31" class="edge edge">
<title>phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol)&#45;&gt;phone&#45;tree.parse.ast/ast&#45;resolve</title>
<g id="a_edge31"><a xlink:title="phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol) &#45;&gt; phone&#45;tree.parse.ast/ast&#45;resolve">
<path fill="none" stroke="#000000" d="M765.2355,-2350.5642C861.256,-2290.9198 1186.375,-2103.5704 1481.7476,-2103.5704 1481.7476,-2103.5704 1481.7476,-2103.5704 2400.6058,-2103.5704 2637.2026,-2103.5704 2913.2449,-2114.7883 3069.7217,-2122.1952"/>
<polygon fill="#000000" stroke="#000000" points="3069.6988,-2125.698 3079.8539,-2122.6774 3070.0317,-2118.7059 3069.6988,-2125.698"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol)&#45;&gt;phone&#45;tree.parse.build/edge -->
<g id="edge32" class="edge edge">
<title>phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol)&#45;&gt;phone&#45;tree.parse.build/edge</title>
<g id="a_edge32"><a xlink:title="phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol) &#45;&gt; phone&#45;tree.parse.build/edge">
<path fill="none" stroke="#000000" d="M748.4809,-2386.7697C779.8548,-2434.9384 873.0238,-2565.2914 990.1851,-2612.5704 1057.8156,-2639.8618 1581.3202,-2645.1854 1646.5503,-2612.5704 1670.4017,-2600.6447 1658.6989,-2576.4961 1682.5503,-2564.5704 1731.8088,-2539.9412 2133.3424,-2532.6261 2178.2039,-2564.5704 2218.048,-2592.9419 2181.0492,-2632.6085 2214.2039,-2668.5704 2243.5717,-2700.4248 2287.5382,-2720.5725 2325.3965,-2732.9219"/>
<polygon fill="#000000" stroke="#000000" points="2324.7957,-2736.4012 2335.3847,-2736.0485 2326.8869,-2729.7209 2324.7957,-2736.4012"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol)&#45;&gt;phone&#45;tree.util/var&#45;&gt;symbol -->
<g id="edge33" class="edge edge">
<title>phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol)&#45;&gt;phone&#45;tree.util/var&#45;&gt;symbol</title>
<g id="a_edge33"><a xlink:title="phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol) &#45;&gt; phone&#45;tree.util/var&#45;&gt;symbol">
<path fill="none" stroke="#000000" d="M763.5167,-2350.6133C806.9311,-2320.2285 894.4802,-2255.1542 954.1851,-2185.5704 974.1881,-2162.2576 964.3766,-2143.2295 990.1851,-2126.5704 1175.1471,-2007.1794 1261.5997,-2065.5704 1481.7476,-2065.5704 1481.7476,-2065.5704 1481.7476,-2065.5704 2808.9258,-2065.5704 3053.9218,-2065.5704 3167.9954,-1948.1295 3358.9899,-2101.5704 3403.7276,-2137.5117 3365.98,-2176.0561 3394.9899,-2225.5704 3422.2097,-2272.0294 3468.5396,-2314.3786 3499.4068,-2339.5711"/>
<polygon fill="#000000" stroke="#000000" points="3497.2996,-2342.3679 3507.2868,-2345.9045 3501.685,-2336.9117 3497.2996,-2342.3679"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node -->
<g id="node146" class="node node function">
<title>phone&#45;tree.parse.build/node</title>
<g id="a_node146"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 83&#10;(defn node&#10; &#160;&quot;Builds a graph node, returning a sequence of it and the result of parsing&#10; &#160;any `body&#45;asts`.&quot;&#10; &#160;[ast node &amp; body&#45;asts]&#10; &#160;(let [node (&#45;&gt; (conform&#45;node node)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(assoc :location (ast/location ast))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(&#45;&gt;node))]&#10; &#160;&#160;&#160;(concat ;; the node itself&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(list node)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; if we&#39;re inside another top&#45;level node, add an edge to this node&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(when *parent*&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(edge ast {:src *parent* :dest (:id node)}))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; parse the body with this node as the new parent&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(binding [*parent* (:id node)]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(&#45;&gt; (mapcat ast/parse body&#45;asts)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; laziness + binding = trouble, so force this sequence&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;doall))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; if this ast included a macro expansion, add an edge to the macro&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(when&#45;let [dest (and (:raw&#45;forms ast)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(ast/first&#45;form&#45;var ast))]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(edge ast {:src (:id node) :dest dest})))))">
<ellipse fill="#ffffff" stroke="#000000" cx="1135.565" cy="-2368.5704" rx="108.646" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-2364.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/node</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol)&#45;&gt;phone&#45;tree.parse.build/node -->
<g id="edge34" class="edge edge">
<title>phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol)&#45;&gt;phone&#45;tree.parse.build/node</title>
<g id="a_edge34"><a xlink:title="phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol) &#45;&gt; phone&#45;tree.parse.build/node">
<path fill="none" stroke="#000000" d="M954.4003,-2368.5704C975.6468,-2368.5704 996.617,-2368.5704 1016.3336,-2368.5704"/>
<polygon fill="#000000" stroke="#000000" points="1016.5247,-2372.0705 1026.5247,-2368.5704 1016.5246,-2365.0705 1016.5247,-2372.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.redef/redef&#45;form -->
<g id="node25" class="node node function">
<title>phone&#45;tree.redef/redef&#45;form</title>
<g id="a_node25"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/redef.clj, line 22&#10;(defn redef&#45;form&#10; &#160;&quot;Redefines a form. Expects a def&#45;style form with a fully&#45;qualified symbol.&#10;&#10; &#160;Ignores any redefs for namespaces that are not in the classpath.&quot;&#10; &#160;[[head qualified&#45;sym &amp; body :as form]]&#10; &#160;(let [sym&#45;ns (symbol (namespace qualified&#45;sym))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;sym&#45;name (symbol (name qualified&#45;sym))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;form&#45;to&#45;eval (cons head (cons sym&#45;name body))]&#10; &#160;&#160;&#160;;; redefs should survive `require`, since we&#39;ve already required the&#10; &#160;&#160;&#160;;; namespace here, but they definitely _won&#39;t_ survive :reload&#10; &#160;&#160;&#160;(if (try&#45;require sym&#45;ns)&#10; &#160;&#160;&#160;&#160;&#160;(binding [*ns* (find&#45;ns sym&#45;ns)]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(log/debugf &quot;Redefining %s&quot; qualified&#45;sym)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(when (= &#39;defmulti head) (ns&#45;unmap *ns* sym&#45;name))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(eval form&#45;to&#45;eval))&#10; &#160;&#160;&#160;&#160;&#160;(log/warnf &quot;Skipping redef %s: unable to require %s&quot; qualified&#45;sym sym&#45;ns))))">
<ellipse fill="#ffffff" stroke="#000000" cx="3194.917" cy="-3185.5704" rx="109.0862" ry="18"/>
<text text-anchor="middle" x="3194.917" y="-3181.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.redef/redef&#45;form</text>
</a>
</g>
</g>
<!-- phone&#45;tree.redef/redef&#45;form&#45;&gt;phone&#45;tree.redef/try&#45;require -->
<g id="edge35" class="edge edge">
<title>phone&#45;tree.redef/redef&#45;form&#45;&gt;phone&#45;tree.redef/try&#45;require</title>
<g id="a_edge35"><a xlink:title="phone&#45;tree.redef/redef&#45;form &#45;&gt; phone&#45;tree.redef/try&#45;require">
<path fill="none" stroke="#000000" d="M3303.9689,-3185.5704C3338.4019,-3185.5704 3376.6166,-3185.5704 3411.7134,-3185.5704"/>
<polygon fill="#000000" stroke="#000000" points="3412.0091,-3189.0705 3422.0091,-3185.5704 3412.009,-3182.0705 3412.0091,-3189.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.log/warnf -->
<g id="node52" class="node node function">
<title>phone&#45;tree.log/warnf</title>
<g id="a_node52"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/log.clj, line 34&#10;(def warnf (partial logf :warn))">
<ellipse fill="#ffffff" stroke="#000000" cx="3530.8009" cy="-3017.5704" rx="84.5153" ry="18"/>
<text text-anchor="middle" x="3530.8009" y="-3013.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.log/warnf</text>
</a>
</g>
</g>
<!-- phone&#45;tree.redef/redef&#45;form&#45;&gt;phone&#45;tree.log/warnf -->
<g id="edge36" class="edge edge">
<title>phone&#45;tree.redef/redef&#45;form&#45;&gt;phone&#45;tree.log/warnf</title>
<g id="a_edge36"><a xlink:title="phone&#45;tree.redef/redef&#45;form &#45;&gt; phone&#45;tree.log/warnf">
<path fill="none" stroke="#000000" d="M3229.284,-3168.381C3291.083,-3137.4708 3420.7905,-3072.5946 3488.1532,-3038.9016"/>
<polygon fill="#000000" stroke="#000000" points="3489.8531,-3041.9648 3497.2311,-3034.3611 3486.7217,-3035.7043 3489.8531,-3041.9648"/>
</a>
</g>
</g>
<!-- phone&#45;tree.log/debugf -->
<g id="node149" class="node node function">
<title>phone&#45;tree.log/debugf</title>
<g id="a_node149"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/log.clj, line 33&#10;(def debugf (partial logf :debug))">
<ellipse fill="#ffffff" stroke="#000000" cx="3530.8009" cy="-3296.5704" rx="88.3829" ry="18"/>
<text text-anchor="middle" x="3530.8009" y="-3292.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.log/debugf</text>
</a>
</g>
</g>
<!-- phone&#45;tree.redef/redef&#45;form&#45;&gt;phone&#45;tree.log/debugf -->
<g id="edge37" class="edge edge">
<title>phone&#45;tree.redef/redef&#45;form&#45;&gt;phone&#45;tree.log/debugf</title>
<g id="a_edge37"><a xlink:title="phone&#45;tree.redef/redef&#45;form &#45;&gt; phone&#45;tree.log/debugf">
<path fill="none" stroke="#000000" d="M3276.8386,-3197.585C3303.3889,-3202.5253 3332.7488,-3209.1126 3358.9899,-3217.5704 3405.689,-3232.622 3456.4178,-3257.0235 3490.5559,-3274.7285"/>
<polygon fill="#000000" stroke="#000000" points="3489.245,-3277.9928 3499.7276,-3279.5313 3492.4924,-3271.7916 3489.245,-3277.9928"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/sanitize&#45;id -->
<g id="node26" class="node node function">
<title>phone&#45;tree.graph/sanitize&#45;id</title>
<g id="a_node26"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 105&#10;(defn sanitize&#45;id [id]&#10; &#160;(str/replace id &quot;:&quot; &quot;_&quot;))">
<ellipse fill="#ffffff" stroke="#000000" cx="1930.3771" cy="-1135.5704" rx="109.6053" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-1131.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/sanitize&#45;id</text>
</a>
</g>
</g>
<!-- clojure.string/replace -->
<g id="node151" class="node node">
<title>clojure.string/replace</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="2400.6058" cy="-1020.5704" rx="84.9912" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-1016.3704" font-family="Times,serif" font-size="14.00" fill="#000000">clojure.string/replace</text>
</g>
<!-- phone&#45;tree.graph/sanitize&#45;id&#45;&gt;clojure.string/replace -->
<g id="edge38" class="edge edge">
<title>phone&#45;tree.graph/sanitize&#45;id&#45;&gt;clojure.string/replace</title>
<g id="a_edge38"><a xlink:title="phone&#45;tree.graph/sanitize&#45;id &#45;&gt; clojure.string/replace">
<path fill="none" stroke="#000000" d="M2034.1167,-1141.4362C2081.2734,-1139.4827 2135.8556,-1130.3534 2178.2039,-1103.5704 2203.2106,-1087.7551 2189.3201,-1063.5783 2214.2039,-1047.5704 2241.2519,-1030.1703 2275.031,-1022.155 2306.3765,-1018.8816"/>
<polygon fill="#000000" stroke="#000000" points="2306.8083,-1022.3571 2316.4565,-1017.9796 2306.1843,-1015.3849 2306.8083,-1022.3571"/>
</a>
</g>
</g>
<!-- loom.attr/add&#45;attr -->
<g id="node27" class="node node">
<title>loom.attr/add&#45;attr</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1930.3771" cy="-1668.5704" rx="72.472" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-1664.3704" font-family="Times,serif" font-size="14.00" fill="#000000">loom.attr/add&#45;attr</text>
</g>
<!-- ubergraph.core/viz&#45;graph -->
<g id="node28" class="node node">
<title>ubergraph.core/viz&#45;graph</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1481.7476" cy="-1673.5704" rx="99.6384" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-1669.3704" font-family="Times,serif" font-size="14.00" fill="#000000">ubergraph.core/viz&#45;graph</text>
</g>
<!-- phone&#45;tree.graph/collapse -->
<g id="node29" class="node node function">
<title>phone&#45;tree.graph/collapse</title>
<g id="a_node29"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 84&#10;(defn collapse&#10; &#160;&quot;Returns a graph that only contains `starting&#45;nodes` (a coll or node&#10; &#160;filtering function). Intermediate edges and nodes are collapsed.&quot;&#10; &#160;[g starting&#45;nodes&#45;or&#45;fn]&#10; &#160;(let [starting&#45;nodes (set (&#45;&gt;starting&#45;nodes g starting&#45;nodes&#45;or&#45;fn))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;edges (for [start starting&#45;nodes&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end (&#45;&gt;&gt; (reachable&#45;nodes (uber/successors g) #{start})&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(filter starting&#45;nodes))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; this would include self&#45;edges by default (since&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; reachable&#45;nodes also includes starting nodes), so don&#39;t&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; include the self&#45;edge unless it actually exists&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:when (or (not= start end)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(uber/find&#45;edge g start end))]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[start end])&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;nodes (&#45;&gt;&gt; (reduce into starting&#45;nodes edges)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(map #(uber/node&#45;with&#45;attrs g %)))]&#10; &#160;&#160;&#160;(apply uber/digraph (concat nodes edges))))">
<ellipse fill="#ffffff" stroke="#000000" cx="1135.565" cy="-689.5704" rx="101.8878" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-685.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/collapse</text>
</a>
</g>
</g>
<!-- ubergraph.core/node&#45;with&#45;attrs -->
<g id="node40" class="node node">
<title>ubergraph.core/node&#45;with&#45;attrs</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1481.7476" cy="-797.5704" rx="119.9266" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-793.3704" font-family="Times,serif" font-size="14.00" fill="#000000">ubergraph.core/node&#45;with&#45;attrs</text>
</g>
<!-- phone&#45;tree.graph/collapse&#45;&gt;ubergraph.core/node&#45;with&#45;attrs -->
<g id="edge39" class="edge edge">
<title>phone&#45;tree.graph/collapse&#45;&gt;ubergraph.core/node&#45;with&#45;attrs</title>
<g id="a_edge39"><a xlink:title="phone&#45;tree.graph/collapse &#45;&gt; ubergraph.core/node&#45;with&#45;attrs">
<path fill="none" stroke="#000000" d="M1167.3651,-706.8061C1202.8443,-725.3068 1262.4371,-754.2335 1316.9449,-770.5704 1336.2771,-776.3646 1357.2809,-781.004 1377.6178,-784.6883"/>
<polygon fill="#000000" stroke="#000000" points="1377.0844,-788.148 1387.5376,-786.4211 1378.289,-781.2525 1377.0844,-788.148"/>
</a>
</g>
</g>
<!-- loom.graph/successors -->
<g id="node69" class="node node">
<title>loom.graph/successors</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1481.7476" cy="-689.5704" rx="90.3383" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-685.3704" font-family="Times,serif" font-size="14.00" fill="#000000">loom.graph/successors</text>
</g>
<!-- phone&#45;tree.graph/collapse&#45;&gt;loom.graph/successors -->
<g id="edge40" class="edge edge">
<title>phone&#45;tree.graph/collapse&#45;&gt;loom.graph/successors</title>
<g id="a_edge40"><a xlink:title="phone&#45;tree.graph/collapse &#45;&gt; loom.graph/successors">
<path fill="none" stroke="#000000" d="M1237.5588,-689.5704C1282.8015,-689.5704 1335.8877,-689.5704 1380.9864,-689.5704"/>
<polygon fill="#000000" stroke="#000000" points="1381.0749,-693.0705 1391.0749,-689.5704 1381.0749,-686.0705 1381.0749,-693.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/reachable&#45;nodes -->
<g id="node115" class="node node function">
<title>phone&#45;tree.graph/reachable&#45;nodes</title>
<g id="a_node115"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 56&#10;(defn reachable&#45;nodes&#10; &#160;&quot;Returns the set of nodes that are reachable from `starting&#45;nodes`.&quot;&#10; &#160;[neighbors&#45;fn starting&#45;nodes]&#10; &#160;(letfn [(neighbors [node]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(if (= ::start node)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;starting&#45;nodes&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(neighbors&#45;fn node)))]&#10; &#160;&#160;&#160;(set (loom.alg/bf&#45;traverse neighbors ::start))))">
<ellipse fill="#ffffff" stroke="#000000" cx="1481.7476" cy="-581.5704" rx="130.3347" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-577.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/reachable&#45;nodes</text>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/collapse&#45;&gt;phone&#45;tree.graph/reachable&#45;nodes -->
<g id="edge41" class="edge edge">
<title>phone&#45;tree.graph/collapse&#45;&gt;phone&#45;tree.graph/reachable&#45;nodes</title>
<g id="a_edge41"><a xlink:title="phone&#45;tree.graph/collapse &#45;&gt; phone&#45;tree.graph/reachable&#45;nodes">
<path fill="none" stroke="#000000" d="M1206.3586,-676.5522C1231.1433,-669.994 1258.3939,-660.3965 1280.9449,-646.5704 1300.7784,-634.4104 1296.3896,-619.4659 1316.9449,-608.5704 1329.6413,-601.8406 1343.5987,-596.7046 1357.853,-592.7975"/>
<polygon fill="#000000" stroke="#000000" points="1358.9249,-596.1365 1367.7569,-590.2845 1357.2032,-589.3515 1358.9249,-596.1365"/>
</a>
</g>
</g>
<!-- ubergraph.protocols/find&#45;edge -->
<g id="node122" class="node node">
<title>ubergraph.protocols/find&#45;edge</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1481.7476" cy="-743.5704" rx="116.5627" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-739.3704" font-family="Times,serif" font-size="14.00" fill="#000000">ubergraph.protocols/find&#45;edge</text>
</g>
<!-- phone&#45;tree.graph/collapse&#45;&gt;ubergraph.protocols/find&#45;edge -->
<g id="edge42" class="edge edge">
<title>phone&#45;tree.graph/collapse&#45;&gt;ubergraph.protocols/find&#45;edge</title>
<g id="a_edge42"><a xlink:title="phone&#45;tree.graph/collapse &#45;&gt; ubergraph.protocols/find&#45;edge">
<path fill="none" stroke="#000000" d="M1211.9648,-701.4878C1264.2629,-709.6456 1333.9004,-720.5081 1389.3245,-729.1536"/>
<polygon fill="#000000" stroke="#000000" points="1389.0806,-732.6578 1399.5006,-730.7409 1390.1595,-725.7414 1389.0806,-732.6578"/>
</a>
</g>
</g>
<!-- ubergraph.core/digraph -->
<g id="node124" class="node node">
<title>ubergraph.core/digraph</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1930.3771" cy="-1487.5704" rx="92.8986" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-1483.3704" font-family="Times,serif" font-size="14.00" fill="#000000">ubergraph.core/digraph</text>
</g>
<!-- phone&#45;tree.graph/collapse&#45;&gt;ubergraph.core/digraph -->
<g id="edge43" class="edge edge">
<title>phone&#45;tree.graph/collapse&#45;&gt;ubergraph.core/digraph</title>
<g id="a_edge43"><a xlink:title="phone&#45;tree.graph/collapse &#45;&gt; ubergraph.core/digraph">
<path fill="none" stroke="#000000" d="M1157.4203,-707.2897C1190.8994,-735.9072 1253.8449,-795.8759 1280.9449,-862.5704 1322.2125,-964.132 1241.0625,-1275.4525 1316.9449,-1354.5704 1367.9811,-1407.7826 1584.1259,-1353.3349 1646.5503,-1392.5704 1671.9186,-1408.515 1657.4844,-1433.1546 1682.5503,-1449.5704 1725.5554,-1477.7345 1781.6248,-1488.0002 1829.5522,-1490.8875"/>
<polygon fill="#000000" stroke="#000000" points="1829.4849,-1494.3884 1839.6482,-1491.3954 1829.8367,-1487.3973 1829.4849,-1494.3884"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;starting&#45;nodes -->
<g id="node158" class="node node function">
<title>phone&#45;tree.graph/&#45;&gt;starting&#45;nodes</title>
<g id="a_node158"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 65&#10;(defn&#45; &#45;&gt;starting&#45;nodes [g starting&#45;nodes&#45;or&#45;fn]&#10; &#160;(if (fn? starting&#45;nodes&#45;or&#45;fn)&#10; &#160;&#160;&#160;(filter starting&#45;nodes&#45;or&#45;fn (uber/nodes g))&#10; &#160;&#160;&#160;starting&#45;nodes&#45;or&#45;fn))">
<ellipse fill="#ffffff" stroke="#000000" cx="1481.7476" cy="-635.5704" rx="130.5095" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-631.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/&#45;&gt;starting&#45;nodes</text>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/collapse&#45;&gt;phone&#45;tree.graph/&#45;&gt;starting&#45;nodes -->
<g id="edge44" class="edge edge">
<title>phone&#45;tree.graph/collapse&#45;&gt;phone&#45;tree.graph/&#45;&gt;starting&#45;nodes</title>
<g id="a_edge44"><a xlink:title="phone&#45;tree.graph/collapse &#45;&gt; phone&#45;tree.graph/&#45;&gt;starting&#45;nodes">
<path fill="none" stroke="#000000" d="M1211.9648,-677.653C1262.9508,-669.6999 1330.417,-659.176 1385.1264,-650.642"/>
<polygon fill="#000000" stroke="#000000" points="1385.8455,-654.0723 1395.1866,-649.0728 1384.7666,-647.1559 1385.8455,-654.0723"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/collect&#45;fn -->
<g id="node30" class="node node function">
<title>phone&#45;tree.core/collect&#45;fn</title>
<g id="a_node30"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/core.clj, line 23&#10;(defn collect&#45;fn [m k v]&#10; &#160;(update m k collect&#45;val v))">
<ellipse fill="#ffffff" stroke="#000000" cx="1135.565" cy="-135.5704" rx="101.8618" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-131.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.core/collect&#45;fn</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/collect&#45;val -->
<g id="node118" class="node node function">
<title>phone&#45;tree.core/collect&#45;val</title>
<g id="a_node118"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/core.clj, line 16&#10;(defn collect&#45;val [existing v]&#10; &#160;(if (::replace (meta existing))&#10; &#160;&#160;&#160;(recur (vary&#45;meta (empty existing) dissoc ::replace) v)&#10; &#160;&#160;&#160;(if (map? v)&#10; &#160;&#160;&#160;&#160;&#160;(merge existing v)&#10; &#160;&#160;&#160;&#160;&#160;(conj (or existing []) v))))">
<ellipse fill="#ffffff" stroke="#000000" cx="1481.7476" cy="-135.5704" rx="105.236" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-131.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.core/collect&#45;val</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/collect&#45;fn&#45;&gt;phone&#45;tree.core/collect&#45;val -->
<g id="edge45" class="edge edge">
<title>phone&#45;tree.core/collect&#45;fn&#45;&gt;phone&#45;tree.core/collect&#45;val</title>
<g id="a_edge45"><a xlink:title="phone&#45;tree.core/collect&#45;fn &#45;&gt; phone&#45;tree.core/collect&#45;val">
<path fill="none" stroke="#000000" d="M1237.5588,-135.5704C1278.0021,-135.5704 1324.7133,-135.5704 1366.3835,-135.5704"/>
<polygon fill="#000000" stroke="#000000" points="1366.5818,-139.0705 1376.5818,-135.5704 1366.5817,-132.0705 1366.5818,-139.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/first&#45;form&#45;var&#45;&gt;phone&#45;tree.parse.ast/ast&#45;resolve -->
<g id="edge46" class="edge edge">
<title>phone&#45;tree.parse.ast/first&#45;form&#45;var&#45;&gt;phone&#45;tree.parse.ast/ast&#45;resolve</title>
<g id="a_edge46"><a xlink:title="phone&#45;tree.parse.ast/first&#45;form&#45;var &#45;&gt; phone&#45;tree.parse.ast/ast&#45;resolve">
<path fill="none" stroke="#000000" d="M2940.5277,-2317.4037C2960.4049,-2312.2815 2979.3931,-2303.8677 2994.844,-2290.5704 3036.7257,-2254.5265 2991.0473,-2209.9038 3030.844,-2171.5704 3045.4248,-2157.5258 3064.0073,-2147.9234 3083.3905,-2141.3903"/>
<polygon fill="#000000" stroke="#000000" points="3084.4418,-2144.7288 3092.9563,-2138.4236 3082.3683,-2138.0429 3084.4418,-2144.7288"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/form -->
<g id="node123" class="node node function">
<title>phone&#45;tree.parse.ast/form</title>
<g id="a_node123"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/ast.clj, line 11&#10;(defn form&#10; &#160;&quot;Returns the original form for this ast.&quot;&#10; &#160;[ast]&#10; &#160;(or (first (:raw&#45;forms ast))&#10; &#160;&#160;&#160;&#160;&#160;(:form ast)))">
<ellipse fill="#ffffff" stroke="#000000" cx="3194.917" cy="-2317.5704" rx="100.4347" ry="18"/>
<text text-anchor="middle" x="3194.917" y="-2313.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/form</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/first&#45;form&#45;var&#45;&gt;phone&#45;tree.parse.ast/form -->
<g id="edge47" class="edge edge">
<title>phone&#45;tree.parse.ast/first&#45;form&#45;var&#45;&gt;phone&#45;tree.parse.ast/form</title>
<g id="a_edge47"><a xlink:title="phone&#45;tree.parse.ast/first&#45;form&#45;var &#45;&gt; phone&#45;tree.parse.ast/form">
<path fill="none" stroke="#000000" d="M2940.4129,-2317.5704C2987.2305,-2317.5704 3039.4411,-2317.5704 3084.329,-2317.5704"/>
<polygon fill="#000000" stroke="#000000" points="3084.3825,-2321.0705 3094.3824,-2317.5704 3084.3824,-2314.0705 3084.3825,-2321.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/&#45;main -->
<g id="node32" class="node node function">
<title>phone&#45;tree.core/&#45;main</title>
<g id="a_node32"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/core.clj, line 171&#10;(defn &#45;main [&amp; args]&#10; &#160;(run (parse&#45;cli args)))">
<ellipse fill="#ffffff" stroke="#000000" cx="125.7541" cy="-314.5704" rx="88.357" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-310.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.core/&#45;main</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/&#45;main&#45;&gt;phone&#45;tree.core/parse&#45;cli -->
<g id="edge49" class="edge edge">
<title>phone&#45;tree.core/&#45;main&#45;&gt;phone&#45;tree.core/parse&#45;cli</title>
<g id="a_edge49"><a xlink:title="phone&#45;tree.core/&#45;main &#45;&gt; phone&#45;tree.core/parse&#45;cli">
<path fill="none" stroke="#000000" d="M205.8835,-306.8656C231.9474,-304.3594 261.1636,-301.5501 288.3472,-298.9363"/>
<polygon fill="#000000" stroke="#000000" points="289.0362,-302.3863 298.6552,-297.9451 288.3661,-295.4184 289.0362,-302.3863"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/run -->
<g id="node127" class="node node function">
<title>phone&#45;tree.core/run</title>
<g id="a_node127"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/core.clj, line 156&#10;(defn run [opts]&#10; &#160;(binding [log/*level* (:log&#45;level opts :warn)]&#10; &#160;&#160;&#160;(log/debugf &quot;parsed command line %s&quot; opts)&#10; &#160;&#160;&#160;(when&#45;let [exit&#45;code (:exit opts)]&#10; &#160;&#160;&#160;&#160;&#160;(some&#45;&gt; opts :message println)&#10; &#160;&#160;&#160;&#160;&#160;(System/exit exit&#45;code))&#10; &#160;&#160;&#160;(&#45;&gt; (find&#45;namespaces opts)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(prepare&#45;namespaces)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(parse/nss&#45;&gt;graph)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(prune&#45;graph opts)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(print&#45;graph opts))))">
<ellipse fill="#ffffff" stroke="#000000" cx="385.7518" cy="-443.5704" rx="79.6788" ry="18"/>
<text text-anchor="middle" x="385.7518" y="-439.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.core/run</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/&#45;main&#45;&gt;phone&#45;tree.core/run -->
<g id="edge48" class="edge edge">
<title>phone&#45;tree.core/&#45;main&#45;&gt;phone&#45;tree.core/run</title>
<g id="a_edge48"><a xlink:title="phone&#45;tree.core/&#45;main &#45;&gt; phone&#45;tree.core/run">
<path fill="none" stroke="#000000" d="M159.4778,-331.3026C206.561,-354.6634 291.9769,-397.0432 343.3246,-422.5198"/>
<polygon fill="#000000" stroke="#000000" points="341.9853,-425.7623 352.4989,-427.0717 345.0965,-419.4917 341.9853,-425.7623"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/guess&#45;class&#45;&gt;phone&#45;tree.parse.class/guess&#45;class -->
<g id="edge51" class="edge edge">
<title>phone&#45;tree.parse.class/guess&#45;class&#45;&gt;phone&#45;tree.parse.class/guess&#45;class</title>
<g id="a_edge51"><a xlink:title="phone&#45;tree.parse.class/guess&#45;class &#45;&gt; phone&#45;tree.parse.class/guess&#45;class">
<path fill="none" stroke="#000000" d="M2331.2076,-3015.9245C2310.934,-3026.3571 2334.0667,-3036.5704 2400.6058,-3036.5704 2451.5497,-3036.5704 2477.0497,-3030.5836 2477.1057,-3023.0951"/>
<polygon fill="#000000" stroke="#000000" points="2479.5276,-3020.5667 2470.0039,-3015.9245 2474.554,-3025.4925 2479.5276,-3020.5667"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/guess&#45;class* -->
<g id="node72" class="node node multimethod">
<title>phone&#45;tree.parse.class/guess&#45;class*</title>
<g id="a_node72"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/class.clj, line 59&#10;(defmulti guess&#45;class* :op)">
<ellipse fill="#e6e6fa" stroke="#000000" cx="2808.9258" cy="-3306.5704" rx="134.7049" ry="18"/>
<text text-anchor="middle" x="2808.9258" y="-3302.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.class/guess&#45;class*</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/guess&#45;class&#45;&gt;phone&#45;tree.parse.class/guess&#45;class* -->
<g id="edge50" class="edge edge">
<title>phone&#45;tree.parse.class/guess&#45;class&#45;&gt;phone&#45;tree.parse.class/guess&#45;class*</title>
<g id="a_edge50"><a xlink:title="phone&#45;tree.parse.class/guess&#45;class &#45;&gt; phone&#45;tree.parse.class/guess&#45;class*">
<path fill="none" stroke="#000000" d="M2448.6066,-3017.3665C2487.7681,-3032.2908 2543.5269,-3056.3964 2587.0076,-3086.5704 2670.751,-3144.6852 2751.1106,-3236.003 2787.9426,-3280.48"/>
<polygon fill="#000000" stroke="#000000" points="2785.4583,-3282.9697 2794.5108,-3288.4744 2790.8669,-3278.5259 2785.4583,-3282.9697"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _method -->
<g id="node34" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse _method</title>
<g id="a_node34"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/protocol.clj, line 87&#10;(defmethod ast/parse :method&#10; &#160;[{:keys [this interface name body] :as ast}]&#10; &#160;;; &#45; name is the method&#39;s name&#10; &#160;;; &#45; interface is method&#39;s interface (usually attached to a protocol)&#10; &#160;;; &#45; tag is the class (to dispatch on)&#10; &#160;;; &#45; body is the method&#39;s body&#10; &#160;(when&#45;not (default&#45;record&#45;method? ast)&#10; &#160;&#160;&#160;(let [fn&#45;name (munge (str name))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;interface&#45;fn (symbol (.getName interface) fn&#45;name)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;class&#45;fn (symbol (.getName (:tag this)) fn&#45;name)]&#10; &#160;&#160;&#160;&#160;&#160;(concat ;; the class method&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(build/node ast class&#45;fn body)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; a call from the interface&#45;fn to the class method&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; this is equivalent to multimethod dispatch (on class)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(build/edge ast {:src interface&#45;fn, :dest class&#45;fn})))))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="1930.3771" cy="-2407.5704" rx="133.259" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-2403.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse :method</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _method&#45;&gt;phone&#45;tree.parse.build/edge -->
<g id="edge52" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _method&#45;&gt;phone&#45;tree.parse.build/edge</title>
<g id="a_edge52"><a xlink:title="phone&#45;tree.parse.ast/parse :method &#45;&gt; phone&#45;tree.parse.build/edge">
<path fill="none" stroke="#000000" d="M2022.9183,-2394.5812C2075.233,-2392.6955 2138.0132,-2400.4707 2178.2039,-2439.5704 2252.0509,-2511.4128 2151.3499,-2586.9365 2214.2039,-2668.5704 2239.844,-2701.8713 2281.8658,-2721.9267 2319.5265,-2733.8573"/>
<polygon fill="#000000" stroke="#000000" points="2318.9188,-2737.3296 2329.5034,-2736.8647 2320.9391,-2730.6275 2318.9188,-2737.3296"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.protocol/default&#45;record&#45;method? -->
<g id="node126" class="node node function">
<title>phone&#45;tree.parse.protocol/default&#45;record&#45;method?</title>
<g id="a_node126"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/protocol.clj, line 27&#10;(defn default&#45;record&#45;method?&#10; &#160;&quot;Does this ast represent a default `defrecord` method?&quot;&#10; &#160;[{:keys [this interface name] :as ast}]&#10; &#160;(and (record&#45;class? (:tag this))&#10; &#160;&#160;&#160;&#160;&#160;&#160;(contains? @default&#45;record&#45;methods [interface name])))">
<ellipse fill="#ffffff" stroke="#000000" cx="2400.6058" cy="-2409.5704" rx="186.3037" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-2405.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.protocol/default&#45;record&#45;method?</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _method&#45;&gt;phone&#45;tree.parse.protocol/default&#45;record&#45;method? -->
<g id="edge53" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _method&#45;&gt;phone&#45;tree.parse.protocol/default&#45;record&#45;method?</title>
<g id="a_edge53"><a xlink:title="phone&#45;tree.parse.ast/parse :method &#45;&gt; phone&#45;tree.parse.protocol/default&#45;record&#45;method?">
<path fill="none" stroke="#000000" d="M2063.554,-2408.1368C2107.2866,-2408.3228 2156.8544,-2408.5337 2204.2598,-2408.7353"/>
<polygon fill="#000000" stroke="#000000" points="2204.325,-2412.2355 2214.3398,-2408.7782 2204.3549,-2405.2356 2204.325,-2412.2355"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _method&#45;&gt;phone&#45;tree.parse.build/node -->
<g id="edge54" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _method&#45;&gt;phone&#45;tree.parse.build/node</title>
<g id="a_edge54"><a xlink:title="phone&#45;tree.parse.ast/parse :method &#45;&gt; phone&#45;tree.parse.build/node">
<path fill="none" stroke="#000000" d="M1805.1124,-2401.4239C1652.7529,-2393.9479 1397.7051,-2381.4331 1250.2793,-2374.1992"/>
<polygon fill="#000000" stroke="#000000" points="1250.4497,-2370.7035 1240.2901,-2373.7091 1250.1066,-2377.695 1250.4497,-2370.7035"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/tooltip -->
<g id="node35" class="node node function">
<title>phone&#45;tree.graph/tooltip</title>
<g id="a_node35"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 115&#10;(defn tooltip [{:keys [locations]}]&#10; &#160;(&#45;&gt;&gt; (map (fn [{:keys [file line] :as location}]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(format &quot;%s, line %s\n%s&quot; file line (form location))) locations)&#10; &#160;&#160;&#160;&#160;&#160;&#160;(remove str/blank?)&#10; &#160;&#160;&#160;&#160;&#160;&#160;(str/join &quot;\n\n&quot;)&#10; &#160;&#160;&#160;&#160;&#160;&#160;(not&#45;empty)))">
<ellipse fill="#ffffff" stroke="#000000" cx="2400.6058" cy="-1074.5704" rx="95.6253" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-1070.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/tooltip</text>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/tooltip&#45;&gt;clojure.string/join -->
<g id="edge55" class="edge edge">
<title>phone&#45;tree.graph/tooltip&#45;&gt;clojure.string/join</title>
<g id="a_edge55"><a xlink:title="phone&#45;tree.graph/tooltip &#45;&gt; clojure.string/join">
<path fill="none" stroke="#000000" d="M2485.8456,-1082.8593C2521.5061,-1081.6006 2560.6907,-1073.2739 2587.0076,-1047.5704 2655.6922,-980.4868 2569.0288,-913.9686 2623.0076,-834.5704 2751.3559,-645.781 3020.1585,-542.8258 3137.7661,-505.2676"/>
<polygon fill="#000000" stroke="#000000" points="3138.8356,-508.6004 3147.3198,-502.2547 3136.7302,-501.9245 3138.8356,-508.6004"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/form -->
<g id="node38" class="node node function">
<title>phone&#45;tree.graph/form</title>
<g id="a_node38"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 110&#10;(defn form [{:keys [file line end&#45;line]}]&#10; &#160;(let [block (subvec (read&#45;lines file) (dec line) end&#45;line)]&#10; &#160;&#160;&#160;;; TODO: do we care about column and end&#45;column?&#10; &#160;&#160;&#160;(str/join &quot;\n&quot; block)))">
<ellipse fill="#ffffff" stroke="#000000" cx="2808.9258" cy="-861.5704" rx="89.8193" ry="18"/>
<text text-anchor="middle" x="2808.9258" y="-857.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/form</text>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/tooltip&#45;&gt;phone&#45;tree.graph/form -->
<g id="edge56" class="edge edge">
<title>phone&#45;tree.graph/tooltip&#45;&gt;phone&#45;tree.graph/form</title>
<g id="a_edge56"><a xlink:title="phone&#45;tree.graph/tooltip &#45;&gt; phone&#45;tree.graph/form">
<path fill="none" stroke="#000000" d="M2494.9274,-1071.0785C2525.3251,-1067.3197 2558.503,-1060.3241 2587.0076,-1047.5704 2672.4001,-1009.3637 2750.9113,-928.417 2787.422,-887.0575"/>
<polygon fill="#000000" stroke="#000000" points="2790.2193,-889.1751 2794.1538,-879.3378 2784.9435,-884.5744 2790.2193,-889.1751"/>
</a>
</g>
</g>
<!-- clojure.string/blank? -->
<g id="node81" class="node node">
<title>clojure.string/blank?</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="2808.9258" cy="-1074.5704" rx="83.0877" ry="18"/>
<text text-anchor="middle" x="2808.9258" y="-1070.3704" font-family="Times,serif" font-size="14.00" fill="#000000">clojure.string/blank?</text>
</g>
<!-- phone&#45;tree.graph/tooltip&#45;&gt;clojure.string/blank? -->
<g id="edge57" class="edge edge">
<title>phone&#45;tree.graph/tooltip&#45;&gt;clojure.string/blank?</title>
<g id="a_edge57"><a xlink:title="phone&#45;tree.graph/tooltip &#45;&gt; clojure.string/blank?">
<path fill="none" stroke="#000000" d="M2496.5967,-1074.5704C2562.6104,-1074.5704 2649.8386,-1074.5704 2715.3307,-1074.5704"/>
<polygon fill="#000000" stroke="#000000" points="2715.6486,-1078.0705 2725.6485,-1074.5704 2715.6485,-1071.0705 2715.6486,-1078.0705"/>
</a>
</g>
</g>
<!-- clojure.tools.namespace.track/tracker -->
<g id="node36" class="node node">
<title>clojure.tools.namespace.track/tracker</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1481.7476" cy="-343.5704" rx="141.9113" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-339.3704" font-family="Times,serif" font-size="14.00" fill="#000000">clojure.tools.namespace.track/tracker</text>
</g>
<!-- phone&#45;tree.parse.build/node&#45;type clojure.lang.Symbol -->
<g id="node37" class="node node protocol&#45;fn">
<title>phone&#45;tree.parse.build/node&#45;type clojure.lang.Symbol</title>
<g id="a_node37"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 16&#10;(extend&#45;protocol NodeType&#10; &#160;clojure.lang.MultiFn&#10; &#160;(node&#45;type [_] :multimethod)&#10; &#160;clojure.lang.Fn&#10; &#160;(node&#45;type [_] :function)&#10; &#160;#_#_clojure.core.async.impl.protocols.Channel&#10; &#160;(node&#45;type [_] :channel)&#10; &#160;java.lang.Class&#10; &#160;(node&#45;type [_] :class)&#10; &#160;clojure.lang.Var&#10; &#160;(node&#45;type [v]&#10; &#160;&#160;&#160;(cond&#10; &#160;&#160;&#160;&#160;&#160;(:macro (meta v)) :macro&#10; &#160;&#160;&#160;&#160;&#160;(:protocol (meta v)) :protocol&#45;fn&#10; &#160;&#160;&#160;&#160;&#160;:else (node&#45;type (var&#45;get v))))&#10; &#160;clojure.lang.Symbol&#10; &#160;(node&#45;type [s]&#10; &#160;&#160;&#160;(let [v (ns&#45;resolve &#39;clojure.core s)]&#10; &#160;&#160;&#160;&#160;&#160;(cond&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;v (node&#45;type v)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(find&#45;ns s) :namespace&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(and (namespace s) (class? (ns&#45;resolve &#39;clojure.core (symbol (namespace s))))) :method&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;:else nil)))&#10; &#160;;; Defaults&#10; &#160;java.lang.Object&#10; &#160;(node&#45;type [_] nil)&#10; &#160;nil&#10; &#160;(node&#45;type [_] nil))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="3905.0123" cy="-2090.5704" rx="200.8472" ry="18"/>
<text text-anchor="middle" x="3905.0123" y="-2086.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/node&#45;type clojure.lang.Symbol</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;type -->
<g id="node53" class="node node protocol&#45;fn">
<title>phone&#45;tree.parse.build/node&#45;type</title>
<g id="a_node53"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 13&#10;(defprotocol NodeType&#10; &#160;(node&#45;type [this]))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="3530.8009" cy="-2198.5704" rx="126.9869" ry="18"/>
<text text-anchor="middle" x="3530.8009" y="-2194.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/node&#45;type</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;type clojure.lang.Symbol&#45;&gt;phone&#45;tree.parse.build/node&#45;type -->
<g id="edge58" class="edge edge">
<title>phone&#45;tree.parse.build/node&#45;type clojure.lang.Symbol&#45;&gt;phone&#45;tree.parse.build/node&#45;type</title>
<g id="a_edge58"><a xlink:title="phone&#45;tree.parse.build/node&#45;type clojure.lang.Symbol &#45;&gt; phone&#45;tree.parse.build/node&#45;type">
<path fill="none" stroke="#000000" d="M3805.4234,-2106.2096C3772.2614,-2110.684 3735.4262,-2116.9002 3702.6119,-2126.5704 3660.3979,-2139.0106 3615.5059,-2160.4927 3582.1997,-2176.934"/>
<polygon fill="#000000" stroke="#000000" points="3580.5343,-2173.853 3573.1248,-2181.4259 3583.6397,-2180.1265 3580.5343,-2173.853"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/form&#45;&gt;phone&#45;tree.graph/read&#45;lines -->
<g id="edge59" class="edge edge">
<title>phone&#45;tree.graph/form&#45;&gt;phone&#45;tree.graph/read&#45;lines</title>
<g id="a_edge59"><a xlink:title="phone&#45;tree.graph/form &#45;&gt; phone&#45;tree.graph/read&#45;lines">
<path fill="none" stroke="#000000" d="M2898.9364,-861.5704C2951.9994,-861.5704 3019.7513,-861.5704 3077.0397,-861.5704"/>
<polygon fill="#000000" stroke="#000000" points="3077.2401,-865.0705 3087.2401,-861.5704 3077.2401,-858.0705 3077.2401,-865.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/form&#45;&gt;clojure.string/join -->
<g id="edge60" class="edge edge">
<title>phone&#45;tree.graph/form&#45;&gt;clojure.string/join</title>
<g id="a_edge60"><a xlink:title="phone&#45;tree.graph/form &#45;&gt; clojure.string/join">
<path fill="none" stroke="#000000" d="M2898.6218,-859.3113C2931.2987,-854.7838 2967.0148,-845.1515 2994.844,-825.5704 3107.3524,-746.4077 3166.943,-582.0828 3187.0253,-516.4923"/>
<polygon fill="#000000" stroke="#000000" points="3190.3995,-517.4249 3189.9112,-506.8413 3183.6929,-515.4194 3190.3995,-517.4249"/>
</a>
</g>
</g>
<!-- loom.graph/digraph -->
<g id="node41" class="node node">
<title>loom.graph/digraph</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1481.7476" cy="-997.5704" rx="80.2065" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-993.3704" font-family="Times,serif" font-size="14.00" fill="#000000">loom.graph/digraph</text>
</g>
<!-- phone&#45;tree.graph/digraph -->
<g id="node42" class="node node function">
<title>phone&#45;tree.graph/digraph</title>
<g id="a_node42"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 24&#10;(defn digraph&#10; &#160;&quot;loom.graph/digraph wrapper that allows nodes and edges to have attrs&quot;&#10; &#160;[&amp; nodes&#45;and&#45;edges]&#10; &#160;(reduce (fn [g init]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(cond&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(not (sequential? init)) (lg/add&#45;nodes g init)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(map? (second init)) (&#45;&gt; g&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(lg/add&#45;nodes (first init))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(merge&#45;attrs (first init) (second init)))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:else (&#45;&gt; g&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(lg/add&#45;edges (take 2 init))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(merge&#45;attrs (vec (take 2 init)) (nth init 2 nil)))))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(lg/digraph)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;nodes&#45;and&#45;edges))">
<ellipse fill="#ffffff" stroke="#000000" cx="1135.565" cy="-1024.5704" rx="99.9671" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-1020.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/digraph</text>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/digraph&#45;&gt;loom.graph/add&#45;edges -->
<g id="edge61" class="edge edge">
<title>phone&#45;tree.graph/digraph&#45;&gt;loom.graph/add&#45;edges</title>
<g id="a_edge61"><a xlink:title="phone&#45;tree.graph/digraph &#45;&gt; loom.graph/add&#45;edges">
<path fill="none" stroke="#000000" d="M1227.4267,-1031.735C1277.1811,-1035.6155 1338.5158,-1040.3992 1388.485,-1044.2965"/>
<polygon fill="#000000" stroke="#000000" points="1388.4015,-1047.8005 1398.6434,-1045.0888 1388.9458,-1040.8217 1388.4015,-1047.8005"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/digraph&#45;&gt;loom.graph/digraph -->
<g id="edge62" class="edge edge">
<title>phone&#45;tree.graph/digraph&#45;&gt;loom.graph/digraph</title>
<g id="a_edge62"><a xlink:title="phone&#45;tree.graph/digraph &#45;&gt; loom.graph/digraph">
<path fill="none" stroke="#000000" d="M1227.4267,-1017.4058C1279.6323,-1013.3341 1344.5875,-1008.268 1395.785,-1004.2749"/>
<polygon fill="#000000" stroke="#000000" points="1396.1357,-1007.7583 1405.8332,-1003.4912 1395.5913,-1000.7795 1396.1357,-1007.7583"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/merge&#45;attrs -->
<g id="node45" class="node node function">
<title>phone&#45;tree.graph/merge&#45;attrs</title>
<g id="a_node45"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 13&#10;(defn merge&#45;attrs [g node&#45;or&#45;edge attrs]&#10; &#160;(reduce&#45;kv (fn [g k v] (la/add&#45;attr g node&#45;or&#45;edge k v))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;g&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;attrs))">
<ellipse fill="#ffffff" stroke="#000000" cx="1481.7476" cy="-1419.5704" rx="112.6604" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-1415.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/merge&#45;attrs</text>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/digraph&#45;&gt;phone&#45;tree.graph/merge&#45;attrs -->
<g id="edge63" class="edge edge">
<title>phone&#45;tree.graph/digraph&#45;&gt;phone&#45;tree.graph/merge&#45;attrs</title>
<g id="a_edge63"><a xlink:title="phone&#45;tree.graph/digraph &#45;&gt; phone&#45;tree.graph/merge&#45;attrs">
<path fill="none" stroke="#000000" d="M1155.6989,-1042.3693C1187.6894,-1071.8673 1249.6958,-1134.2444 1280.9449,-1200.5704 1317.018,-1277.1353 1257.1452,-1327.675 1316.9449,-1387.5704 1329.081,-1399.7259 1344.3634,-1407.9807 1360.7002,-1413.4865"/>
<polygon fill="#000000" stroke="#000000" points="1359.8404,-1416.8828 1370.4251,-1416.4193 1361.8616,-1410.1809 1359.8404,-1416.8828"/>
</a>
</g>
</g>
<!-- loom.graph/add&#45;nodes -->
<g id="node109" class="node node">
<title>loom.graph/add&#45;nodes</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1481.7476" cy="-943.5704" rx="89.3693" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-939.3704" font-family="Times,serif" font-size="14.00" fill="#000000">loom.graph/add&#45;nodes</text>
</g>
<!-- phone&#45;tree.graph/digraph&#45;&gt;loom.graph/add&#45;nodes -->
<g id="edge64" class="edge edge">
<title>phone&#45;tree.graph/digraph&#45;&gt;loom.graph/add&#45;nodes</title>
<g id="a_edge64"><a xlink:title="phone&#45;tree.graph/digraph &#45;&gt; loom.graph/add&#45;nodes">
<path fill="none" stroke="#000000" d="M1182.8619,-1008.6909C1219.2088,-996.9278 1270.8348,-981.1664 1316.9449,-970.5704 1342.888,-964.6088 1371.4201,-959.4505 1397.3473,-955.2861"/>
<polygon fill="#000000" stroke="#000000" points="1398.1902,-958.6965 1407.5225,-953.6807 1397.0992,-951.782 1398.1902,-958.6965"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/filter&#45;ancestors -->
<g id="node43" class="node node function">
<title>phone&#45;tree.graph/filter&#45;ancestors</title>
<g id="a_node43"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 77&#10;(defn filter&#45;ancestors&#10; &#160;&quot;Returns a graph with nodes and edges that are ancestors of `starting&#45;nodes`&#10; &#160;(a coll or node filtering function).&quot;&#10; &#160;[g starting&#45;nodes&#45;or&#45;fn]&#10; &#160;(let [starting&#45;nodes (&#45;&gt;starting&#45;nodes g starting&#45;nodes&#45;or&#45;fn)]&#10; &#160;&#160;&#160;(filter&#45;nodes g (reachable&#45;nodes (uber/predecessors g) starting&#45;nodes))))">
<ellipse fill="#ffffff" stroke="#000000" cx="1135.565" cy="-565.5704" rx="125.1957" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-561.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/filter&#45;ancestors</text>
</a>
</g>
</g>
<!-- loom.graph/predecessors -->
<g id="node111" class="node node">
<title>loom.graph/predecessors</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1481.7476" cy="-473.5704" rx="98.0394" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-469.3704" font-family="Times,serif" font-size="14.00" fill="#000000">loom.graph/predecessors</text>
</g>
<!-- phone&#45;tree.graph/filter&#45;ancestors&#45;&gt;loom.graph/predecessors -->
<g id="edge67" class="edge edge">
<title>phone&#45;tree.graph/filter&#45;ancestors&#45;&gt;loom.graph/predecessors</title>
<g id="a_edge67"><a xlink:title="phone&#45;tree.graph/filter&#45;ancestors &#45;&gt; loom.graph/predecessors">
<path fill="none" stroke="#000000" d="M1176.6761,-548.4113C1213.0077,-533.836 1267.7219,-513.3095 1316.9449,-500.5704 1340.6275,-494.4412 1366.6014,-489.4193 1390.7837,-485.4405"/>
<polygon fill="#000000" stroke="#000000" points="1391.3469,-488.895 1400.6663,-483.8552 1390.2381,-481.9834 1391.3469,-488.895"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/filter&#45;ancestors&#45;&gt;phone&#45;tree.graph/reachable&#45;nodes -->
<g id="edge68" class="edge edge">
<title>phone&#45;tree.graph/filter&#45;ancestors&#45;&gt;phone&#45;tree.graph/reachable&#45;nodes</title>
<g id="a_edge68"><a xlink:title="phone&#45;tree.graph/filter&#45;ancestors &#45;&gt; phone&#45;tree.graph/reachable&#45;nodes">
<path fill="none" stroke="#000000" d="M1254.7014,-571.0767C1284.7493,-572.4654 1317.2075,-573.9656 1347.9241,-575.3853"/>
<polygon fill="#000000" stroke="#000000" points="1348.1173,-578.8979 1358.2682,-575.8634 1348.4405,-571.9053 1348.1173,-578.8979"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/filter&#45;nodes -->
<g id="node129" class="node node function">
<title>phone&#45;tree.graph/filter&#45;nodes</title>
<g id="a_node129"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 49&#10;(defn filter&#45;nodes&#10; &#160;&quot;Filters nodes and edges given a function `f` that takes a node id.&#10;&#10; &#160;Edges will be included if both :src and :dest match.&quot;&#10; &#160;[g f]&#10; &#160;(remove&#45;nodes g (complement f)))">
<ellipse fill="#ffffff" stroke="#000000" cx="1481.7476" cy="-527.5704" rx="112.6518" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-523.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/filter&#45;nodes</text>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/filter&#45;ancestors&#45;&gt;phone&#45;tree.graph/filter&#45;nodes -->
<g id="edge66" class="edge edge">
<title>phone&#45;tree.graph/filter&#45;ancestors&#45;&gt;phone&#45;tree.graph/filter&#45;nodes</title>
<g id="a_edge66"><a xlink:title="phone&#45;tree.graph/filter&#45;ancestors &#45;&gt; phone&#45;tree.graph/filter&#45;nodes">
<path fill="none" stroke="#000000" d="M1235.2309,-554.6302C1280.1703,-549.6973 1333.2154,-543.8746 1378.5651,-538.8966"/>
<polygon fill="#000000" stroke="#000000" points="1379.1573,-542.3527 1388.7156,-537.7824 1378.3934,-535.3945 1379.1573,-542.3527"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/filter&#45;ancestors&#45;&gt;phone&#45;tree.graph/&#45;&gt;starting&#45;nodes -->
<g id="edge65" class="edge edge">
<title>phone&#45;tree.graph/filter&#45;ancestors&#45;&gt;phone&#45;tree.graph/&#45;&gt;starting&#45;nodes</title>
<g id="a_edge65"><a xlink:title="phone&#45;tree.graph/filter&#45;ancestors &#45;&gt; phone&#45;tree.graph/&#45;&gt;starting&#45;nodes">
<path fill="none" stroke="#000000" d="M1223.2457,-578.4176C1242.4648,-582.1832 1262.5567,-586.8636 1280.9449,-592.5704 1297.6672,-597.7602 1300.1685,-603.5585 1316.9449,-608.5704 1334.9237,-613.9415 1354.3449,-618.3225 1373.3303,-621.8707"/>
<polygon fill="#000000" stroke="#000000" points="1372.7464,-625.3218 1383.2087,-623.6512 1373.9881,-618.4328 1372.7464,-625.3218"/>
</a>
</g>
</g>
<!-- dorothy.core/safe&#45;id? -->
<g id="node44" class="node node">
<title>dorothy.core/safe&#45;id?</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1481.7476" cy="-1619.5704" rx="84.8272" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-1615.3704" font-family="Times,serif" font-size="14.00" fill="#000000">dorothy.core/safe&#45;id?</text>
</g>
<!-- phone&#45;tree.graph/merge&#45;attrs&#45;&gt;loom.attr/add&#45;attr -->
<g id="edge69" class="edge edge">
<title>phone&#45;tree.graph/merge&#45;attrs&#45;&gt;loom.attr/add&#45;attr</title>
<g id="a_edge69"><a xlink:title="phone&#45;tree.graph/merge&#45;attrs &#45;&gt; loom.attr/add&#45;attr">
<path fill="none" stroke="#000000" d="M1534.58,-1435.5916C1567.9322,-1446.8523 1611.232,-1463.6289 1646.5503,-1484.5704 1664.4652,-1495.1928 1665.6647,-1502.3781 1682.5503,-1514.5704 1753.8828,-1566.0761 1842.5022,-1618.5816 1892.1148,-1647.0208"/>
<polygon fill="#000000" stroke="#000000" points="1890.4924,-1650.1247 1900.9117,-1652.0453 1893.9642,-1644.0463 1890.4924,-1650.1247"/>
</a>
</g>
</g>
<!-- phone&#45;tree.html/mini&#45;hbs -->
<g id="node46" class="node node function">
<title>phone&#45;tree.html/mini&#45;hbs</title>
<g id="a_node46"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/html.clj, line 9&#10;(defn mini&#45;hbs&#10; &#160;&quot;Mini hbs renderer&quot;&#10; &#160;[template context]&#10; &#160;(&#45;&gt; template&#10; &#160;&#160;&#160;&#160;&#160;(str/replace #&quot;\{\{&gt;\s*(\S+)\s*\}\}&quot; (fn [[_ file]]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(read&#45;html&#45;resource file)))&#10; &#160;&#160;&#160;&#160;&#160;(str/replace #&quot;\{\{\s*(\S+)\s*\}\}&quot; (fn [[_ k]]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(get context (keyword k))))))">
<ellipse fill="#ffffff" stroke="#000000" cx="1481.7476" cy="-889.5704" rx="100.4862" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-885.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.html/mini&#45;hbs</text>
</a>
</g>
</g>
<!-- phone&#45;tree.html/read&#45;html&#45;resource -->
<g id="node78" class="node node function">
<title>phone&#45;tree.html/read&#45;html&#45;resource</title>
<g id="a_node78"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/html.clj, line 6&#10;(defn read&#45;html&#45;resource [filename]&#10; &#160;(slurp (io/resource (str &quot;html/&quot; filename))))">
<ellipse fill="#ffffff" stroke="#000000" cx="1930.3771" cy="-821.5704" rx="136.1402" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-817.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.html/read&#45;html&#45;resource</text>
</a>
</g>
</g>
<!-- phone&#45;tree.html/mini&#45;hbs&#45;&gt;phone&#45;tree.html/read&#45;html&#45;resource -->
<g id="edge70" class="edge edge">
<title>phone&#45;tree.html/mini&#45;hbs&#45;&gt;phone&#45;tree.html/read&#45;html&#45;resource</title>
<g id="a_edge70"><a xlink:title="phone&#45;tree.html/mini&#45;hbs &#45;&gt; phone&#45;tree.html/read&#45;html&#45;resource">
<path fill="none" stroke="#000000" d="M1550.3812,-876.4068C1589.1117,-869.1945 1638.4451,-860.3673 1682.5503,-853.5704 1726.9087,-846.7345 1775.8888,-840.1975 1818.5106,-834.8344"/>
<polygon fill="#000000" stroke="#000000" points="1819.1452,-838.2823 1828.6331,-833.5676 1818.2759,-831.3365 1819.1452,-838.2823"/>
</a>
</g>
</g>
<!-- phone&#45;tree.html/mini&#45;hbs&#45;&gt;clojure.string/replace -->
<g id="edge71" class="edge edge">
<title>phone&#45;tree.html/mini&#45;hbs&#45;&gt;clojure.string/replace</title>
<g id="a_edge71"><a xlink:title="phone&#45;tree.html/mini&#45;hbs &#45;&gt; clojure.string/replace">
<path fill="none" stroke="#000000" d="M1576.7212,-883.7723C1712.1701,-877.8713 1967.7369,-875.5459 2178.2039,-924.5704 2245.7446,-940.3028 2318.5525,-975.5996 2361.818,-998.7287"/>
<polygon fill="#000000" stroke="#000000" points="2360.3894,-1001.935 2370.8509,-1003.6109 2363.7178,-995.777 2360.3894,-1001.935"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/filter&#45;descendants -->
<g id="node47" class="node node function">
<title>phone&#45;tree.graph/filter&#45;descendants</title>
<g id="a_node47"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 70&#10;(defn filter&#45;descendants&#10; &#160;&quot;Returns a graph with nodes and edges that are descendants of `starting&#45;nodes`&#10; &#160;(a coll or node filtering function).&quot;&#10; &#160;[g starting&#45;nodes&#45;or&#45;fn]&#10; &#160;(let [starting&#45;nodes (&#45;&gt;starting&#45;nodes g starting&#45;nodes&#45;or&#45;fn)]&#10; &#160;&#160;&#160;(filter&#45;nodes g (reachable&#45;nodes (uber/successors g) starting&#45;nodes))))">
<ellipse fill="#ffffff" stroke="#000000" cx="1135.565" cy="-619.5704" rx="134.843" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-615.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/filter&#45;descendants</text>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/filter&#45;descendants&#45;&gt;loom.graph/successors -->
<g id="edge72" class="edge edge">
<title>phone&#45;tree.graph/filter&#45;descendants&#45;&gt;loom.graph/successors</title>
<g id="a_edge72"><a xlink:title="phone&#45;tree.graph/filter&#45;descendants &#45;&gt; loom.graph/successors">
<path fill="none" stroke="#000000" d="M1198.2824,-635.588C1233.105,-644.1914 1277.279,-654.6295 1316.9449,-662.5704 1343.5399,-667.8945 1372.7049,-672.933 1399.0103,-677.1836"/>
<polygon fill="#000000" stroke="#000000" points="1398.5133,-680.6485 1408.9408,-678.773 1399.6196,-673.7365 1398.5133,-680.6485"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/filter&#45;descendants&#45;&gt;phone&#45;tree.graph/reachable&#45;nodes -->
<g id="edge73" class="edge edge">
<title>phone&#45;tree.graph/filter&#45;descendants&#45;&gt;phone&#45;tree.graph/reachable&#45;nodes</title>
<g id="a_edge73"><a xlink:title="phone&#45;tree.graph/filter&#45;descendants &#45;&gt; phone&#45;tree.graph/reachable&#45;nodes">
<path fill="none" stroke="#000000" d="M1239.9007,-608.1176C1280.8227,-603.6256 1327.8671,-598.4617 1369.5222,-593.8892"/>
<polygon fill="#000000" stroke="#000000" points="1370.1512,-597.3413 1379.7096,-592.771 1369.3873,-590.3831 1370.1512,-597.3413"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/filter&#45;descendants&#45;&gt;phone&#45;tree.graph/filter&#45;nodes -->
<g id="edge74" class="edge edge">
<title>phone&#45;tree.graph/filter&#45;descendants&#45;&gt;phone&#45;tree.graph/filter&#45;nodes</title>
<g id="a_edge74"><a xlink:title="phone&#45;tree.graph/filter&#45;descendants &#45;&gt; phone&#45;tree.graph/filter&#45;nodes">
<path fill="none" stroke="#000000" d="M1240.7568,-608.2472C1254.7562,-604.4077 1268.5409,-599.315 1280.9449,-592.5704 1301.3834,-581.4572 1296.3896,-565.4659 1316.9449,-554.5704 1332.256,-546.4546 1349.401,-540.6567 1366.689,-536.5368"/>
<polygon fill="#000000" stroke="#000000" points="1367.8555,-539.8641 1376.8717,-534.3001 1366.3536,-533.0271 1367.8555,-539.8641"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/filter&#45;descendants&#45;&gt;phone&#45;tree.graph/&#45;&gt;starting&#45;nodes -->
<g id="edge75" class="edge edge">
<title>phone&#45;tree.graph/filter&#45;descendants&#45;&gt;phone&#45;tree.graph/&#45;&gt;starting&#45;nodes</title>
<g id="a_edge75"><a xlink:title="phone&#45;tree.graph/filter&#45;descendants &#45;&gt; phone&#45;tree.graph/&#45;&gt;starting&#45;nodes">
<path fill="none" stroke="#000000" d="M1263.4871,-625.4827C1290.8477,-626.7473 1319.8274,-628.0867 1347.4214,-629.3621"/>
<polygon fill="#000000" stroke="#000000" points="1347.3684,-632.8632 1357.5194,-629.8288 1347.6917,-625.8707 1347.3684,-632.8632"/>
</a>
</g>
</g>
<!-- loom.graph/remove&#45;nodes -->
<g id="node48" class="node node">
<title>loom.graph/remove&#45;nodes</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="2400.6058" cy="-527.5704" rx="103.3672" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-523.3704" font-family="Times,serif" font-size="14.00" fill="#000000">loom.graph/remove&#45;nodes</text>
</g>
<!-- java.io.StringWriter/. -->
<g id="node97" class="node node">
<title>java.io.StringWriter/.</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1481.7476" cy="-1565.5704" rx="85.3024" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-1561.3704" font-family="Times,serif" font-size="14.00" fill="#000000">java.io.StringWriter/.</text>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;csv&#45;&gt;java.io.StringWriter/. -->
<g id="edge78" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;csv&#45;&gt;java.io.StringWriter/.</title>
<g id="a_edge78"><a xlink:title="phone&#45;tree.graph/&#45;&gt;csv &#45;&gt; java.io.StringWriter/.">
<path fill="none" stroke="#000000" d="M1228.0611,-1281.6704C1247.7972,-1285.9933 1266.8989,-1294.1202 1280.9449,-1308.5704 1353.062,-1382.7628 1244.044,-1465.148 1316.9449,-1538.5704 1336.1456,-1557.9084 1363.4631,-1566.686 1390.3487,-1570.0509"/>
<polygon fill="#000000" stroke="#000000" points="1390.3131,-1573.565 1400.6139,-1571.0863 1391.0157,-1566.6004 1390.3131,-1573.565"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;topology -->
<g id="node100" class="node node function">
<title>phone&#45;tree.graph/&#45;&gt;topology</title>
<g id="a_node100"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 196&#10;(defn &#45;&gt;topology&#10; &#160;&quot;Transforms a graph into a lein&#45;topology compatible format:&#10; &#160;a map of {[src dest] call&#45;count}&quot;&#10; &#160;[g]&#10; &#160;(&#45;&gt;&gt; (uber/edges g)&#10; &#160;&#160;&#160;&#160;&#160;&#160;(map (fn [e]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[[(uber/src e) (uber/dest e)] (or (uber/attr g e :count) 1)]))&#10; &#160;&#160;&#160;&#160;&#160;&#160;(into {})))">
<ellipse fill="#ffffff" stroke="#000000" cx="1481.7476" cy="-1273.5704" rx="112.1921" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-1269.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/&#45;&gt;topology</text>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;csv&#45;&gt;phone&#45;tree.graph/&#45;&gt;topology -->
<g id="edge76" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;csv&#45;&gt;phone&#45;tree.graph/&#45;&gt;topology</title>
<g id="a_edge76"><a xlink:title="phone&#45;tree.graph/&#45;&gt;csv &#45;&gt; phone&#45;tree.graph/&#45;&gt;topology">
<path fill="none" stroke="#000000" d="M1227.4267,-1279.4475C1268.2172,-1278.5049 1316.7913,-1277.3824 1360.5048,-1276.3722"/>
<polygon fill="#000000" stroke="#000000" points="1360.7091,-1279.8685 1370.6255,-1276.1383 1360.5473,-1272.8704 1360.7091,-1279.8685"/>
</a>
</g>
</g>
<!-- clojure.data.csv/write&#45;csv -->
<g id="node179" class="node node">
<title>clojure.data.csv/write&#45;csv</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1481.7476" cy="-1511.5704" rx="100.9193" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-1507.3704" font-family="Times,serif" font-size="14.00" fill="#000000">clojure.data.csv/write&#45;csv</text>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;csv&#45;&gt;clojure.data.csv/write&#45;csv -->
<g id="edge77" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;csv&#45;&gt;clojure.data.csv/write&#45;csv</title>
<g id="a_edge77"><a xlink:title="phone&#45;tree.graph/&#45;&gt;csv &#45;&gt; clojure.data.csv/write&#45;csv">
<path fill="none" stroke="#000000" d="M1228.2786,-1282.3727C1247.7701,-1286.7132 1266.71,-1294.6713 1280.9449,-1308.5704 1336.5145,-1362.8292 1261.5971,-1425.0854 1316.9449,-1479.5704 1331.6709,-1494.0668 1350.8806,-1502.9882 1370.961,-1508.3105"/>
<polygon fill="#000000" stroke="#000000" points="1370.3369,-1511.7592 1380.8727,-1510.6429 1371.9403,-1504.9453 1370.3369,-1511.7592"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.namespace -->
<g id="node50" class="node node namespace">
<title>phone&#45;tree.parse.namespace</title>
<g id="a_node50"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/namespace.clj, line 1&#10;(ns phone&#45;tree.parse.namespace&#10; &#160;&quot;Clojure namespace parsing.&quot;&#10; &#160;(:require [phone&#45;tree.parse.ast :as ast]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.build :as build]))">
<ellipse fill="#ffb6c1" stroke="#000000" cx="125.7541" cy="-580.5704" rx="109.572" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-576.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.namespace</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;type clojure.lang.MultiFn -->
<g id="node51" class="node node protocol&#45;fn">
<title>phone&#45;tree.parse.build/node&#45;type clojure.lang.MultiFn</title>
<g id="a_node51"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 16&#10;(extend&#45;protocol NodeType&#10; &#160;clojure.lang.MultiFn&#10; &#160;(node&#45;type [_] :multimethod)&#10; &#160;clojure.lang.Fn&#10; &#160;(node&#45;type [_] :function)&#10; &#160;#_#_clojure.core.async.impl.protocols.Channel&#10; &#160;(node&#45;type [_] :channel)&#10; &#160;java.lang.Class&#10; &#160;(node&#45;type [_] :class)&#10; &#160;clojure.lang.Var&#10; &#160;(node&#45;type [v]&#10; &#160;&#160;&#160;(cond&#10; &#160;&#160;&#160;&#160;&#160;(:macro (meta v)) :macro&#10; &#160;&#160;&#160;&#160;&#160;(:protocol (meta v)) :protocol&#45;fn&#10; &#160;&#160;&#160;&#160;&#160;:else (node&#45;type (var&#45;get v))))&#10; &#160;clojure.lang.Symbol&#10; &#160;(node&#45;type [s]&#10; &#160;&#160;&#160;(let [v (ns&#45;resolve &#39;clojure.core s)]&#10; &#160;&#160;&#160;&#160;&#160;(cond&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;v (node&#45;type v)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(find&#45;ns s) :namespace&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(and (namespace s) (class? (ns&#45;resolve &#39;clojure.core (symbol (namespace s))))) :method&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;:else nil)))&#10; &#160;;; Defaults&#10; &#160;java.lang.Object&#10; &#160;(node&#45;type [_] nil)&#10; &#160;nil&#10; &#160;(node&#45;type [_] nil))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="3905.0123" cy="-2036.5704" rx="202.3008" ry="18"/>
<text text-anchor="middle" x="3905.0123" y="-2032.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/node&#45;type clojure.lang.MultiFn</text>
</a>
</g>
</g>
<!-- phone&#45;tree.log/logf -->
<g id="node160" class="node node function">
<title>phone&#45;tree.log/logf</title>
<g id="a_node160"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/log.clj, line 25&#10;(defn logf&#10; &#160;[level fmt &amp; args]&#10; &#160;(when (enabled? level)&#10; &#160;&#160;&#160;(binding [*out* *err*]&#10; &#160;&#160;&#160;&#160;&#160;(apply printf fmt args)&#10; &#160;&#160;&#160;&#160;&#160;(println))))">
<ellipse fill="#ffffff" stroke="#000000" cx="3905.0123" cy="-3017.5704" rx="78.2599" ry="18"/>
<text text-anchor="middle" x="3905.0123" y="-3013.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.log/logf</text>
</a>
</g>
</g>
<!-- phone&#45;tree.log/warnf&#45;&gt;phone&#45;tree.log/logf -->
<g id="edge79" class="edge edge">
<title>phone&#45;tree.log/warnf&#45;&gt;phone&#45;tree.log/logf</title>
<g id="a_edge79"><a xlink:title="phone&#45;tree.log/warnf &#45;&gt; phone&#45;tree.log/logf">
<path fill="none" stroke="#000000" d="M3615.7153,-3017.5704C3675.6465,-3017.5704 3755.7557,-3017.5704 3816.4782,-3017.5704"/>
<polygon fill="#000000" stroke="#000000" points="3816.8146,-3021.0705 3826.8145,-3017.5704 3816.8145,-3014.0705 3816.8146,-3021.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;type&#45;&gt;phone&#45;tree.parse.build/node&#45;type clojure.lang.Symbol -->
<g id="edge82" class="edge edge">
<title>phone&#45;tree.parse.build/node&#45;type&#45;&gt;phone&#45;tree.parse.build/node&#45;type clojure.lang.Symbol</title>
<g id="a_edge82"><a xlink:title="phone&#45;tree.parse.build/node&#45;type &#45;&gt; phone&#45;tree.parse.build/node&#45;type clojure.lang.Symbol">
<path fill="none" stroke="#000000" d="M3551.1382,-2180.6656C3582.4903,-2159.3186 3645.0416,-2125.536 3702.6119,-2108.5704 3710.0836,-2106.3685 3717.7637,-2104.3458 3725.5615,-2102.4932"/>
<polygon fill="#000000" stroke="#000000" points="3726.5184,-2105.8651 3735.4948,-2100.237 3724.9679,-2099.039 3726.5184,-2105.8651"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;type&#45;&gt;phone&#45;tree.parse.build/node&#45;type clojure.lang.MultiFn -->
<g id="edge81" class="edge edge">
<title>phone&#45;tree.parse.build/node&#45;type&#45;&gt;phone&#45;tree.parse.build/node&#45;type clojure.lang.MultiFn</title>
<g id="a_edge81"><a xlink:title="phone&#45;tree.parse.build/node&#45;type &#45;&gt; phone&#45;tree.parse.build/node&#45;type clojure.lang.MultiFn">
<path fill="none" stroke="#000000" d="M3547.2732,-2180.4457C3575.7045,-2150.4711 3637.2545,-2091.1494 3702.6119,-2063.5704 3714.8989,-2058.3856 3727.9454,-2054.1416 3741.2629,-2050.6739"/>
<polygon fill="#000000" stroke="#000000" points="3742.1236,-2054.0666 3751.001,-2048.2836 3740.4549,-2047.2684 3742.1236,-2054.0666"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;type java.lang.Object -->
<g id="node67" class="node node protocol&#45;fn">
<title>phone&#45;tree.parse.build/node&#45;type java.lang.Object</title>
<g id="a_node67"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 16&#10;(extend&#45;protocol NodeType&#10; &#160;clojure.lang.MultiFn&#10; &#160;(node&#45;type [_] :multimethod)&#10; &#160;clojure.lang.Fn&#10; &#160;(node&#45;type [_] :function)&#10; &#160;#_#_clojure.core.async.impl.protocols.Channel&#10; &#160;(node&#45;type [_] :channel)&#10; &#160;java.lang.Class&#10; &#160;(node&#45;type [_] :class)&#10; &#160;clojure.lang.Var&#10; &#160;(node&#45;type [v]&#10; &#160;&#160;&#160;(cond&#10; &#160;&#160;&#160;&#160;&#160;(:macro (meta v)) :macro&#10; &#160;&#160;&#160;&#160;&#160;(:protocol (meta v)) :protocol&#45;fn&#10; &#160;&#160;&#160;&#160;&#160;:else (node&#45;type (var&#45;get v))))&#10; &#160;clojure.lang.Symbol&#10; &#160;(node&#45;type [s]&#10; &#160;&#160;&#160;(let [v (ns&#45;resolve &#39;clojure.core s)]&#10; &#160;&#160;&#160;&#160;&#160;(cond&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;v (node&#45;type v)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(find&#45;ns s) :namespace&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(and (namespace s) (class? (ns&#45;resolve &#39;clojure.core (symbol (namespace s))))) :method&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;:else nil)))&#10; &#160;;; Defaults&#10; &#160;java.lang.Object&#10; &#160;(node&#45;type [_] nil)&#10; &#160;nil&#10; &#160;(node&#45;type [_] nil))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="3905.0123" cy="-2360.5704" rx="187.3065" ry="18"/>
<text text-anchor="middle" x="3905.0123" y="-2356.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/node&#45;type java.lang.Object</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;type&#45;&gt;phone&#45;tree.parse.build/node&#45;type java.lang.Object -->
<g id="edge86" class="edge edge">
<title>phone&#45;tree.parse.build/node&#45;type&#45;&gt;phone&#45;tree.parse.build/node&#45;type java.lang.Object</title>
<g id="a_edge86"><a xlink:title="phone&#45;tree.parse.build/node&#45;type &#45;&gt; phone&#45;tree.parse.build/node&#45;type java.lang.Object">
<path fill="none" stroke="#000000" d="M3547.2732,-2216.6951C3575.7045,-2246.6697 3637.2545,-2305.9914 3702.6119,-2333.5704 3716.0133,-2339.2254 3730.3183,-2343.7613 3744.8929,-2347.3915"/>
<polygon fill="#000000" stroke="#000000" points="3744.4837,-2350.8903 3755.0184,-2349.7626 3746.0798,-2344.0746 3744.4837,-2350.8903"/>
</a>
</g>
</g>
<!-- phone_tree.parse.build.NodeType/node_type -->
<g id="node79" class="node node method">
<title>phone_tree.parse.build.NodeType/node_type</title>
<g id="a_node79"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 13&#10;(defprotocol NodeType&#10; &#160;(node&#45;type [this]))">
<ellipse fill="#e0ffff" stroke="#000000" cx="3905.0123" cy="-2306.5704" rx="168.7322" ry="18"/>
<text text-anchor="middle" x="3905.0123" y="-2302.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone_tree.parse.build.NodeType/node_type</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;type&#45;&gt;phone_tree.parse.build.NodeType/node_type -->
<g id="edge80" class="edge edge">
<title>phone&#45;tree.parse.build/node&#45;type&#45;&gt;phone_tree.parse.build.NodeType/node_type</title>
<g id="a_edge80"><a xlink:title="phone&#45;tree.parse.build/node&#45;type &#45;&gt; phone_tree.parse.build.NodeType/node_type">
<path fill="none" stroke="#000000" d="M3560.7108,-2216.1684C3594.1322,-2234.9865 3650.419,-2264.1895 3702.6119,-2279.5704 3722.28,-2285.3665 3743.3926,-2289.9217 3764.293,-2293.501"/>
<polygon fill="#000000" stroke="#000000" points="3763.7653,-2296.9611 3774.2006,-2295.1291 3764.9005,-2290.0538 3763.7653,-2296.9611"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;type java.lang.Class -->
<g id="node114" class="node node protocol&#45;fn">
<title>phone&#45;tree.parse.build/node&#45;type java.lang.Class</title>
<g id="a_node114"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 16&#10;(extend&#45;protocol NodeType&#10; &#160;clojure.lang.MultiFn&#10; &#160;(node&#45;type [_] :multimethod)&#10; &#160;clojure.lang.Fn&#10; &#160;(node&#45;type [_] :function)&#10; &#160;#_#_clojure.core.async.impl.protocols.Channel&#10; &#160;(node&#45;type [_] :channel)&#10; &#160;java.lang.Class&#10; &#160;(node&#45;type [_] :class)&#10; &#160;clojure.lang.Var&#10; &#160;(node&#45;type [v]&#10; &#160;&#160;&#160;(cond&#10; &#160;&#160;&#160;&#160;&#160;(:macro (meta v)) :macro&#10; &#160;&#160;&#160;&#160;&#160;(:protocol (meta v)) :protocol&#45;fn&#10; &#160;&#160;&#160;&#160;&#160;:else (node&#45;type (var&#45;get v))))&#10; &#160;clojure.lang.Symbol&#10; &#160;(node&#45;type [s]&#10; &#160;&#160;&#160;(let [v (ns&#45;resolve &#39;clojure.core s)]&#10; &#160;&#160;&#160;&#160;&#160;(cond&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;v (node&#45;type v)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(find&#45;ns s) :namespace&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(and (namespace s) (class? (ns&#45;resolve &#39;clojure.core (symbol (namespace s))))) :method&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;:else nil)))&#10; &#160;;; Defaults&#10; &#160;java.lang.Object&#10; &#160;(node&#45;type [_] nil)&#10; &#160;nil&#10; &#160;(node&#45;type [_] nil))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="3905.0123" cy="-2252.5704" rx="182.9891" ry="18"/>
<text text-anchor="middle" x="3905.0123" y="-2248.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/node&#45;type java.lang.Class</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;type&#45;&gt;phone&#45;tree.parse.build/node&#45;type java.lang.Class -->
<g id="edge85" class="edge edge">
<title>phone&#45;tree.parse.build/node&#45;type&#45;&gt;phone&#45;tree.parse.build/node&#45;type java.lang.Class</title>
<g id="a_edge85"><a xlink:title="phone&#45;tree.parse.build/node&#45;type &#45;&gt; phone&#45;tree.parse.build/node&#45;type java.lang.Class">
<path fill="none" stroke="#000000" d="M3614.6339,-2212.1446C3642.594,-2216.5651 3673.9263,-2221.4037 3702.6119,-2225.5704 3728.8981,-2229.3886 3757.1358,-2233.2847 3783.9308,-2236.886"/>
<polygon fill="#000000" stroke="#000000" points="3783.7463,-2240.3924 3794.1225,-2238.251 3784.6756,-2233.4544 3783.7463,-2240.3924"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;type clojure.lang.Var -->
<g id="node128" class="node node protocol&#45;fn">
<title>phone&#45;tree.parse.build/node&#45;type clojure.lang.Var</title>
<g id="a_node128"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 16&#10;(extend&#45;protocol NodeType&#10; &#160;clojure.lang.MultiFn&#10; &#160;(node&#45;type [_] :multimethod)&#10; &#160;clojure.lang.Fn&#10; &#160;(node&#45;type [_] :function)&#10; &#160;#_#_clojure.core.async.impl.protocols.Channel&#10; &#160;(node&#45;type [_] :channel)&#10; &#160;java.lang.Class&#10; &#160;(node&#45;type [_] :class)&#10; &#160;clojure.lang.Var&#10; &#160;(node&#45;type [v]&#10; &#160;&#160;&#160;(cond&#10; &#160;&#160;&#160;&#160;&#160;(:macro (meta v)) :macro&#10; &#160;&#160;&#160;&#160;&#160;(:protocol (meta v)) :protocol&#45;fn&#10; &#160;&#160;&#160;&#160;&#160;:else (node&#45;type (var&#45;get v))))&#10; &#160;clojure.lang.Symbol&#10; &#160;(node&#45;type [s]&#10; &#160;&#160;&#160;(let [v (ns&#45;resolve &#39;clojure.core s)]&#10; &#160;&#160;&#160;&#160;&#160;(cond&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;v (node&#45;type v)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(find&#45;ns s) :namespace&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(and (namespace s) (class? (ns&#45;resolve &#39;clojure.core (symbol (namespace s))))) :method&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;:else nil)))&#10; &#160;;; Defaults&#10; &#160;java.lang.Object&#10; &#160;(node&#45;type [_] nil)&#10; &#160;nil&#10; &#160;(node&#45;type [_] nil))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="3905.0123" cy="-2198.5704" rx="185.8616" ry="18"/>
<text text-anchor="middle" x="3905.0123" y="-2194.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/node&#45;type clojure.lang.Var</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;type&#45;&gt;phone&#45;tree.parse.build/node&#45;type clojure.lang.Var -->
<g id="edge84" class="edge edge">
<title>phone&#45;tree.parse.build/node&#45;type&#45;&gt;phone&#45;tree.parse.build/node&#45;type clojure.lang.Var</title>
<g id="a_edge84"><a xlink:title="phone&#45;tree.parse.build/node&#45;type &#45;&gt; phone&#45;tree.parse.build/node&#45;type clojure.lang.Var">
<path fill="none" stroke="#000000" d="M3649.7179,-2192.2357C3672.9479,-2191.9404 3697.8024,-2191.8025 3722.5486,-2191.8222"/>
<polygon fill="#000000" stroke="#000000" points="3722.7605,-2195.3225 3732.7664,-2191.8393 3722.7723,-2188.3225 3722.7605,-2195.3225"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;type clojure.lang.Fn -->
<g id="node169" class="node node protocol&#45;fn">
<title>phone&#45;tree.parse.build/node&#45;type clojure.lang.Fn</title>
<g id="a_node169"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 16&#10;(extend&#45;protocol NodeType&#10; &#160;clojure.lang.MultiFn&#10; &#160;(node&#45;type [_] :multimethod)&#10; &#160;clojure.lang.Fn&#10; &#160;(node&#45;type [_] :function)&#10; &#160;#_#_clojure.core.async.impl.protocols.Channel&#10; &#160;(node&#45;type [_] :channel)&#10; &#160;java.lang.Class&#10; &#160;(node&#45;type [_] :class)&#10; &#160;clojure.lang.Var&#10; &#160;(node&#45;type [v]&#10; &#160;&#160;&#160;(cond&#10; &#160;&#160;&#160;&#160;&#160;(:macro (meta v)) :macro&#10; &#160;&#160;&#160;&#160;&#160;(:protocol (meta v)) :protocol&#45;fn&#10; &#160;&#160;&#160;&#160;&#160;:else (node&#45;type (var&#45;get v))))&#10; &#160;clojure.lang.Symbol&#10; &#160;(node&#45;type [s]&#10; &#160;&#160;&#160;(let [v (ns&#45;resolve &#39;clojure.core s)]&#10; &#160;&#160;&#160;&#160;&#160;(cond&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;v (node&#45;type v)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(find&#45;ns s) :namespace&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(and (namespace s) (class? (ns&#45;resolve &#39;clojure.core (symbol (namespace s))))) :method&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;:else nil)))&#10; &#160;;; Defaults&#10; &#160;java.lang.Object&#10; &#160;(node&#45;type [_] nil)&#10; &#160;nil&#10; &#160;(node&#45;type [_] nil))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="3905.0123" cy="-2144.5704" rx="182.9891" ry="18"/>
<text text-anchor="middle" x="3905.0123" y="-2140.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/node&#45;type clojure.lang.Fn</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;type&#45;&gt;phone&#45;tree.parse.build/node&#45;type clojure.lang.Fn -->
<g id="edge83" class="edge edge">
<title>phone&#45;tree.parse.build/node&#45;type&#45;&gt;phone&#45;tree.parse.build/node&#45;type clojure.lang.Fn</title>
<g id="a_edge83"><a xlink:title="phone&#45;tree.parse.build/node&#45;type &#45;&gt; phone&#45;tree.parse.build/node&#45;type clojure.lang.Fn">
<path fill="none" stroke="#000000" d="M3614.6339,-2184.9962C3642.594,-2180.5756 3673.9263,-2175.7371 3702.6119,-2171.5704 3728.8981,-2167.7522 3757.1358,-2163.8561 3783.9308,-2160.2548"/>
<polygon fill="#000000" stroke="#000000" points="3784.6756,-2163.6864 3794.1225,-2158.8898 3783.7463,-2156.7484 3784.6756,-2163.6864"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/prune&#45;graph -->
<g id="node54" class="node node function">
<title>phone&#45;tree.core/prune&#45;graph</title>
<g id="a_node54"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/core.clj, line 136&#10;(defn prune&#45;graph [g opts]&#10; &#160;(if&#45;let [collapse (:collapse opts)]&#10; &#160;&#160;&#160;;; collapse is a special case&#10; &#160;&#160;&#160;(graph/collapse g (partial matches&#45;any? collapse))&#10; &#160;&#160;&#160;;; otherwise prune&#10; &#160;&#160;&#160;(let [{:keys [include&#45;node exclude&#45;node]} opts&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{:keys [include&#45;ancestors include&#45;descendants]} opts]&#10; &#160;&#160;&#160;&#160;&#160;(cond&#45;&gt; g&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(seq include&#45;node) (graph/filter&#45;nodes (partial matches&#45;any? include&#45;node))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(seq exclude&#45;node) (graph/remove&#45;nodes (partial matches&#45;any? exclude&#45;node))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(seq include&#45;ancestors) (graph/filter&#45;ancestors (partial matches&#45;any? include&#45;ancestors))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(seq include&#45;descendants) (graph/filter&#45;descendants (partial matches&#45;any? include&#45;descendants))))))">
<ellipse fill="#ffffff" stroke="#000000" cx="737.0902" cy="-519.5704" rx="111.0329" ry="18"/>
<text text-anchor="middle" x="737.0902" y="-515.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.core/prune&#45;graph</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/prune&#45;graph&#45;&gt;phone&#45;tree.graph/collapse -->
<g id="edge87" class="edge edge">
<title>phone&#45;tree.core/prune&#45;graph&#45;&gt;phone&#45;tree.graph/collapse</title>
<g id="a_edge87"><a xlink:title="phone&#45;tree.core/prune&#45;graph &#45;&gt; phone&#45;tree.graph/collapse">
<path fill="none" stroke="#000000" d="M767.4487,-537.028C814.1554,-563.3703 906.9722,-613.6879 990.1851,-646.5704 1014.9285,-656.348 1042.7979,-665.1083 1067.4669,-672.1301"/>
<polygon fill="#000000" stroke="#000000" points="1066.5332,-675.5033 1077.1068,-674.8329 1068.423,-668.7632 1066.5332,-675.5033"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/prune&#45;graph&#45;&gt;phone&#45;tree.graph/filter&#45;ancestors -->
<g id="edge88" class="edge edge">
<title>phone&#45;tree.core/prune&#45;graph&#45;&gt;phone&#45;tree.graph/filter&#45;ancestors</title>
<g id="a_edge88"><a xlink:title="phone&#45;tree.core/prune&#45;graph &#45;&gt; phone&#45;tree.graph/filter&#45;ancestors">
<path fill="none" stroke="#000000" d="M828.0089,-530.0661C887.3011,-536.9108 964.9816,-545.8782 1027.4383,-553.0882"/>
<polygon fill="#000000" stroke="#000000" points="1027.3864,-556.6054 1037.7219,-554.2754 1028.1893,-549.6516 1027.3864,-556.6054"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/prune&#45;graph&#45;&gt;phone&#45;tree.graph/filter&#45;descendants -->
<g id="edge89" class="edge edge">
<title>phone&#45;tree.core/prune&#45;graph&#45;&gt;phone&#45;tree.graph/filter&#45;descendants</title>
<g id="a_edge89"><a xlink:title="phone&#45;tree.core/prune&#45;graph &#45;&gt; phone&#45;tree.graph/filter&#45;descendants">
<path fill="none" stroke="#000000" d="M787.608,-535.713C838.4219,-551.5773 919.2016,-575.7839 990.1851,-592.5704 1006.6831,-596.4719 1024.3437,-600.1572 1041.4692,-603.4783"/>
<polygon fill="#000000" stroke="#000000" points="1040.9986,-606.9516 1051.4778,-605.3905 1042.3123,-600.076 1040.9986,-606.9516"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/matches&#45;any? -->
<g id="node56" class="node node function">
<title>phone&#45;tree.core/matches&#45;any?</title>
<g id="a_node56"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/core.clj, line 126&#10;(defn matches&#45;any? [regexes s]&#10; &#160;(seq (filter #(re&#45;matches % s) regexes)))">
<ellipse fill="#ffffff" stroke="#000000" cx="1135.565" cy="-435.5704" rx="116.3282" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-431.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.core/matches&#45;any?</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/prune&#45;graph&#45;&gt;phone&#45;tree.core/matches&#45;any? -->
<g id="edge90" class="edge edge">
<title>phone&#45;tree.core/prune&#45;graph&#45;&gt;phone&#45;tree.core/matches&#45;any?</title>
<g id="a_edge90"><a xlink:title="phone&#45;tree.core/prune&#45;graph &#45;&gt; phone&#45;tree.core/matches&#45;any?">
<path fill="none" stroke="#000000" d="M805.1377,-505.2257C874.7715,-490.5467 982.8925,-467.7543 1056.3363,-452.2721"/>
<polygon fill="#000000" stroke="#000000" points="1057.3988,-455.6251 1066.4618,-450.1376 1055.9548,-448.7757 1057.3988,-455.6251"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/prune&#45;graph&#45;&gt;phone&#45;tree.graph/filter&#45;nodes -->
<g id="edge91" class="edge edge">
<title>phone&#45;tree.core/prune&#45;graph&#45;&gt;phone&#45;tree.graph/filter&#45;nodes</title>
<g id="a_edge91"><a xlink:title="phone&#45;tree.core/prune&#45;graph &#45;&gt; phone&#45;tree.graph/filter&#45;nodes">
<path fill="none" stroke="#000000" d="M848.1707,-520.7637C985.0671,-522.2345 1216.9461,-524.7256 1358.9965,-526.2517"/>
<polygon fill="#000000" stroke="#000000" points="1359.0293,-529.7521 1369.0663,-526.3598 1359.1045,-522.7525 1359.0293,-529.7521"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/remove&#45;nodes -->
<g id="node168" class="node node function">
<title>phone&#45;tree.graph/remove&#45;nodes</title>
<g id="a_node168"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 42&#10;(defn remove&#45;nodes&#10; &#160;&quot;Removes nodes and edges given a function `f` that takes a node id.&#10;&#10; &#160;Edges will be removed if either :src or :dest matches.&quot;&#10; &#160;[g f]&#10; &#160;(apply uber/remove&#45;nodes g (filter f (uber/nodes g))))">
<ellipse fill="#ffffff" stroke="#000000" cx="1930.3771" cy="-527.5704" rx="122.6273" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-523.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/remove&#45;nodes</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/prune&#45;graph&#45;&gt;phone&#45;tree.graph/remove&#45;nodes -->
<g id="edge92" class="edge edge">
<title>phone&#45;tree.core/prune&#45;graph&#45;&gt;phone&#45;tree.graph/remove&#45;nodes</title>
<g id="a_edge92"><a xlink:title="phone&#45;tree.core/prune&#45;graph &#45;&gt; phone&#45;tree.graph/remove&#45;nodes">
<path fill="none" stroke="#000000" d="M847.7845,-518.0736C958.9951,-514.2305 1134.4332,-501.7536 1280.9449,-462.5704 1297.8595,-458.0467 1299.8173,-450.2051 1316.9449,-446.5704 1460.245,-416.16 1501.4719,-426.2739 1646.5503,-446.5704 1728.5847,-458.047 1820.1857,-487.326 1876.5636,-507.3492"/>
<polygon fill="#000000" stroke="#000000" points="1875.3913,-510.647 1885.9858,-510.7262 1877.753,-504.0575 1875.3913,-510.647"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/guess&#45;class* _default -->
<g id="node55" class="node node multimethod">
<title>phone&#45;tree.parse.class/guess&#45;class* _default</title>
<g id="a_node55"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/class.clj, line 61&#10;(defmethod guess&#45;class* :default&#10; &#160;[_]&#10; &#160;nil)">
<ellipse fill="#e6e6fa" stroke="#000000" cx="3194.917" cy="-3277.5704" rx="164.1459" ry="18"/>
<text text-anchor="middle" x="3194.917" y="-3273.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.class/guess&#45;class* :default</text>
</a>
</g>
</g>
<!-- clojure.java.io/resource -->
<g id="node57" class="node node">
<title>clojure.java.io/resource</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="2400.6058" cy="-821.5704" rx="93.1928" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-817.3704" font-family="Times,serif" font-size="14.00" fill="#000000">clojure.java.io/resource</text>
</g>
<!-- phone&#45;tree.core/run&#45;with&#45;project -->
<g id="node58" class="node node function">
<title>phone&#45;tree.core/run&#45;with&#45;project</title>
<g id="a_node58"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/core.clj, line 168&#10;(defn run&#45;with&#45;project [project&#45;opts &amp; args]&#10; &#160;(run (merge project&#45;opts (parse&#45;cli args))))">
<ellipse fill="#ffffff" stroke="#000000" cx="125.7541" cy="-418.5704" rx="125.5088" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-414.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.core/run&#45;with&#45;project</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/run&#45;with&#45;project&#45;&gt;phone&#45;tree.core/parse&#45;cli -->
<g id="edge93" class="edge edge">
<title>phone&#45;tree.core/run&#45;with&#45;project&#45;&gt;phone&#45;tree.core/parse&#45;cli</title>
<g id="a_edge93"><a xlink:title="phone&#45;tree.core/run&#45;with&#45;project &#45;&gt; phone&#45;tree.core/parse&#45;cli">
<path fill="none" stroke="#000000" d="M160.8186,-401.1729C207.9248,-377.8007 291.5981,-336.2855 342.5403,-311.0101"/>
<polygon fill="#000000" stroke="#000000" points="344.2528,-314.0676 351.6552,-306.4877 341.1416,-307.797 344.2528,-314.0676"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/run&#45;with&#45;project&#45;&gt;phone&#45;tree.core/run -->
<g id="edge94" class="edge edge">
<title>phone&#45;tree.core/run&#45;with&#45;project&#45;&gt;phone&#45;tree.core/run</title>
<g id="a_edge94"><a xlink:title="phone&#45;tree.core/run&#45;with&#45;project &#45;&gt; phone&#45;tree.core/run">
<path fill="none" stroke="#000000" d="M230.3813,-428.6308C254.3501,-430.9355 279.5161,-433.3553 302.4469,-435.5602"/>
<polygon fill="#000000" stroke="#000000" points="302.1798,-439.0506 312.4689,-436.5239 302.8498,-432.0827 302.1798,-439.0506"/>
</a>
</g>
</g>
<!-- phone&#45;tree.redef/read&#45;forms -->
<g id="node59" class="node node function">
<title>phone&#45;tree.redef/read&#45;forms</title>
<g id="a_node59"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/redef.clj, line 6&#10;(defn read&#45;forms&#10; &#160;&quot;Reads all forms in a file.&quot;&#10; &#160;[filename]&#10; &#160;(with&#45;open [r (io/reader filename)]&#10; &#160;&#160;&#160;(let [pbr (java.io.PushbackReader. r)]&#10; &#160;&#160;&#160;&#160;&#160;(doall&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(take&#45;while #(not= ::EOF %)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(repeatedly #(read {:eof ::EOF} pbr)))))))">
<ellipse fill="#ffffff" stroke="#000000" cx="3194.917" cy="-3515.5704" rx="109.5794" ry="18"/>
<text text-anchor="middle" x="3194.917" y="-3511.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.redef/read&#45;forms</text>
</a>
</g>
</g>
<!-- java.io.Reader/close -->
<g id="node96" class="node node">
<title>java.io.Reader/close</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="3530.8009" cy="-3488.5704" rx="81.6095" ry="18"/>
<text text-anchor="middle" x="3530.8009" y="-3484.3704" font-family="Times,serif" font-size="14.00" fill="#000000">java.io.Reader/close</text>
</g>
<!-- phone&#45;tree.redef/read&#45;forms&#45;&gt;java.io.Reader/close -->
<g id="edge95" class="edge edge">
<title>phone&#45;tree.redef/read&#45;forms&#45;&gt;java.io.Reader/close</title>
<g id="a_edge95"><a xlink:title="phone&#45;tree.redef/read&#45;forms &#45;&gt; java.io.Reader/close">
<path fill="none" stroke="#000000" d="M3293.4237,-3507.6519C3341.0239,-3503.8256 3397.6565,-3499.2732 3443.6656,-3495.5748"/>
<polygon fill="#000000" stroke="#000000" points="3444.2265,-3499.041 3453.9139,-3494.7509 3443.6656,-3492.0636 3444.2265,-3499.041"/>
</a>
</g>
</g>
<!-- java.io.PushbackReader/. -->
<g id="node154" class="node node">
<title>java.io.PushbackReader/.</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="3530.8009" cy="-3434.5704" rx="99.9844" ry="18"/>
<text text-anchor="middle" x="3530.8009" y="-3430.3704" font-family="Times,serif" font-size="14.00" fill="#000000">java.io.PushbackReader/.</text>
</g>
<!-- phone&#45;tree.redef/read&#45;forms&#45;&gt;java.io.PushbackReader/. -->
<g id="edge96" class="edge edge">
<title>phone&#45;tree.redef/read&#45;forms&#45;&gt;java.io.PushbackReader/.</title>
<g id="a_edge96"><a xlink:title="phone&#45;tree.redef/read&#45;forms &#45;&gt; java.io.PushbackReader/.">
<path fill="none" stroke="#000000" d="M3292.5387,-3507.3795C3314.9577,-3503.3658 3338.2794,-3497.4073 3358.9899,-3488.5704 3377.3853,-3480.7213 3376.7271,-3469.7233 3394.9899,-3461.5704 3408.6754,-3455.4609 3423.7498,-3450.7258 3438.7249,-3447.058"/>
<polygon fill="#000000" stroke="#000000" points="3439.5766,-3450.4536 3448.5358,-3444.7982 3438.0053,-3443.6322 3439.5766,-3450.4536"/>
</a>
</g>
</g>
<!-- clojure.java.io/reader -->
<g id="node175" class="node node">
<title>clojure.java.io/reader</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="3530.8009" cy="-3542.5704" rx="85.4668" ry="18"/>
<text text-anchor="middle" x="3530.8009" y="-3538.3704" font-family="Times,serif" font-size="14.00" fill="#000000">clojure.java.io/reader</text>
</g>
<!-- phone&#45;tree.redef/read&#45;forms&#45;&gt;clojure.java.io/reader -->
<g id="edge97" class="edge edge">
<title>phone&#45;tree.redef/read&#45;forms&#45;&gt;clojure.java.io/reader</title>
<g id="a_edge97"><a xlink:title="phone&#45;tree.redef/read&#45;forms &#45;&gt; clojure.java.io/reader">
<path fill="none" stroke="#000000" d="M3293.4237,-3523.4888C3340.0341,-3527.2356 3395.3052,-3531.6786 3440.7819,-3535.3342"/>
<polygon fill="#000000" stroke="#000000" points="3440.6758,-3538.8369 3450.9241,-3536.1495 3441.2367,-3531.8594 3440.6758,-3538.8369"/>
</a>
</g>
</g>
<!-- phone&#45;tree.namespace/nss&#45;in&#45;dirs -->
<g id="node60" class="node node function">
<title>phone&#45;tree.namespace/nss&#45;in&#45;dirs</title>
<g id="a_node60"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/namespace.clj, line 18&#10;(defn nss&#45;in&#45;dirs&#10; &#160;&quot;Return a map containing a list of all the project&#39;s namespaces.&quot;&#10; &#160;[dirs]&#10; &#160;(let [tracker (if (seq dirs)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(apply dir/scan&#45;all (track/tracker) dirs)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(track/tracker))]&#10; &#160;&#160;&#160;(::track/load tracker)))">
<ellipse fill="#ffffff" stroke="#000000" cx="1135.565" cy="-343.5704" rx="128.9244" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-339.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.namespace/nss&#45;in&#45;dirs</text>
</a>
</g>
</g>
<!-- phone&#45;tree.namespace/nss&#45;in&#45;dirs&#45;&gt;clojure.tools.namespace.dir/scan&#45;all -->
<g id="edge98" class="edge edge">
<title>phone&#45;tree.namespace/nss&#45;in&#45;dirs&#45;&gt;clojure.tools.namespace.dir/scan&#45;all</title>
<g id="a_edge98"><a xlink:title="phone&#45;tree.namespace/nss&#45;in&#45;dirs &#45;&gt; clojure.tools.namespace.dir/scan&#45;all">
<path fill="none" stroke="#000000" d="M1221.583,-330.1527C1270.6748,-322.495 1332.402,-312.8664 1383.4092,-304.9099"/>
<polygon fill="#000000" stroke="#000000" points="1384.1197,-308.3415 1393.4608,-303.342 1383.0408,-301.4251 1384.1197,-308.3415"/>
</a>
</g>
</g>
<!-- phone&#45;tree.namespace/nss&#45;in&#45;dirs&#45;&gt;clojure.tools.namespace.track/tracker -->
<g id="edge99" class="edge edge">
<title>phone&#45;tree.namespace/nss&#45;in&#45;dirs&#45;&gt;clojure.tools.namespace.track/tracker</title>
<g id="a_edge99"><a xlink:title="phone&#45;tree.namespace/nss&#45;in&#45;dirs &#45;&gt; clojure.tools.namespace.track/tracker">
<path fill="none" stroke="#000000" d="M1264.4706,-343.5704C1285.6297,-343.5704 1307.7328,-343.5704 1329.3962,-343.5704"/>
<polygon fill="#000000" stroke="#000000" points="1329.6503,-347.0705 1339.6502,-343.5704 1329.6502,-340.0705 1329.6503,-347.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/*parent* -->
<g id="node65" class="node node">
<title>phone&#45;tree.parse.build/*parent*</title>
<g id="a_node65"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 10&#10;(def ^:dynamic *parent* nil)">
<ellipse fill="#c0c0c0" stroke="#000000" cx="2808.9258" cy="-2700.5704" rx="122.6434" ry="18"/>
<text text-anchor="middle" x="2808.9258" y="-2696.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/*parent*</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/edge&#45;&gt;phone&#45;tree.parse.build/*parent* -->
<g id="edge100" class="edge edge">
<title>phone&#45;tree.parse.build/edge&#45;&gt;phone&#45;tree.parse.build/*parent*</title>
<g id="a_edge100"><a xlink:title="phone&#45;tree.parse.build/edge &#45;&gt; phone&#45;tree.parse.build/*parent*">
<path fill="none" stroke="#000000" d="M2487.9501,-2739.8748C2551.3469,-2732.1117 2637.3925,-2721.5752 2704.436,-2713.3655"/>
<polygon fill="#000000" stroke="#000000" points="2705.1048,-2716.8098 2714.6052,-2712.1202 2704.2539,-2709.8617 2705.1048,-2716.8098"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/location -->
<g id="node94" class="node node function">
<title>phone&#45;tree.parse.ast/location</title>
<g id="a_node94"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/ast.clj, line 6&#10;(defn location&#10; &#160;&quot;Selects the location metadata from an ast node.&quot;&#10; &#160;[ast]&#10; &#160;(select&#45;keys (:env ast) [:file :ns :line :end&#45;line :column :end&#45;column]))">
<ellipse fill="#ffffff" stroke="#000000" cx="2808.9258" cy="-2263.5704" rx="111.5275" ry="18"/>
<text text-anchor="middle" x="2808.9258" y="-2259.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/location</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/edge&#45;&gt;phone&#45;tree.parse.ast/location -->
<g id="edge101" class="edge edge">
<title>phone&#45;tree.parse.build/edge&#45;&gt;phone&#45;tree.parse.ast/location</title>
<g id="a_edge101"><a xlink:title="phone&#45;tree.parse.build/edge &#45;&gt; phone&#45;tree.parse.ast/location">
<path fill="none" stroke="#000000" d="M2417.8116,-2732.7816C2455.2031,-2693.0114 2543.962,-2592.3698 2587.0076,-2490.5704 2622.1826,-2407.3842 2558.071,-2353.3436 2623.0076,-2290.5704 2642.2419,-2271.9769 2668.2363,-2262.5263 2694.6843,-2258.2686"/>
<polygon fill="#000000" stroke="#000000" points="2695.3956,-2261.704 2704.8299,-2256.8828 2694.4482,-2254.7684 2695.3956,-2261.704"/>
</a>
</g>
</g>
<!-- phone&#45;tree.log/tracef -->
<g id="node137" class="node node function">
<title>phone&#45;tree.log/tracef</title>
<g id="a_node137"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/log.clj, line 32&#10;(def tracef (partial logf :trace))">
<ellipse fill="#ffffff" stroke="#000000" cx="3194.917" cy="-2608.5704" rx="84.0135" ry="18"/>
<text text-anchor="middle" x="3194.917" y="-2604.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.log/tracef</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/edge&#45;&gt;phone&#45;tree.log/tracef -->
<g id="edge102" class="edge edge">
<title>phone&#45;tree.parse.build/edge&#45;&gt;phone&#45;tree.log/tracef</title>
<g id="a_edge102"><a xlink:title="phone&#45;tree.parse.build/edge &#45;&gt; phone&#45;tree.log/tracef">
<path fill="none" stroke="#000000" d="M2508.2546,-2752.7294C2654.2157,-2754.5729 2906.7939,-2753.6186 2994.844,-2727.5704 3061.4983,-2707.8518 3128.8979,-2660.9152 3165.9553,-2632.2337"/>
<polygon fill="#000000" stroke="#000000" points="3168.1199,-2634.984 3173.8291,-2626.059 3163.8003,-2629.4757 3168.1199,-2634.984"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/&#45;&gt;edge -->
<g id="node153" class="node node function">
<title>phone&#45;tree.parse.build/&#45;&gt;edge</title>
<g id="a_node153"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 67&#10;(defn &#45;&gt;edge [attrs]&#10; &#160;(assoc attrs :id (str (:src attrs) &quot; &#45;&gt; &quot; (:dest attrs))))">
<ellipse fill="#ffffff" stroke="#000000" cx="2808.9258" cy="-2792.5704" rx="116.0178" ry="18"/>
<text text-anchor="middle" x="2808.9258" y="-2788.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/&#45;&gt;edge</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/edge&#45;&gt;phone&#45;tree.parse.build/&#45;&gt;edge -->
<g id="edge103" class="edge edge">
<title>phone&#45;tree.parse.build/edge&#45;&gt;phone&#45;tree.parse.build/&#45;&gt;edge</title>
<g id="a_edge103"><a xlink:title="phone&#45;tree.parse.build/edge &#45;&gt; phone&#45;tree.parse.build/&#45;&gt;edge">
<path fill="none" stroke="#000000" d="M2492.7499,-2760.0484C2554.7073,-2766.4213 2636.5993,-2774.8448 2701.5157,-2781.5221"/>
<polygon fill="#000000" stroke="#000000" points="2701.4773,-2785.0366 2711.7829,-2782.5782 2702.1936,-2778.0733 2701.4773,-2785.0366"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;id -->
<g id="node166" class="node node function">
<title>phone&#45;tree.parse.build/node&#45;id</title>
<g id="a_node166"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 56&#10;(defn node&#45;id [x]&#10; &#160;(if (string? x)&#10; &#160;&#160;&#160;x&#10; &#160;&#160;&#160;(let [{:keys [symbol dispatch]} (conform&#45;node x)]&#10; &#160;&#160;&#160;&#160;&#160;(if dispatch&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(str symbol &quot; &quot; (pr&#45;str dispatch))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(str symbol)))))">
<ellipse fill="#ffffff" stroke="#000000" cx="2808.9258" cy="-2198.5704" rx="118.7933" ry="18"/>
<text text-anchor="middle" x="2808.9258" y="-2194.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/node&#45;id</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/edge&#45;&gt;phone&#45;tree.parse.build/node&#45;id -->
<g id="edge104" class="edge edge">
<title>phone&#45;tree.parse.build/edge&#45;&gt;phone&#45;tree.parse.build/node&#45;id</title>
<g id="a_edge104"><a xlink:title="phone&#45;tree.parse.build/edge &#45;&gt; phone&#45;tree.parse.build/node&#45;id">
<path fill="none" stroke="#000000" d="M2418.3822,-2732.5992C2456.5028,-2692.8574 2545.9712,-2592.8971 2587.0076,-2490.5704 2629.4467,-2384.7459 2544.8739,-2319.6067 2623.0076,-2236.5704 2638.5439,-2220.0593 2659.162,-2209.6791 2681.0073,-2203.3268"/>
<polygon fill="#000000" stroke="#000000" points="2681.9891,-2206.6877 2690.7735,-2200.7645 2680.2126,-2199.9168 2681.9891,-2206.6877"/>
</a>
</g>
</g>
<!-- phone&#45;tree.log/*level* -->
<g id="node62" class="node node">
<title>phone&#45;tree.log/*level*</title>
<g id="a_node62"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/log.clj, line 4&#10;(def ^:dynamic *level* :warn)">
<ellipse fill="#c0c0c0" stroke="#000000" cx="4469.2681" cy="-1691.5704" rx="89.8279" ry="18"/>
<text text-anchor="middle" x="4469.2681" y="-1687.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.log/*level*</text>
</a>
</g>
</g>
<!-- clojure.tools.analyzer.jvm/analyze -->
<g id="node63" class="node node">
<title>clojure.tools.analyzer.jvm/analyze</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="3194.917" cy="-2463.5704" rx="131.3383" ry="18"/>
<text text-anchor="middle" x="3194.917" y="-2459.3704" font-family="Times,serif" font-size="14.00" fill="#000000">clojure.tools.analyzer.jvm/analyze</text>
</g>
<!-- phone&#45;tree.parse.ast/parse _quote -->
<g id="node64" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse _quote</title>
<g id="a_node64"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/macro.clj, line 25&#10;(defmethod ast/parse :quote&#10; &#160;[{:keys [expr] :as ast}]&#10; &#160;(if (and *in&#45;macro* (= :symbol (:type expr)))&#10; &#160;&#160;&#160;(build/edge ast {:dest (:val expr)})&#10; &#160;&#160;&#160;(ast/parse&#45;children expr)))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="1930.3771" cy="-3131.5704" rx="126.0019" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-3127.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse :quote</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _quote&#45;&gt;phone&#45;tree.parse.ast/parse&#45;children -->
<g id="edge105" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _quote&#45;&gt;phone&#45;tree.parse.ast/parse&#45;children</title>
<g id="a_edge105"><a xlink:title="phone&#45;tree.parse.ast/parse :quote &#45;&gt; phone&#45;tree.parse.ast/parse&#45;children">
<path fill="none" stroke="#000000" d="M2052.3903,-3126.8998C2116.4522,-3124.4476 2195.2201,-3121.4324 2261.6271,-3118.8904"/>
<polygon fill="#000000" stroke="#000000" points="2261.894,-3122.3828 2271.7527,-3118.5028 2261.6261,-3115.388 2261.894,-3122.3828"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _quote&#45;&gt;phone&#45;tree.parse.build/edge -->
<g id="edge106" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _quote&#45;&gt;phone&#45;tree.parse.build/edge</title>
<g id="a_edge106"><a xlink:title="phone&#45;tree.parse.ast/parse :quote &#45;&gt; phone&#45;tree.parse.build/edge">
<path fill="none" stroke="#000000" d="M2008.8482,-3145.7269C2063.503,-3150.7633 2134.2163,-3146.8684 2178.2039,-3104.5704 2256.5847,-3029.2003 2153.822,-2953.0039 2214.2039,-2862.5704 2244.219,-2817.6171 2298.9636,-2787.9143 2341.389,-2770.4643"/>
<polygon fill="#000000" stroke="#000000" points="2342.7968,-2773.671 2350.7875,-2766.714 2340.2024,-2767.1695 2342.7968,-2773.671"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.macro/*in&#45;macro* -->
<g id="node150" class="node node">
<title>phone&#45;tree.parse.macro/*in&#45;macro*</title>
<g id="a_node150"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/macro.clj, line 7&#10;(def ^:dynamic *in&#45;macro* false)">
<ellipse fill="#c0c0c0" stroke="#000000" cx="2400.6058" cy="-3195.5704" rx="136.124" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-3191.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.macro/*in&#45;macro*</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _quote&#45;&gt;phone&#45;tree.parse.macro/*in&#45;macro* -->
<g id="edge107" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _quote&#45;&gt;phone&#45;tree.parse.macro/*in&#45;macro*</title>
<g id="a_edge107"><a xlink:title="phone&#45;tree.parse.ast/parse :quote &#45;&gt; phone&#45;tree.parse.macro/*in&#45;macro*">
<path fill="none" stroke="#000000" d="M2021.8787,-3144.0241C2100.2336,-3154.6885 2213.0824,-3170.0477 2295.2024,-3181.2246"/>
<polygon fill="#000000" stroke="#000000" points="2294.9321,-3184.72 2305.3127,-3182.6006 2295.8761,-3177.7839 2294.9321,-3184.72"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _var -->
<g id="node66" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse _var</title>
<g id="a_node66"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/var.clj, line 17&#10;(defmethod ast/parse :var&#10; &#160;[{:keys [var] :as ast}]&#10; &#160;(build/edge ast {:dest var}))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="1930.3771" cy="-2807.5704" rx="117.7905" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-2803.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse :var</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _var&#45;&gt;phone&#45;tree.parse.build/edge -->
<g id="edge108" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _var&#45;&gt;phone&#45;tree.parse.build/edge</title>
<g id="a_edge108"><a xlink:title="phone&#45;tree.parse.ast/parse :var &#45;&gt; phone&#45;tree.parse.build/edge">
<path fill="none" stroke="#000000" d="M2028.1393,-2797.5018C2073.7689,-2792.6532 2128.7975,-2786.593 2178.2039,-2780.5704 2220.8988,-2775.3659 2268.1286,-2769.0714 2308.0427,-2763.5946"/>
<polygon fill="#000000" stroke="#000000" points="2308.596,-2767.0516 2318.0255,-2762.221 2307.6417,-2760.1169 2308.596,-2767.0516"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;dispatch -->
<g id="node68" class="node node function">
<title>phone&#45;tree.parse.ast/parse&#45;dispatch</title>
<g id="a_node68"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/ast.clj, line 63&#10;(defn parse&#45;dispatch [ast]&#10; &#160;;; In order to return only the most specific of the possibilities returned by&#10; &#160;;; `dispatches`, we need to examine the actual defined methods&#10; &#160;(&#45;&gt;&gt; (dispatches ast)&#10; &#160;&#160;&#160;&#160;&#160;&#160;(filter (partial contains? (methods parse)))&#10; &#160;&#160;&#160;&#160;&#160;&#160;(first)))">
<ellipse fill="#ffffff" stroke="#000000" cx="1930.3771" cy="-2699.5704" rx="134.2031" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-2695.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse&#45;dispatch</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;dispatch&#45;&gt;phone&#45;tree.parse.ast/dispatches -->
<g id="edge110" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;dispatch&#45;&gt;phone&#45;tree.parse.ast/dispatches</title>
<g id="a_edge110"><a xlink:title="phone&#45;tree.parse.ast/parse&#45;dispatch &#45;&gt; phone&#45;tree.parse.ast/dispatches">
<path fill="none" stroke="#000000" d="M2064.5005,-2700.6553C2102.5998,-2696.8492 2143.2142,-2688.678 2178.2039,-2672.5704 2269.54,-2630.5235 2347.6749,-2535.9673 2381.9905,-2489.8559"/>
<polygon fill="#000000" stroke="#000000" points="2384.9758,-2491.7037 2388.0711,-2481.571 2379.3326,-2487.5618 2384.9758,-2491.7037"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;dispatch&#45;&gt;phone&#45;tree.parse.ast/parse -->
<g id="edge109" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;dispatch&#45;&gt;phone&#45;tree.parse.ast/parse</title>
<g id="a_edge109"><a xlink:title="phone&#45;tree.parse.ast/parse&#45;dispatch &#45;&gt; phone&#45;tree.parse.ast/parse">
<path fill="none" stroke="#000000" d="M1815.8038,-2708.9713C1772.954,-2712.8822 1724.5246,-2720.2388 1682.5503,-2735.5704 1617.8039,-2759.2198 1553.5595,-2808.0166 1515.7746,-2837.6365"/>
<polygon fill="#000000" stroke="#000000" points="1513.3663,-2835.0776 1507.6668,-2844.0088 1517.6919,-2840.5812 1513.3663,-2835.0776"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.protocol/protocol&#45;dispatch -->
<g id="node70" class="node node function">
<title>phone&#45;tree.parse.protocol/protocol&#45;dispatch</title>
<g id="a_node70"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/protocol.clj, line 41&#10;(defn protocol&#45;dispatch&#10; &#160;&quot;Finds the class that implements the given protocol.&quot;&#10; &#160;[protocol cls]&#10; &#160;(if (isa? cls (:on&#45;interface protocol))&#10; &#160;&#160;&#160;;; If this is from a deftype or defrecord, the class _is_ the implementer&#10; &#160;&#160;&#160;cls&#10; &#160;&#160;&#160;;; Otherwise search through superclasses&#10; &#160;&#160;&#160;(and cls (&#45;&gt;&gt; (super&#45;chain (box cls))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(filter (partial get (:impls protocol)))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;first))))">
<ellipse fill="#ffffff" stroke="#000000" cx="2400.6058" cy="-2922.5704" rx="164.6229" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-2918.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.protocol/protocol&#45;dispatch</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.protocol/super&#45;chain -->
<g id="node84" class="node node function">
<title>phone&#45;tree.parse.protocol/super&#45;chain</title>
<g id="a_node84"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/protocol.clj, line 37&#10;(defn super&#45;chain [^Class c]&#10; &#160;(when c&#10; &#160;&#160;&#160;(cons c (super&#45;chain (.getSuperclass c)))))">
<ellipse fill="#ffffff" stroke="#000000" cx="2808.9258" cy="-2976.5704" rx="144.0049" ry="18"/>
<text text-anchor="middle" x="2808.9258" y="-2972.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.protocol/super&#45;chain</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.protocol/protocol&#45;dispatch&#45;&gt;phone&#45;tree.parse.protocol/super&#45;chain -->
<g id="edge112" class="edge edge">
<title>phone&#45;tree.parse.protocol/protocol&#45;dispatch&#45;&gt;phone&#45;tree.parse.protocol/super&#45;chain</title>
<g id="a_edge112"><a xlink:title="phone&#45;tree.parse.protocol/protocol&#45;dispatch &#45;&gt; phone&#45;tree.parse.protocol/super&#45;chain">
<path fill="none" stroke="#000000" d="M2505.7583,-2936.4767C2565.1751,-2944.3346 2639.3539,-2954.1446 2699.4636,-2962.0941"/>
<polygon fill="#000000" stroke="#000000" points="2699.3765,-2965.613 2709.749,-2963.4543 2700.2943,-2958.6734 2699.3765,-2965.613"/>
</a>
</g>
</g>
<!-- clojure.tools.analyzer.jvm.utils/box -->
<g id="node162" class="node node">
<title>clojure.tools.analyzer.jvm.utils/box</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="2808.9258" cy="-2922.5704" rx="134.7567" ry="18"/>
<text text-anchor="middle" x="2808.9258" y="-2918.3704" font-family="Times,serif" font-size="14.00" fill="#000000">clojure.tools.analyzer.jvm.utils/box</text>
</g>
<!-- phone&#45;tree.parse.protocol/protocol&#45;dispatch&#45;&gt;clojure.tools.analyzer.jvm.utils/box -->
<g id="edge111" class="edge edge">
<title>phone&#45;tree.parse.protocol/protocol&#45;dispatch&#45;&gt;clojure.tools.analyzer.jvm.utils/box</title>
<g id="a_edge111"><a xlink:title="phone&#45;tree.parse.protocol/protocol&#45;dispatch &#45;&gt; clojure.tools.analyzer.jvm.utils/box">
<path fill="none" stroke="#000000" d="M2565.5082,-2922.5704C2597.9628,-2922.5704 2631.7929,-2922.5704 2663.5487,-2922.5704"/>
<polygon fill="#000000" stroke="#000000" points="2663.7818,-2926.0705 2673.7818,-2922.5704 2663.7818,-2919.0705 2663.7818,-2926.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/&#45;&gt;node -->
<g id="node71" class="node node function">
<title>phone&#45;tree.parse.build/&#45;&gt;node</title>
<g id="a_node71"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 64&#10;(defn &#45;&gt;node [attrs]&#10; &#160;(assoc attrs :id (node&#45;id attrs)))">
<ellipse fill="#ffffff" stroke="#000000" cx="2400.6058" cy="-2187.5704" rx="116.511" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-2183.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/&#45;&gt;node</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/&#45;&gt;node&#45;&gt;phone&#45;tree.parse.build/node&#45;id -->
<g id="edge113" class="edge edge">
<title>phone&#45;tree.parse.build/&#45;&gt;node&#45;&gt;phone&#45;tree.parse.build/node&#45;id</title>
<g id="a_edge113"><a xlink:title="phone&#45;tree.parse.build/&#45;&gt;node &#45;&gt; phone&#45;tree.parse.build/node&#45;id">
<path fill="none" stroke="#000000" d="M2515.7044,-2190.6711C2567.4422,-2192.0649 2628.6712,-2193.7144 2681.7614,-2195.1446"/>
<polygon fill="#000000" stroke="#000000" points="2681.8294,-2198.6476 2691.9201,-2195.4183 2682.018,-2191.6502 2681.8294,-2198.6476"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/guess&#45;class*&#45;&gt;phone&#45;tree.parse.class/guess&#45;class* _default -->
<g id="edge115" class="edge edge">
<title>phone&#45;tree.parse.class/guess&#45;class*&#45;&gt;phone&#45;tree.parse.class/guess&#45;class* _default</title>
<g id="a_edge115"><a xlink:title="phone&#45;tree.parse.class/guess&#45;class* &#45;&gt; phone&#45;tree.parse.class/guess&#45;class* :default">
<path fill="none" stroke="#000000" d="M2926.5705,-3297.7316C2965.2074,-3294.8288 3008.6237,-3291.5668 3049.0923,-3288.5264"/>
<polygon fill="#000000" stroke="#000000" points="3049.6031,-3291.998 3059.3127,-3287.7585 3049.0786,-3285.0176 3049.6031,-3291.998"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/guess&#45;class* _const -->
<g id="node83" class="node node multimethod">
<title>phone&#45;tree.parse.class/guess&#45;class* _const</title>
<g id="a_node83"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/class.clj, line 71&#10;(defmethod guess&#45;class* :const&#10; &#160;[ast]&#10; &#160;(if (= :class (:type ast))&#10; &#160;&#160;&#160;(:val ast) ;; TODO: there might be exceptions to this, e.g. record or type?&#10; &#160;&#160;&#160;(do&#10; &#160;&#160;&#160;&#160;&#160;(log/debugf &quot;guess&#45;class with :const %s node: %s&quot; (:type ast) ast)&#10; &#160;&#160;&#160;&#160;&#160;(class (:val ast)))))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="3194.917" cy="-3331.5704" rx="158.375" ry="18"/>
<text text-anchor="middle" x="3194.917" y="-3327.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.class/guess&#45;class* :const</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/guess&#45;class*&#45;&gt;phone&#45;tree.parse.class/guess&#45;class* _const -->
<g id="edge116" class="edge edge">
<title>phone&#45;tree.parse.class/guess&#45;class*&#45;&gt;phone&#45;tree.parse.class/guess&#45;class* _const</title>
<g id="a_edge116"><a xlink:title="phone&#45;tree.parse.class/guess&#45;class* &#45;&gt; phone&#45;tree.parse.class/guess&#45;class* :const">
<path fill="none" stroke="#000000" d="M2930.2613,-3314.4291C2967.2913,-3316.8275 3008.4234,-3319.4915 3047.0086,-3321.9906"/>
<polygon fill="#000000" stroke="#000000" points="3047.0816,-3325.5026 3057.2869,-3322.6563 3047.5341,-3318.5172 3047.0816,-3325.5026"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/guess&#45;class* _var -->
<g id="node99" class="node node multimethod">
<title>phone&#45;tree.parse.class/guess&#45;class* _var</title>
<g id="a_node99"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/class.clj, line 65&#10;(defmethod guess&#45;class* :var&#10; &#160;[ast]&#10; &#160;(let [v (var&#45;get (:var ast))]&#10; &#160;&#160;&#160;(or (reify&#45;class v)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(class v))))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="3194.917" cy="-3461.5704" rx="150.6244" ry="18"/>
<text text-anchor="middle" x="3194.917" y="-3457.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.class/guess&#45;class* :var</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/guess&#45;class*&#45;&gt;phone&#45;tree.parse.class/guess&#45;class* _var -->
<g id="edge114" class="edge edge">
<title>phone&#45;tree.parse.class/guess&#45;class*&#45;&gt;phone&#45;tree.parse.class/guess&#45;class* _var</title>
<g id="a_edge114"><a xlink:title="phone&#45;tree.parse.class/guess&#45;class* &#45;&gt; phone&#45;tree.parse.class/guess&#45;class* :var">
<path fill="none" stroke="#000000" d="M2906.7046,-3318.9755C2935.6581,-3324.3781 2967.0389,-3331.9798 2994.844,-3342.5704 3028.2655,-3355.3002 3111.1019,-3407.3056 3159.0537,-3438.1964"/>
<polygon fill="#000000" stroke="#000000" points="3157.2824,-3441.2189 3167.5816,-3443.7044 3161.0803,-3435.3387 3157.2824,-3441.2189"/>
</a>
</g>
</g>
<!-- loom.attr/attr -->
<g id="node73" class="node node">
<title>loom.attr/attr</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1930.3771" cy="-1005.5704" rx="56.5441" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-1001.3704" font-family="Times,serif" font-size="14.00" fill="#000000">loom.attr/attr</text>
</g>
<!-- clojure.tools.analyzer.ast/children -->
<g id="node74" class="node node">
<title>clojure.tools.analyzer.ast/children</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="2400.6058" cy="-3277.5704" rx="129.4176" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-3273.3704" font-family="Times,serif" font-size="14.00" fill="#000000">clojure.tools.analyzer.ast/children</text>
</g>
<!-- phone&#45;tree.parse.build/attrs&#45;&gt;ubergraph -->
<g id="node75" class="node node function">
<title>phone&#45;tree.parse.build/attrs&#45;&gt;ubergraph</title>
<g id="a_node75"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 115&#10;(defn attrs&#45;&gt;ubergraph [attrs]&#10; &#160;(if (and (:src attrs) (:dest attrs))&#10; &#160;&#160;&#160;;; edge&#10; &#160;&#160;&#160;[(:src attrs) (:dest attrs) (dissoc attrs :src :dest)]&#10; &#160;&#160;&#160;;; node&#10; &#160;&#160;&#160;[(:id attrs) (dissoc attrs :id)]))">
<ellipse fill="#ffffff" stroke="#000000" cx="1481.7476" cy="-2019.5704" rx="150.4678" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-2015.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/attrs&#45;&gt;ubergraph</text>
</a>
</g>
</g>
<!-- phone&#45;tree.html/read&#45;html&#45;resource&#45;&gt;clojure.java.io/resource -->
<g id="edge117" class="edge edge">
<title>phone&#45;tree.html/read&#45;html&#45;resource&#45;&gt;clojure.java.io/resource</title>
<g id="a_edge117"><a xlink:title="phone&#45;tree.html/read&#45;html&#45;resource &#45;&gt; clojure.java.io/resource">
<path fill="none" stroke="#000000" d="M2066.7025,-821.5704C2140.2216,-821.5704 2229.4924,-821.5704 2297.2256,-821.5704"/>
<polygon fill="#000000" stroke="#000000" points="2297.4815,-825.0705 2307.4815,-821.5704 2297.4815,-818.0705 2297.4815,-825.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _protocol&#45;invoke -->
<g id="node80" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse _protocol&#45;invoke</title>
<g id="a_node80"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/protocol.clj, line 181&#10;(defmethod ast/parse :protocol&#45;invoke&#10; &#160;[{:keys [protocol&#45;fn target args] :as ast}]&#10; &#160;(let [protocol (&#45;&gt; protocol&#45;fn :meta :protocol var&#45;get)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;protocol&#45;fn (util/var&#45;&gt;symbol (:var protocol&#45;fn))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;interface (:on&#45;interface protocol)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;target (guess&#45;class target)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;to (if (isa? target interface)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; class is an implementer &#45;&#45; use a class method&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{:symbol (symbol (.getName target) (munge (name protocol&#45;fn)))}&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; class is not an implementer &#45;&#45; use the protocol function&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; itself; if we have a class, attempt to find a dispatch value&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(let [dispatch (protocol&#45;dispatch protocol target)]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(cond&#45;&gt; {:symbol protocol&#45;fn}&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dispatch (assoc :dispatch dispatch))))]&#10; &#160;&#160;&#160;(concat ;; edge to the protocol fn itself&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(build/edge ast {:dest to})&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; any args should be parsed as if they were children of the&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; enclosing scope&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(mapcat ast/parse (cons target args)))))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="1930.3771" cy="-2915.5704" rx="163.1769" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-2911.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse :protocol&#45;invoke</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _protocol&#45;invoke&#45;&gt;phone&#45;tree.parse.class/guess&#45;class -->
<g id="edge118" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _protocol&#45;invoke&#45;&gt;phone&#45;tree.parse.class/guess&#45;class</title>
<g id="a_edge118"><a xlink:title="phone&#45;tree.parse.ast/parse :protocol&#45;invoke &#45;&gt; phone&#45;tree.parse.class/guess&#45;class">
<path fill="none" stroke="#000000" d="M2061.7669,-2926.2607C2099.5222,-2930.311 2140.6388,-2935.6643 2178.2039,-2942.5704 2232.3852,-2952.5313 2292.8098,-2968.6169 2336.9859,-2981.3244"/>
<polygon fill="#000000" stroke="#000000" points="2336.1414,-2984.7236 2346.7205,-2984.1455 2338.0899,-2978.0002 2336.1414,-2984.7236"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _protocol&#45;invoke&#45;&gt;phone&#45;tree.parse.build/edge -->
<g id="edge119" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _protocol&#45;invoke&#45;&gt;phone&#45;tree.parse.build/edge</title>
<g id="a_edge119"><a xlink:title="phone&#45;tree.parse.ast/parse :protocol&#45;invoke &#45;&gt; phone&#45;tree.parse.build/edge">
<path fill="none" stroke="#000000" d="M2085.904,-2921.0312C2118.4094,-2916.2399 2151.0238,-2906.5128 2178.2039,-2888.5704 2205.4403,-2870.5908 2189.6287,-2846.0446 2214.2039,-2824.5704 2245.6127,-2797.1249 2288.4437,-2779.1613 2325.129,-2767.8155"/>
<polygon fill="#000000" stroke="#000000" points="2326.2213,-2771.1422 2334.804,-2764.9304 2324.2208,-2764.4341 2326.2213,-2771.1422"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _protocol&#45;invoke&#45;&gt;phone&#45;tree.parse.protocol/protocol&#45;dispatch -->
<g id="edge120" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _protocol&#45;invoke&#45;&gt;phone&#45;tree.parse.protocol/protocol&#45;dispatch</title>
<g id="a_edge120"><a xlink:title="phone&#45;tree.parse.ast/parse :protocol&#45;invoke &#45;&gt; phone&#45;tree.parse.protocol/protocol&#45;dispatch">
<path fill="none" stroke="#000000" d="M2092.2031,-2917.9794C2135.7045,-2918.627 2182.9249,-2919.3299 2227.0363,-2919.9866"/>
<polygon fill="#000000" stroke="#000000" points="2227.2335,-2923.4898 2237.2846,-2920.1391 2227.3378,-2916.4906 2227.2335,-2923.4898"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _protocol&#45;invoke&#45;&gt;phone&#45;tree.util/var&#45;&gt;symbol -->
<g id="edge121" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _protocol&#45;invoke&#45;&gt;phone&#45;tree.util/var&#45;&gt;symbol</title>
<g id="a_edge121"><a xlink:title="phone&#45;tree.parse.ast/parse :protocol&#45;invoke &#45;&gt; phone&#45;tree.util/var&#45;&gt;symbol">
<path fill="none" stroke="#000000" d="M2067.6824,-2905.8108C2415.5973,-2880.5629 3307.9361,-2812.3669 3358.9899,-2773.5704 3486.3755,-2676.7682 3520.1166,-2467.8862 3528.3436,-2391.9233"/>
<polygon fill="#000000" stroke="#000000" points="3531.8526,-2392.0117 3529.3804,-2381.7093 3524.8884,-2391.3047 3531.8526,-2392.0117"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _protocol&#45;invoke&#45;&gt;phone&#45;tree.parse.ast/parse -->
<g id="edge122" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _protocol&#45;invoke&#45;&gt;phone&#45;tree.parse.ast/parse</title>
<g id="a_edge122"><a xlink:title="phone&#45;tree.parse.ast/parse :protocol&#45;invoke &#45;&gt; phone&#45;tree.parse.ast/parse">
<path fill="none" stroke="#000000" d="M1779.922,-2908.5807C1747.7719,-2905.2484 1714.0208,-2901.3999 1682.5503,-2897.5704 1637.0983,-2892.0396 1585.9521,-2885.1526 1546.6537,-2878.5354"/>
<polygon fill="#000000" stroke="#000000" points="1547.1213,-2875.0645 1536.672,-2876.8146 1545.932,-2881.9627 1547.1213,-2875.0645"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/record&#45;reify!&#45;&gt;phone&#45;tree.parse.class/reify&#45;prefix -->
<g id="edge124" class="edge edge">
<title>phone&#45;tree.parse.class/record&#45;reify!&#45;&gt;phone&#45;tree.parse.class/reify&#45;prefix</title>
<g id="a_edge124"><a xlink:title="phone&#45;tree.parse.class/record&#45;reify! &#45;&gt; phone&#45;tree.parse.class/reify&#45;prefix">
<path fill="none" stroke="#000000" d="M3619.9323,-3582.9791C3635.7209,-3579.4104 3651.8296,-3574.9944 3666.6119,-3569.5704 3683.795,-3563.2655 3686.5372,-3558.3235 3702.6119,-3549.5704 3757.7324,-3519.5559 3821.6846,-3485.5705 3862.7101,-3463.8755"/>
<polygon fill="#000000" stroke="#000000" points="3864.4056,-3466.9383 3871.6113,-3459.1711 3861.1346,-3460.7495 3864.4056,-3466.9383"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/reify&#45;templates -->
<g id="node163" class="node node">
<title>phone&#45;tree.parse.class/reify&#45;templates</title>
<g id="a_node163"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/class.clj, line 20&#10;(def reify&#45;templates (atom {}))">
<ellipse fill="#c0c0c0" stroke="#000000" cx="3905.0123" cy="-3576.5704" rx="144.3419" ry="18"/>
<text text-anchor="middle" x="3905.0123" y="-3572.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.class/reify&#45;templates</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/record&#45;reify!&#45;&gt;phone&#45;tree.parse.class/reify&#45;templates -->
<g id="edge123" class="edge edge">
<title>phone&#45;tree.parse.class/record&#45;reify!&#45;&gt;phone&#45;tree.parse.class/reify&#45;templates</title>
<g id="a_edge123"><a xlink:title="phone&#45;tree.parse.class/record&#45;reify! &#45;&gt; phone&#45;tree.parse.class/reify&#45;templates">
<path fill="none" stroke="#000000" d="M3656.9701,-3589.8272C3690.766,-3588.0209 3727.5394,-3586.0556 3762.1672,-3584.2049"/>
<polygon fill="#000000" stroke="#000000" points="3762.5552,-3587.6892 3772.3541,-3583.6604 3762.1815,-3580.6992 3762.5552,-3587.6892"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/guess&#45;class* _const&#45;&gt;phone&#45;tree.log/debugf -->
<g id="edge125" class="edge edge">
<title>phone&#45;tree.parse.class/guess&#45;class* _const&#45;&gt;phone&#45;tree.log/debugf</title>
<g id="a_edge125"><a xlink:title="phone&#45;tree.parse.class/guess&#45;class* :const &#45;&gt; phone&#45;tree.log/debugf">
<path fill="none" stroke="#000000" d="M3311.9213,-3319.3782C3354.5955,-3314.9315 3402.1163,-3309.9797 3441.9461,-3305.8293"/>
<polygon fill="#000000" stroke="#000000" points="3442.3156,-3309.3098 3451.8989,-3304.7922 3441.59,-3302.3475 3442.3156,-3309.3098"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.protocol/super&#45;chain&#45;&gt;phone&#45;tree.parse.protocol/super&#45;chain -->
<g id="edge126" class="edge edge">
<title>phone&#45;tree.parse.protocol/super&#45;chain&#45;&gt;phone&#45;tree.parse.protocol/super&#45;chain</title>
<g id="a_edge126"><a xlink:title="phone&#45;tree.parse.protocol/super&#45;chain &#45;&gt; phone&#45;tree.parse.protocol/super&#45;chain">
<path fill="none" stroke="#000000" d="M2742.3091,-2992.6736C2725.5952,-3002.8405 2747.8008,-3012.5704 2808.9258,-3012.5704 2850.9492,-3012.5704 2874.5772,-3007.9715 2879.8096,-3001.7935"/>
<polygon fill="#000000" stroke="#000000" points="2882.9507,-3000.2479 2875.5425,-2992.6736 2876.6103,-3003.2145 2882.9507,-3000.2479"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.protocol/default&#45;record&#45;methods -->
<g id="node85" class="node node">
<title>phone&#45;tree.parse.protocol/default&#45;record&#45;methods</title>
<g id="a_node85"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/protocol.clj, line 15&#10;(def default&#45;record&#45;methods&#10; &#160;(delay&#10; &#160;&#160;(&#45;&gt;&gt; &#39;(defrecord Test [])&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;ana.jvm/analyze&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;ana.ast/nodes&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(filter (comp #{:method} :op))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(map (juxt :interface :name))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;set)))">
<ellipse fill="#c0c0c0" stroke="#000000" cx="2808.9258" cy="-2463.5704" rx="185.8365" ry="18"/>
<text text-anchor="middle" x="2808.9258" y="-2459.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.protocol/default&#45;record&#45;methods</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.protocol/default&#45;record&#45;methods&#45;&gt;clojure.tools.analyzer.jvm/analyze -->
<g id="edge128" class="edge edge">
<title>phone&#45;tree.parse.protocol/default&#45;record&#45;methods&#45;&gt;clojure.tools.analyzer.jvm/analyze</title>
<g id="a_edge128"><a xlink:title="phone&#45;tree.parse.protocol/default&#45;record&#45;methods &#45;&gt; clojure.tools.analyzer.jvm/analyze">
<path fill="none" stroke="#000000" d="M2994.8551,-2463.5704C3014.5644,-2463.5704 3034.372,-2463.5704 3053.4544,-2463.5704"/>
<polygon fill="#000000" stroke="#000000" points="3053.6681,-2467.0705 3063.6681,-2463.5704 3053.668,-2460.0705 3053.6681,-2467.0705"/>
</a>
</g>
</g>
<!-- clojure.tools.analyzer.ast/nodes -->
<g id="node133" class="node node">
<title>clojure.tools.analyzer.ast/nodes</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="3194.917" cy="-2746.5704" rx="120.7323" ry="18"/>
<text text-anchor="middle" x="3194.917" y="-2742.3704" font-family="Times,serif" font-size="14.00" fill="#000000">clojure.tools.analyzer.ast/nodes</text>
</g>
<!-- phone&#45;tree.parse.protocol/default&#45;record&#45;methods&#45;&gt;clojure.tools.analyzer.ast/nodes -->
<g id="edge127" class="edge edge">
<title>phone&#45;tree.parse.protocol/default&#45;record&#45;methods&#45;&gt;clojure.tools.analyzer.ast/nodes</title>
<g id="a_edge127"><a xlink:title="phone&#45;tree.parse.protocol/default&#45;record&#45;methods &#45;&gt; clojure.tools.analyzer.ast/nodes">
<path fill="none" stroke="#000000" d="M2831.2416,-2481.6394C2870.8369,-2513.524 2956.2438,-2581.512 3030.844,-2635.5704 3074.3024,-2667.0622 3125.7466,-2701.4073 3159.2913,-2723.4248"/>
<polygon fill="#000000" stroke="#000000" points="3157.5537,-2726.4705 3167.8369,-2729.0211 3161.3887,-2720.6145 3157.5537,-2726.4705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.log/warn -->
<g id="node86" class="node node function">
<title>phone&#45;tree.log/warn</title>
<g id="a_node86"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/log.clj, line 23&#10;(def warn (partial log :warn))">
<ellipse fill="#ffffff" stroke="#000000" cx="3530.8009" cy="-3650.5704" rx="81.6255" ry="18"/>
<text text-anchor="middle" x="3530.8009" y="-3646.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.log/warn</text>
</a>
</g>
</g>
<!-- phone&#45;tree.log/warn&#45;&gt;phone&#45;tree.log/log -->
<g id="edge129" class="edge edge">
<title>phone&#45;tree.log/warn&#45;&gt;phone&#45;tree.log/log</title>
<g id="a_edge129"><a xlink:title="phone&#45;tree.log/warn &#45;&gt; phone&#45;tree.log/log">
<path fill="none" stroke="#000000" d="M3610.1615,-3654.8119C3672.1466,-3658.1247 3758.0637,-3662.7166 3821.1662,-3666.0892"/>
<polygon fill="#000000" stroke="#000000" points="3821.3123,-3669.6019 3831.4848,-3666.6407 3821.6859,-3662.6119 3821.3123,-3669.6019"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.protocol -->
<g id="node88" class="node node namespace">
<title>phone&#45;tree.parse.protocol</title>
<g id="a_node88"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/protocol.clj, line 1&#10;(ns phone&#45;tree.parse.protocol&#10; &#160;&quot;Protocol, record, type, and reify parsing&quot;&#10; &#160;(:require [clojure.tools.analyzer.jvm.utils :refer [box]]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[clojure.tools.analyzer.jvm :as ana.jvm]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[clojure.tools.analyzer.ast :as ana.ast]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.log :as log]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.ast :as ast]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.build :as build]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.class :refer [guess&#45;class]]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.util :as util]))">
<ellipse fill="#ffb6c1" stroke="#000000" cx="125.7541" cy="-634.5704" rx="100.4347" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-630.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.protocol</text>
</a>
</g>
</g>
<!-- clojure.string/split -->
<g id="node89" class="node node">
<title>clojure.string/split</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1135.565" cy="-81.5704" rx="74.9117" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-77.3704" font-family="Times,serif" font-size="14.00" fill="#000000">clojure.string/split</text>
</g>
<!-- ubergraph.core/escape&#45;label -->
<g id="node90" class="node node">
<title>ubergraph.core/escape&#45;label</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="2400.6058" cy="-1189.5704" rx="109.26" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-1185.3704" font-family="Times,serif" font-size="14.00" fill="#000000">ubergraph.core/escape&#45;label</text>
</g>
<!-- phone&#45;tree.graph/edge&#45;attrs -->
<g id="node91" class="node node function">
<title>phone&#45;tree.graph/edge&#45;attrs</title>
<g id="a_node91"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 122&#10;(defn edge&#45;attrs [e attrs]&#10; &#160;{:class &quot;edge&quot;&#10; &#160;&#160;:tooltip (format &quot;%s &#45;&gt; %s&quot; (uber/src e) (uber/dest e))}&#10; &#160;#_(let [tt (tooltip attrs)]&#10; &#160;&#160;&#160;(cond&#45;&gt; {:class &quot;edge&quot;}&#10; &#160;&#160;&#160;&#160;&#160;tt (assoc :tooltip (str/replace (uber/escape&#45;label tt) &quot;\n&quot; &quot;\n&quot;)))))">
<ellipse fill="#ffffff" stroke="#000000" cx="1930.3771" cy="-1395.5704" rx="107.6672" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-1391.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/edge&#45;attrs</text>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/edge&#45;attrs&#45;&gt;loom.graph/src -->
<g id="edge130" class="edge edge">
<title>phone&#45;tree.graph/edge&#45;attrs&#45;&gt;loom.graph/src</title>
<g id="a_edge130"><a xlink:title="phone&#45;tree.graph/edge&#45;attrs &#45;&gt; loom.graph/src">
<path fill="none" stroke="#000000" d="M2023.2792,-1386.4823C2113.5009,-1377.6564 2248.4752,-1364.4525 2330.1688,-1356.4609"/>
<polygon fill="#000000" stroke="#000000" points="2330.7391,-1359.9219 2340.3508,-1355.4648 2330.0575,-1352.9551 2330.7391,-1359.9219"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/edge&#45;attrs&#45;&gt;loom.graph/dest -->
<g id="edge131" class="edge edge">
<title>phone&#45;tree.graph/edge&#45;attrs&#45;&gt;loom.graph/dest</title>
<g id="a_edge131"><a xlink:title="phone&#45;tree.graph/edge&#45;attrs &#45;&gt; loom.graph/dest">
<path fill="none" stroke="#000000" d="M2023.2792,-1404.6585C2112.4365,-1413.3803 2245.2968,-1426.3773 2327.2555,-1434.3949"/>
<polygon fill="#000000" stroke="#000000" points="2326.945,-1437.8812 2337.2382,-1435.3715 2327.6265,-1430.9144 2326.945,-1437.8812"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast -->
<g id="node92" class="node node namespace">
<title>phone&#45;tree.parse.ast</title>
<g id="a_node92"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/ast.clj, line 1&#10;(ns phone&#45;tree.parse.ast&#10; &#160;&quot;AST parsing functions&quot;&#10; &#160;(:require [clojure.tools.analyzer.ast :as ana.ast]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.util :as util]))">
<ellipse fill="#ffb6c1" stroke="#000000" cx="125.7541" cy="-688.5704" rx="80.6404" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-684.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _the&#45;var -->
<g id="node93" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse _the&#45;var</title>
<g id="a_node93"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/var.clj, line 23&#10;(defmethod ast/parse :the&#45;var&#10; &#160;[ast]&#10; &#160;(build/edge ast {:dest (:var ast)}))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="1930.3771" cy="-2753.5704" rx="131.7882" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-2749.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse :the&#45;var</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _the&#45;var&#45;&gt;phone&#45;tree.parse.build/edge -->
<g id="edge132" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _the&#45;var&#45;&gt;phone&#45;tree.parse.build/edge</title>
<g id="a_edge132"><a xlink:title="phone&#45;tree.parse.ast/parse :the&#45;var &#45;&gt; phone&#45;tree.parse.build/edge">
<path fill="none" stroke="#000000" d="M2061.9873,-2752.7307C2130.9889,-2752.2905 2214.8507,-2751.7555 2281.8538,-2751.328"/>
<polygon fill="#000000" stroke="#000000" points="2282.0575,-2754.8269 2292.035,-2751.2631 2282.0128,-2747.827 2282.0575,-2754.8269"/>
</a>
</g>
</g>
<!-- phone&#45;tree.redef/load&#45;redefs -->
<g id="node95" class="node node function">
<title>phone&#45;tree.redef/load&#45;redefs</title>
<g id="a_node95"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/redef.clj, line 39&#10;(defn load&#45;redefs&#10; &#160;[filename]&#10; &#160;(log/debugf &quot;Loading redefs from %s&quot; filename)&#10; &#160;(&#45;&gt;&gt; (read&#45;forms filename)&#10; &#160;&#160;&#160;&#160;&#160;&#160;(map redef&#45;form)&#10; &#160;&#160;&#160;&#160;&#160;&#160;(filter identity)&#10; &#160;&#160;&#160;&#160;&#160;&#160;set))">
<ellipse fill="#ffffff" stroke="#000000" cx="2808.9258" cy="-3369.5704" rx="110.5398" ry="18"/>
<text text-anchor="middle" x="2808.9258" y="-3365.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.redef/load&#45;redefs</text>
</a>
</g>
</g>
<!-- phone&#45;tree.redef/load&#45;redefs&#45;&gt;phone&#45;tree.redef/redef&#45;form -->
<g id="edge134" class="edge edge">
<title>phone&#45;tree.redef/load&#45;redefs&#45;&gt;phone&#45;tree.redef/redef&#45;form</title>
<g id="a_edge134"><a xlink:title="phone&#45;tree.redef/load&#45;redefs &#45;&gt; phone&#45;tree.redef/redef&#45;form">
<path fill="none" stroke="#000000" d="M2917.7951,-3366.2575C2945.234,-3360.9098 2973.0514,-3351.0641 2994.844,-3333.5704 3026.2003,-3308.3995 3001.9598,-3278.5434 3030.844,-3250.5704 3054.4773,-3227.6826 3087.1512,-3212.5595 3117.1237,-3202.714"/>
<polygon fill="#000000" stroke="#000000" points="3118.2489,-3206.0293 3126.7452,-3199.6997 3116.1561,-3199.3494 3118.2489,-3206.0293"/>
</a>
</g>
</g>
<!-- phone&#45;tree.redef/load&#45;redefs&#45;&gt;phone&#45;tree.redef/read&#45;forms -->
<g id="edge133" class="edge edge">
<title>phone&#45;tree.redef/load&#45;redefs&#45;&gt;phone&#45;tree.redef/read&#45;forms</title>
<g id="a_edge133"><a xlink:title="phone&#45;tree.redef/load&#45;redefs &#45;&gt; phone&#45;tree.redef/read&#45;forms">
<path fill="none" stroke="#000000" d="M2834.9506,-3387.2331C2875.1279,-3413.6205 2955.5117,-3462.9644 3030.844,-3488.5704 3050.3396,-3495.1971 3071.7085,-3500.2271 3092.3935,-3504.0358"/>
<polygon fill="#000000" stroke="#000000" points="3092.0268,-3507.5249 3102.4818,-3505.809 3093.2387,-3500.6306 3092.0268,-3507.5249"/>
</a>
</g>
</g>
<!-- phone&#45;tree.redef/load&#45;redefs&#45;&gt;phone&#45;tree.log/debugf -->
<g id="edge135" class="edge edge">
<title>phone&#45;tree.redef/load&#45;redefs&#45;&gt;phone&#45;tree.log/debugf</title>
<g id="a_edge135"><a xlink:title="phone&#45;tree.redef/load&#45;redefs &#45;&gt; phone&#45;tree.log/debugf">
<path fill="none" stroke="#000000" d="M2909.0314,-3377.2557C3020.0326,-3383.5416 3203.9067,-3387.2969 3358.9899,-3358.5704 3403.7365,-3350.2819 3452.3063,-3331.8027 3486.3515,-3317.1629"/>
<polygon fill="#000000" stroke="#000000" points="3487.7881,-3320.3548 3495.5535,-3313.1472 3484.9883,-3313.9391 3487.7881,-3320.3548"/>
</a>
</g>
</g>
<!-- loom.alg&#45;generic/bf&#45;traverse -->
<g id="node98" class="node node">
<title>loom.alg&#45;generic/bf&#45;traverse</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1930.3771" cy="-581.5704" rx="111.0416" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-577.3704" font-family="Times,serif" font-size="14.00" fill="#000000">loom.alg&#45;generic/bf&#45;traverse</text>
</g>
<!-- phone&#45;tree.parse.class/reify&#45;class -->
<g id="node140" class="node node function">
<title>phone&#45;tree.parse.class/reify&#45;class</title>
<g id="a_node140"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/class.clj, line 44&#10;(defn reify&#45;class&#10; &#160;&quot;Returns the (synthetic) class for a var with a reified class.&quot;&#10; &#160;[v]&#10; &#160;(let [prefix (some&#45;&gt;&gt; v class reify&#45;prefix)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;metadata (meta v)]&#10; &#160;&#160;&#160;(get @reify&#45;templates [prefix metadata])))">
<ellipse fill="#ffffff" stroke="#000000" cx="3530.8009" cy="-3380.5704" rx="127.4455" ry="18"/>
<text text-anchor="middle" x="3530.8009" y="-3376.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.class/reify&#45;class</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/guess&#45;class* _var&#45;&gt;phone&#45;tree.parse.class/reify&#45;class -->
<g id="edge136" class="edge edge">
<title>phone&#45;tree.parse.class/guess&#45;class* _var&#45;&gt;phone&#45;tree.parse.class/reify&#45;class</title>
<g id="a_edge136"><a xlink:title="phone&#45;tree.parse.class/guess&#45;class* :var &#45;&gt; phone&#45;tree.parse.class/reify&#45;class">
<path fill="none" stroke="#000000" d="M3294.5675,-3448.0225C3316.218,-3443.4638 3338.7013,-3437.4532 3358.9899,-3429.5704 3376.4681,-3422.7795 3377.524,-3414.393 3394.9899,-3407.5704 3406.6512,-3403.0152 3419.1884,-3399.196 3431.7625,-3396.0018"/>
<polygon fill="#000000" stroke="#000000" points="3432.9377,-3399.3188 3441.8386,-3393.572 3431.2967,-3392.5138 3432.9377,-3399.3188"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;topology&#45;&gt;loom.attr/attr -->
<g id="edge137" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;topology&#45;&gt;loom.attr/attr</title>
<g id="a_edge137"><a xlink:title="phone&#45;tree.graph/&#45;&gt;topology &#45;&gt; loom.attr/attr">
<path fill="none" stroke="#000000" d="M1557.5762,-1260.2392C1589.3879,-1250.8994 1624.1259,-1235.1232 1646.5503,-1208.5704 1696.6617,-1149.2336 1625.5041,-1090.2746 1682.5503,-1037.5704 1732.7967,-991.1485 1815.1705,-989.7736 1871.0297,-995.5642"/>
<polygon fill="#000000" stroke="#000000" points="1870.8047,-999.0612 1881.1375,-996.7196 1871.5997,-992.1065 1870.8047,-999.0612"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;topology&#45;&gt;loom.graph/src -->
<g id="edge138" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;topology&#45;&gt;loom.graph/src</title>
<g id="a_edge138"><a xlink:title="phone&#45;tree.graph/&#45;&gt;topology &#45;&gt; loom.graph/src">
<path fill="none" stroke="#000000" d="M1592.6703,-1270.7495C1730.5632,-1268.7666 1972.8224,-1270.2877 2178.2039,-1297.5704 2236.4911,-1305.3132 2301.8736,-1321.5331 2346.5753,-1333.8116"/>
<polygon fill="#000000" stroke="#000000" points="2345.779,-1337.2229 2356.3508,-1336.5245 2347.651,-1330.4778 2345.779,-1337.2229"/>
</a>
</g>
</g>
<!-- loom.graph/edges -->
<g id="node106" class="node node">
<title>loom.graph/edges</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1930.3771" cy="-951.5704" rx="73.4496" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-947.3704" font-family="Times,serif" font-size="14.00" fill="#000000">loom.graph/edges</text>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;topology&#45;&gt;loom.graph/edges -->
<g id="edge140" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;topology&#45;&gt;loom.graph/edges</title>
<g id="a_edge140"><a xlink:title="phone&#45;tree.graph/&#45;&gt;topology &#45;&gt; loom.graph/edges">
<path fill="none" stroke="#000000" d="M1559.081,-1260.5321C1590.7835,-1251.2622 1625.0192,-1235.4596 1646.5503,-1208.5704 1711.2218,-1127.8054 1607.6985,-1050.0028 1682.5503,-978.5704 1729.9328,-933.3525 1807.8975,-932.1596 1863.7304,-938.7431"/>
<polygon fill="#000000" stroke="#000000" points="1863.5199,-942.2449 1873.8857,-940.0541 1864.4161,-935.3025 1863.5199,-942.2449"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;topology&#45;&gt;loom.graph/dest -->
<g id="edge139" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;topology&#45;&gt;loom.graph/dest</title>
<g id="a_edge139"><a xlink:title="phone&#45;tree.graph/&#45;&gt;topology &#45;&gt; loom.graph/dest">
<path fill="none" stroke="#000000" d="M1569.9832,-1284.6949C1744.0823,-1306.7781 2120.045,-1355.1759 2178.2039,-1368.5704 2239.633,-1382.718 2308.2738,-1406.5228 2352.8329,-1423.0872"/>
<polygon fill="#000000" stroke="#000000" points="2351.6478,-1426.3807 2362.2402,-1426.6099 2354.1026,-1419.8253 2351.6478,-1426.3807"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.core/in&#45;ns) -->
<g id="node101" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse (quote clojure.core/in&#45;ns)</title>
<g id="a_node101"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/namespace.clj, line 6&#10;(defmethod ast/parse &#39;clojure.core/in&#45;ns&#10; &#160;[{:keys [result args] :as ast}]&#10; &#160;(build/node ast {:symbol (ns&#45;name result) :type :namespace} args))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="1930.3771" cy="-2591.5704" rx="194.0379" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-2587.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse (quote clojure.core/in&#45;ns)</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.core/in&#45;ns)&#45;&gt;phone&#45;tree.parse.build/node -->
<g id="edge141" class="edge edge">
<title>phone&#45;tree.parse.ast/parse (quote clojure.core/in&#45;ns)&#45;&gt;phone&#45;tree.parse.build/node</title>
<g id="a_edge141"><a xlink:title="phone&#45;tree.parse.ast/parse (quote clojure.core/in&#45;ns) &#45;&gt; phone&#45;tree.parse.build/node">
<path fill="none" stroke="#000000" d="M1863.5621,-2574.6589C1806.2231,-2560.4764 1721.2609,-2540.2453 1646.5503,-2525.5704 1500.9593,-2496.9728 1456.823,-2522.0545 1316.9449,-2472.5704 1261.2645,-2452.8726 1203.0911,-2416.2009 1168.0872,-2392.0896"/>
<polygon fill="#000000" stroke="#000000" points="1169.9085,-2389.0929 1159.7027,-2386.2482 1165.907,-2394.8364 1169.9085,-2389.0929"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class -->
<g id="node102" class="node node namespace">
<title>phone&#45;tree.parse.class</title>
<g id="a_node102"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/class.clj, line 1&#10;(ns phone&#45;tree.parse.class&#10; &#160;&quot;Class guessing.&quot;&#10; &#160;(:require [phone&#45;tree.log :as log]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.ast :as ast]))">
<ellipse fill="#ffb6c1" stroke="#000000" cx="125.7541" cy="-742.5704" rx="88.3738" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-738.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.class</text>
</a>
</g>
</g>
<!-- phone&#45;tree.namespace -->
<g id="node103" class="node node namespace">
<title>phone&#45;tree.namespace</title>
<g id="a_node103"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/namespace.clj, line 1&#10;(ns phone&#45;tree.namespace&#10; &#160;&quot;Namespace utilities&quot;&#10; &#160;(:require [clojure.tools.namespace.dir :as dir]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[clojure.tools.namespace.track :as track]))">
<ellipse fill="#ffb6c1" stroke="#000000" cx="125.7541" cy="-796.5704" rx="88.833" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-792.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.namespace</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/cli&#45;options&#45;&gt;phone&#45;tree.core/collect&#45;fn -->
<g id="edge142" class="edge edge">
<title>phone&#45;tree.core/cli&#45;options&#45;&gt;phone&#45;tree.core/collect&#45;fn</title>
<g id="a_edge142"><a xlink:title="phone&#45;tree.core/cli&#45;options &#45;&gt; phone&#45;tree.core/collect&#45;fn">
<path fill="none" stroke="#000000" d="M842.828,-135.5704C898.6186,-135.5704 967.0591,-135.5704 1023.7319,-135.5704"/>
<polygon fill="#000000" stroke="#000000" points="1023.8075,-139.0705 1033.8075,-135.5704 1023.8075,-132.0705 1023.8075,-139.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/cli&#45;options&#45;&gt;clojure.string/split -->
<g id="edge143" class="edge edge">
<title>phone&#45;tree.core/cli&#45;options&#45;&gt;clojure.string/split</title>
<g id="a_edge143"><a xlink:title="phone&#45;tree.core/cli&#45;options &#45;&gt; clojure.string/split">
<path fill="none" stroke="#000000" d="M820.1386,-124.316C890.8648,-114.7314 991.6175,-101.0777 1060.0854,-91.7991"/>
<polygon fill="#000000" stroke="#000000" points="1060.9267,-95.2172 1070.3661,-90.4059 1059.9866,-88.2806 1060.9267,-95.2172"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _def -->
<g id="node107" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse _def</title>
<g id="a_node107"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/var.clj, line 10&#10;(defmethod ast/parse :def&#10; &#160;[{:keys [var init] :as ast}]&#10; &#160;;; &#45; symbol is the node&#39;s :var&#10; &#160;;; &#45; body is the node&#39;s :init&#10; &#160;(build/node ast var init))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="1930.3771" cy="-2499.5704" rx="117.7905" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-2495.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse :def</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _def&#45;&gt;phone&#45;tree.parse.build/node -->
<g id="edge144" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _def&#45;&gt;phone&#45;tree.parse.build/node</title>
<g id="a_edge144"><a xlink:title="phone&#45;tree.parse.ast/parse :def &#45;&gt; phone&#45;tree.parse.build/node">
<path fill="none" stroke="#000000" d="M1821.6061,-2492.5466C1671.7805,-2482.2508 1409.8818,-2461.8516 1316.9449,-2439.5704 1268.6461,-2427.991 1216.0641,-2406.3276 1180.012,-2389.9629"/>
<polygon fill="#000000" stroke="#000000" points="1181.3061,-2386.7058 1170.7578,-2385.7136 1178.3851,-2393.0672 1181.3061,-2386.7058"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _new -->
<g id="node108" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse _new</title>
<g id="a_node108"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/interop.clj, line 55&#10;(defmethod ast/parse :new&#10; &#160;[{:keys [class args] :as ast}]&#10; &#160;(let [cls (or (guess&#45;class class)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(guess&#45;class ast))]&#10; &#160;&#160;&#160;(concat ;; edge to the constructor&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(build/edge ast {:dest (symbol (.getName cls) &quot;.&quot;)})&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; args are parsed as children of the enclosing scope&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(ast/parse&#45;children args))))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="1930.3771" cy="-2969.5704" rx="121.1737" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-2965.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse :new</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _new&#45;&gt;phone&#45;tree.parse.ast/parse&#45;children -->
<g id="edge145" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _new&#45;&gt;phone&#45;tree.parse.ast/parse&#45;children</title>
<g id="a_edge145"><a xlink:title="phone&#45;tree.parse.ast/parse :new &#45;&gt; phone&#45;tree.parse.ast/parse&#45;children">
<path fill="none" stroke="#000000" d="M2043.1121,-2962.8333C2087.7372,-2964.856 2137.8935,-2973.3379 2178.2039,-2996.5704 2201.6172,-3010.0644 2192.5848,-3029.3567 2214.2039,-3045.5704 2245.1878,-3068.8074 2284.9095,-3084.7497 2319.718,-3095.3227"/>
<polygon fill="#000000" stroke="#000000" points="2318.8132,-3098.7047 2329.3942,-3098.1641 2320.7855,-3091.9883 2318.8132,-3098.7047"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _new&#45;&gt;phone&#45;tree.parse.class/guess&#45;class -->
<g id="edge146" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _new&#45;&gt;phone&#45;tree.parse.class/guess&#45;class</title>
<g id="a_edge146"><a xlink:title="phone&#45;tree.parse.ast/parse :new &#45;&gt; phone&#45;tree.parse.class/guess&#45;class">
<path fill="none" stroke="#000000" d="M2041.5169,-2976.8973C2110.895,-2981.4711 2200.4453,-2987.3747 2272.7617,-2992.1422"/>
<polygon fill="#000000" stroke="#000000" points="2272.6389,-2995.6416 2282.8475,-2992.8071 2273.0995,-2988.6568 2272.6389,-2995.6416"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _new&#45;&gt;phone&#45;tree.parse.build/edge -->
<g id="edge147" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _new&#45;&gt;phone&#45;tree.parse.build/edge</title>
<g id="a_edge147"><a xlink:title="phone&#45;tree.parse.ast/parse :new &#45;&gt; phone&#45;tree.parse.build/edge">
<path fill="none" stroke="#000000" d="M2026.3695,-2980.6094C2076.0008,-2981.3424 2135.046,-2973.9207 2178.2039,-2942.5704 2209.7493,-2919.6556 2188.3105,-2891.7205 2214.2039,-2862.5704 2251.1885,-2820.9342 2307.4401,-2790.0944 2348.4754,-2771.4329"/>
<polygon fill="#000000" stroke="#000000" points="2350.0594,-2774.559 2357.7715,-2767.2944 2347.2124,-2768.1641 2350.0594,-2774.559"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core -->
<g id="node110" class="node node namespace">
<title>phone&#45;tree.core</title>
<g id="a_node110"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/core.clj, line 1&#10;(ns phone&#45;tree.core&#10; &#160;(:require [clojure.string :as str]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[clojure.tools.cli :as cli]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.graph :as graph]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.log :as log]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.html :as html]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.namespace :refer [nss&#45;in&#45;dirs prepare&#45;namespaces]]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse :as parse]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[ubergraph.core :as uber]&#10;&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#_[clj&#45;async&#45;profiler.core :as prof]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;))">
<ellipse fill="#ffb6c1" stroke="#000000" cx="125.7541" cy="-850.5704" rx="65.1882" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-846.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.core</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse/parse&#45;ns -->
<g id="node112" class="node node function">
<title>phone&#45;tree.parse/parse&#45;ns</title>
<g id="a_node112"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse.clj, line 40&#10;(defn parse&#45;ns [sym]&#10; &#160;(log/debugf &quot;Parsing namespace: %s&quot; sym)&#10; &#160;(mapcat ast/parse (ana.jvm/analyze&#45;ns sym)))">
<ellipse fill="#ffffff" stroke="#000000" cx="1135.565" cy="-2585.5704" rx="100.9188" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-2581.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse/parse&#45;ns</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse/parse&#45;ns&#45;&gt;phone&#45;tree.parse.ast/parse -->
<g id="edge149" class="edge edge">
<title>phone&#45;tree.parse/parse&#45;ns&#45;&gt;phone&#45;tree.parse.ast/parse</title>
<g id="a_edge149"><a xlink:title="phone&#45;tree.parse/parse&#45;ns &#45;&gt; phone&#45;tree.parse.ast/parse">
<path fill="none" stroke="#000000" d="M1157.7469,-2603.2553C1217.6887,-2651.0449 1382.9909,-2782.8349 1451.4477,-2837.4133"/>
<polygon fill="#000000" stroke="#000000" points="1449.3014,-2840.1783 1459.3024,-2843.6756 1453.6652,-2834.7049 1449.3014,-2840.1783"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse/parse&#45;ns&#45;&gt;phone&#45;tree.log/debugf -->
<g id="edge148" class="edge edge">
<title>phone&#45;tree.parse/parse&#45;ns&#45;&gt;phone&#45;tree.log/debugf</title>
<g id="a_edge148"><a xlink:title="phone&#45;tree.parse/parse&#45;ns &#45;&gt; phone&#45;tree.log/debugf">
<path fill="none" stroke="#000000" d="M1141.1436,-2603.7032C1173.1477,-2704.0723 1343.9779,-3192.994 1682.5503,-3358.5704 1863.4276,-3447.0271 2399.2239,-3377.2234 2587.0076,-3304.5704 2605.1749,-3297.5415 2604.6365,-3286.048 2623.0076,-3279.5704 2794.3846,-3219.1432 2849.2402,-3257.0189 3030.844,-3250.5704 3176.5948,-3245.395 3214.3931,-3231.5485 3358.9899,-3250.5704 3398.8362,-3255.8122 3442.5756,-3267.6141 3475.9501,-3277.9507"/>
<polygon fill="#000000" stroke="#000000" points="3474.9274,-3281.298 3485.5168,-3280.9612 3477.0286,-3274.6208 3474.9274,-3281.298"/>
</a>
</g>
</g>
<!-- clojure.tools.analyzer.jvm/analyze&#45;ns -->
<g id="node155" class="node node">
<title>clojure.tools.analyzer.jvm/analyze&#45;ns</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1481.7476" cy="-2585.5704" rx="141.9545" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-2581.3704" font-family="Times,serif" font-size="14.00" fill="#000000">clojure.tools.analyzer.jvm/analyze&#45;ns</text>
</g>
<!-- phone&#45;tree.parse/parse&#45;ns&#45;&gt;clojure.tools.analyzer.jvm/analyze&#45;ns -->
<g id="edge150" class="edge edge">
<title>phone&#45;tree.parse/parse&#45;ns&#45;&gt;clojure.tools.analyzer.jvm/analyze&#45;ns</title>
<g id="a_edge150"><a xlink:title="phone&#45;tree.parse/parse&#45;ns &#45;&gt; clojure.tools.analyzer.jvm/analyze&#45;ns">
<path fill="none" stroke="#000000" d="M1236.626,-2585.5704C1265.7092,-2585.5704 1298.0945,-2585.5704 1329.5462,-2585.5704"/>
<polygon fill="#000000" stroke="#000000" points="1329.7196,-2589.0705 1339.7195,-2585.5704 1329.7195,-2582.0705 1329.7196,-2589.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.log/enabled? -->
<g id="node176" class="node node function">
<title>phone&#45;tree.log/enabled?</title>
<g id="a_node176"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/log.clj, line 11&#10;(defn enabled?&#10; &#160;[level]&#10; &#160;(contains? (level&#45;map *level*) level))">
<ellipse fill="#ffffff" stroke="#000000" cx="4238.7199" cy="-3017.5704" rx="95.1148" ry="18"/>
<text text-anchor="middle" x="4238.7199" y="-3013.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.log/enabled?</text>
</a>
</g>
</g>
<!-- phone&#45;tree.log/log&#45;&gt;phone&#45;tree.log/enabled? -->
<g id="edge151" class="edge edge">
<title>phone&#45;tree.log/log&#45;&gt;phone&#45;tree.log/enabled?</title>
<g id="a_edge151"><a xlink:title="phone&#45;tree.log/log &#45;&gt; phone&#45;tree.log/enabled?">
<path fill="none" stroke="#000000" d="M3975.9311,-3664.5592C4019.8265,-3657.096 4073.9994,-3640.4758 4107.4127,-3603.5704 4183.9505,-3519.0334 4225.5636,-3151.0699 4236.0512,-3045.7997"/>
<polygon fill="#000000" stroke="#000000" points="4239.5552,-3045.9284 4237.0478,-3035.6345 4232.5886,-3045.2453 4239.5552,-3045.9284"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/reachable&#45;nodes&#45;&gt;loom.alg&#45;generic/bf&#45;traverse -->
<g id="edge152" class="edge edge">
<title>phone&#45;tree.graph/reachable&#45;nodes&#45;&gt;loom.alg&#45;generic/bf&#45;traverse</title>
<g id="a_edge152"><a xlink:title="phone&#45;tree.graph/reachable&#45;nodes &#45;&gt; loom.alg&#45;generic/bf&#45;traverse">
<path fill="none" stroke="#000000" d="M1612.1125,-581.5704C1674.2368,-581.5704 1748.0956,-581.5704 1809.0164,-581.5704"/>
<polygon fill="#000000" stroke="#000000" points="1809.0663,-585.0705 1819.0663,-581.5704 1809.0662,-578.0705 1809.0663,-585.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph -->
<g id="node116" class="node node namespace">
<title>phone&#45;tree.graph</title>
<g id="a_node116"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 1&#10;(ns phone&#45;tree.graph&#10; &#160;&quot;Graph manipulation functions&quot;&#10; &#160;(:require [clojure.data.csv :as csv]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[clojure.data.json :as json]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[clojure.string :as str]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[loom.alg&#45;generic :as loom.alg]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[loom.graph :as lg]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[loom.attr :as la]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[ubergraph.core :as uber]))">
<ellipse fill="#ffb6c1" stroke="#000000" cx="125.7541" cy="-904.5704" rx="70.0253" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-900.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse/ns&#45;&gt;graph -->
<g id="node117" class="node node function">
<title>phone&#45;tree.parse/ns&#45;&gt;graph</title>
<g id="a_node117"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse.clj, line 44&#10;(defn ns&#45;&gt;graph&#10; &#160;&quot;Returns a call graph for a namespace symbol.&quot;&#10; &#160;[sym]&#10; &#160;(build/ubergraph (parse&#45;ns sym)))">
<ellipse fill="#ffffff" stroke="#000000" cx="737.0902" cy="-2158.5704" rx="107.347" ry="18"/>
<text text-anchor="middle" x="737.0902" y="-2154.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse/ns&#45;&gt;graph</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse/ns&#45;&gt;graph&#45;&gt;phone&#45;tree.parse/parse&#45;ns -->
<g id="edge153" class="edge edge">
<title>phone&#45;tree.parse/ns&#45;&gt;graph&#45;&gt;phone&#45;tree.parse/parse&#45;ns</title>
<g id="a_edge153"><a xlink:title="phone&#45;tree.parse/ns&#45;&gt;graph &#45;&gt; phone&#45;tree.parse/parse&#45;ns">
<path fill="none" stroke="#000000" d="M762.517,-2176.306C805.2386,-2206.8697 892.7674,-2272.8312 954.1851,-2341.5704 973.4035,-2363.0798 973.4122,-2372.1041 990.1851,-2395.5704 1032.8921,-2455.32 1085.9618,-2523.1769 1114.7035,-2559.4353"/>
<polygon fill="#000000" stroke="#000000" points="1112.1691,-2561.8719 1121.1291,-2567.5259 1117.6506,-2557.5184 1112.1691,-2561.8719"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/ubergraph -->
<g id="node172" class="node node function">
<title>phone&#45;tree.parse.build/ubergraph</title>
<g id="a_node172"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 127&#10;(defn ubergraph [nodes&#45;and&#45;edges]&#10; &#160;;; collapse multiple nodes into a single node, and multiple edges into a&#10; &#160;;; single edge, but retain each ast location in :locations&#10; &#160;(&#45;&gt;&gt; nodes&#45;and&#45;edges&#10; &#160;&#160;&#160;&#160;&#160;&#160;(group&#45;by :id)&#10; &#160;&#160;&#160;&#160;&#160;&#160;(vals)&#10; &#160;&#160;&#160;&#160;&#160;&#160;(map merge&#45;attrs)&#10; &#160;&#160;&#160;&#160;&#160;&#160;(map attrs&#45;&gt;ubergraph)&#10; &#160;&#160;&#160;&#160;&#160;&#160;(apply uber/digraph)&#10; &#160;&#160;&#160;&#160;&#160;&#160;(mark&#45;external&#45;nodes)))">
<ellipse fill="#ffffff" stroke="#000000" cx="1135.565" cy="-1965.5704" rx="127.1521" ry="18"/>
<text text-anchor="middle" x="1135.565" y="-1961.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/ubergraph</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse/ns&#45;&gt;graph&#45;&gt;phone&#45;tree.parse.build/ubergraph -->
<g id="edge154" class="edge edge">
<title>phone&#45;tree.parse/ns&#45;&gt;graph&#45;&gt;phone&#45;tree.parse.build/ubergraph</title>
<g id="a_edge154"><a xlink:title="phone&#45;tree.parse/ns&#45;&gt;graph &#45;&gt; phone&#45;tree.parse.build/ubergraph">
<path fill="none" stroke="#000000" d="M772.4522,-2141.4429C844.9328,-2106.3372 1010.2521,-2026.2653 1090.373,-1987.459"/>
<polygon fill="#000000" stroke="#000000" points="1092.2353,-1990.446 1099.7095,-1982.9369 1089.1839,-1984.1461 1092.2353,-1990.446"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build -->
<g id="node119" class="node node namespace">
<title>phone&#45;tree.parse.build</title>
<g id="a_node119"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 1&#10;(ns phone&#45;tree.parse.build&#10; &#160;&quot;Call graph building functions.&quot;&#10; &#160;(:require [phone&#45;tree.parse.ast :as ast]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.log :as log]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.util :as util]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[ubergraph.core :as uber]))">
<ellipse fill="#ffb6c1" stroke="#000000" cx="125.7541" cy="-958.5704" rx="89.3514" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-954.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.macro -->
<g id="node120" class="node node namespace">
<title>phone&#45;tree.parse.macro</title>
<g id="a_node120"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/macro.clj, line 1&#10;(ns phone&#45;tree.parse.macro&#10; &#160;&quot;defmacro and syntax quote parsing.&quot;&#10; &#160;(:require [clojure.tools.analyzer.ast :as ana.ast]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.ast :as ast]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.build :as build]))">
<ellipse fill="#ffb6c1" stroke="#000000" cx="125.7541" cy="-1012.5704" rx="93.1842" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-1008.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.macro</text>
</a>
</g>
</g>
<!-- phone&#45;tree.html -->
<g id="node121" class="node node namespace">
<title>phone&#45;tree.html</title>
<g id="a_node121"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/html.clj, line 1&#10;(ns phone&#45;tree.html&#10; &#160;&quot;HTML render using vis.js&quot;&#10; &#160;(:require [clojure.java.io :as io]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[clojure.string :as str]))">
<ellipse fill="#ffb6c1" stroke="#000000" cx="125.7541" cy="-1066.5704" rx="66.1832" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-1062.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.html</text>
</a>
</g>
</g>
<!-- phone&#45;tree.redef -->
<g id="node125" class="node node namespace">
<title>phone&#45;tree.redef</title>
<g id="a_node125"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/redef.clj, line 1&#10;(ns phone&#45;tree.redef&#10; &#160;&quot;Functions that provide macro redefs.&quot;&#10; &#160;(:require [clojure.java.io :as io]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.log :as log]))">
<ellipse fill="#ffb6c1" stroke="#000000" cx="125.7541" cy="-1120.5704" rx="68.0784" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-1116.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.redef</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.protocol/default&#45;record&#45;method?&#45;&gt;phone&#45;tree.parse.protocol/default&#45;record&#45;methods -->
<g id="edge155" class="edge edge">
<title>phone&#45;tree.parse.protocol/default&#45;record&#45;method?&#45;&gt;phone&#45;tree.parse.protocol/default&#45;record&#45;methods</title>
<g id="a_edge155"><a xlink:title="phone&#45;tree.parse.protocol/default&#45;record&#45;method? &#45;&gt; phone&#45;tree.parse.protocol/default&#45;record&#45;methods">
<path fill="none" stroke="#000000" d="M2510.5652,-2424.1124C2565.6038,-2431.3913 2632.3411,-2440.2172 2688.7298,-2447.6746"/>
<polygon fill="#000000" stroke="#000000" points="2688.3974,-2451.161 2698.77,-2449.0024 2689.3153,-2444.2214 2688.3974,-2451.161"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.protocol/record&#45;class? -->
<g id="node138" class="node node function">
<title>phone&#45;tree.parse.protocol/record&#45;class?</title>
<g id="a_node138"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/protocol.clj, line 24&#10;(defn record&#45;class? [cls]&#10; &#160;(.isAssignableFrom clojure.lang.IRecord cls))">
<ellipse fill="#ffffff" stroke="#000000" cx="2808.9258" cy="-2409.5704" rx="149.6369" ry="18"/>
<text text-anchor="middle" x="2808.9258" y="-2405.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.protocol/record&#45;class?</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.protocol/default&#45;record&#45;method?&#45;&gt;phone&#45;tree.parse.protocol/record&#45;class? -->
<g id="edge156" class="edge edge">
<title>phone&#45;tree.parse.protocol/default&#45;record&#45;method?&#45;&gt;phone&#45;tree.parse.protocol/record&#45;class?</title>
<g id="a_edge156"><a xlink:title="phone&#45;tree.parse.protocol/default&#45;record&#45;method? &#45;&gt; phone&#45;tree.parse.protocol/record&#45;class?">
<path fill="none" stroke="#000000" d="M2587.1406,-2409.5704C2607.8162,-2409.5704 2628.7346,-2409.5704 2649.0393,-2409.5704"/>
<polygon fill="#000000" stroke="#000000" points="2649.274,-2413.0705 2659.274,-2409.5704 2649.2739,-2406.0705 2649.274,-2413.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/run&#45;&gt;phone&#45;tree.core/print&#45;graph -->
<g id="edge157" class="edge edge">
<title>phone&#45;tree.core/run&#45;&gt;phone&#45;tree.core/print&#45;graph</title>
<g id="a_edge157"><a xlink:title="phone&#45;tree.core/run &#45;&gt; phone&#45;tree.core/print&#45;graph">
<path fill="none" stroke="#000000" d="M393.5826,-461.6464C439.1263,-566.7754 669.7823,-1099.2025 725.1362,-1226.9768"/>
<polygon fill="#000000" stroke="#000000" points="722.0537,-1228.6662 729.2405,-1236.4508 728.4769,-1225.8835 722.0537,-1228.6662"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/run&#45;&gt;phone&#45;tree.core/prune&#45;graph -->
<g id="edge158" class="edge edge">
<title>phone&#45;tree.core/run&#45;&gt;phone&#45;tree.core/prune&#45;graph</title>
<g id="a_edge158"><a xlink:title="phone&#45;tree.core/run &#45;&gt; phone&#45;tree.core/prune&#45;graph">
<path fill="none" stroke="#000000" d="M443.3748,-456.0351C502.6291,-468.8528 595.2339,-488.8846 660.5956,-503.0234"/>
<polygon fill="#000000" stroke="#000000" points="659.924,-506.459 670.438,-505.1525 661.4041,-499.6173 659.924,-506.459"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/run&#45;&gt;phone&#45;tree.log/*level* -->
<g id="edge159" class="edge edge">
<title>phone&#45;tree.core/run&#45;&gt;phone&#45;tree.log/*level*</title>
<g id="a_edge159"><a xlink:title="phone&#45;tree.core/run &#45;&gt; phone&#45;tree.log/*level*">
<path fill="none" stroke="#000000" d="M404.3002,-425.6955C426.9633,-402.6954 464.6684,-360.4487 483.9953,-316.5704 521.8134,-230.7114 451.9099,-173.1176 519.9953,-108.5704 719.9316,80.9757 860.0614,-35.5704 1135.565,-35.5704 1135.565,-35.5704 1135.565,-35.5704 3905.0123,-35.5704 4263.8122,-35.5704 4440.9398,-1446.0481 4466.1211,-1663.5539"/>
<polygon fill="#000000" stroke="#000000" points="4462.6494,-1664.0014 4467.2667,-1673.5371 4469.6038,-1663.2033 4462.6494,-1664.0014"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/find&#45;namespaces -->
<g id="node143" class="node node function">
<title>phone&#45;tree.core/find&#45;namespaces</title>
<g id="a_node143"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/core.clj, line 129&#10;(defn find&#45;namespaces [{:keys [source&#45;paths include&#45;ns exclude&#45;ns]}]&#10; &#160;(cond&#45;&gt;&gt; (nss&#45;in&#45;dirs source&#45;paths)&#10; &#160;&#160;&#160;true (map str)&#10; &#160;&#160;&#160;(seq include&#45;ns) (filter (partial matches&#45;any? include&#45;ns))&#10; &#160;&#160;&#160;(seq exclude&#45;ns) (remove (partial matches&#45;any? exclude&#45;ns))&#10; &#160;&#160;&#160;true (map symbol)))">
<ellipse fill="#ffffff" stroke="#000000" cx="737.0902" cy="-443.5704" rx="126.9778" ry="18"/>
<text text-anchor="middle" x="737.0902" y="-439.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.core/find&#45;namespaces</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/run&#45;&gt;phone&#45;tree.core/find&#45;namespaces -->
<g id="edge160" class="edge edge">
<title>phone&#45;tree.core/run&#45;&gt;phone&#45;tree.core/find&#45;namespaces</title>
<g id="a_edge160"><a xlink:title="phone&#45;tree.core/run &#45;&gt; phone&#45;tree.core/find&#45;namespaces">
<path fill="none" stroke="#000000" d="M465.4759,-443.5704C505.1913,-443.5704 554.3447,-443.5704 599.8741,-443.5704"/>
<polygon fill="#000000" stroke="#000000" points="600.1365,-447.0705 610.1365,-443.5704 600.1365,-440.0705 600.1365,-447.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/run&#45;&gt;phone&#45;tree.log/debugf -->
<g id="edge161" class="edge edge">
<title>phone&#45;tree.core/run&#45;&gt;phone&#45;tree.log/debugf</title>
<g id="a_edge161"><a xlink:title="phone&#45;tree.core/run &#45;&gt; phone&#45;tree.log/debugf">
<path fill="none" stroke="#000000" d="M385.8252,-461.7447C386.7001,-635.6523 397.4581,-2007.4651 519.9953,-2395.5704 679.4152,-2900.4922 606.074,-3415.5704 1135.565,-3415.5704 1135.565,-3415.5704 1135.565,-3415.5704 2808.9258,-3415.5704 3053.8121,-3415.5704 3131.2493,-3473.5899 3358.9899,-3383.5704 3378.359,-3375.9143 3377.1913,-3364.3865 3394.9899,-3353.5704 3420.0829,-3338.3216 3449.9901,-3325.2842 3475.3439,-3315.5423"/>
<polygon fill="#000000" stroke="#000000" points="3476.6948,-3318.7736 3484.8185,-3311.9723 3474.2266,-3312.2232 3476.6948,-3318.7736"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse/nss&#45;&gt;graph -->
<g id="node159" class="node node function">
<title>phone&#45;tree.parse/nss&#45;&gt;graph</title>
<g id="a_node159"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse.clj, line 49&#10;(defn nss&#45;&gt;graph&#10; &#160;&quot;Returns a call graph for a number of namespaces.&quot;&#10; &#160;[nss]&#10; &#160;(build/ubergraph (mapcat parse&#45;ns nss)))">
<ellipse fill="#ffffff" stroke="#000000" cx="737.0902" cy="-1965.5704" rx="110.7299" ry="18"/>
<text text-anchor="middle" x="737.0902" y="-1961.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse/nss&#45;&gt;graph</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/run&#45;&gt;phone&#45;tree.parse/nss&#45;&gt;graph -->
<g id="edge162" class="edge edge">
<title>phone&#45;tree.core/run&#45;&gt;phone&#45;tree.parse/nss&#45;&gt;graph</title>
<g id="a_edge162"><a xlink:title="phone&#45;tree.core/run &#45;&gt; phone&#45;tree.parse/nss&#45;&gt;graph">
<path fill="none" stroke="#000000" d="M387.6496,-461.7508C397.2433,-551.6381 442.9945,-957.2262 519.9953,-1281.5704 581.7125,-1541.5363 692.3819,-1845.969 726.6722,-1937.921"/>
<polygon fill="#000000" stroke="#000000" points="723.4184,-1939.2127 730.1999,-1947.3528 729.9748,-1936.7604 723.4184,-1939.2127"/>
</a>
</g>
</g>
<!-- phone&#45;tree.namespace/prepare&#45;namespaces -->
<g id="node177" class="node node function">
<title>phone&#45;tree.namespace/prepare&#45;namespaces</title>
<g id="a_node177"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/namespace.clj, line 8&#10;(defn prepare&#45;namespaces&#10; &#160;&quot;First, create all of our namespaces so that we don&#39;t have to worry about&#10; &#160;the order in which we load them. Then, load all of them.&quot;&#10; &#160;[namespaces]&#10; &#160;(doseq [n namespaces]&#10; &#160;&#160;&#160;(create&#45;ns n))&#10; &#160;(doseq [n namespaces]&#10; &#160;&#160;&#160;(require n #_:reload))&#10; &#160;namespaces)">
<ellipse fill="#ffffff" stroke="#000000" cx="737.0902" cy="-389.5704" rx="163.1164" ry="18"/>
<text text-anchor="middle" x="737.0902" y="-385.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.namespace/prepare&#45;namespaces</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/run&#45;&gt;phone&#45;tree.namespace/prepare&#45;namespaces -->
<g id="edge163" class="edge edge">
<title>phone&#45;tree.core/run&#45;&gt;phone&#45;tree.namespace/prepare&#45;namespaces</title>
<g id="a_edge163"><a xlink:title="phone&#45;tree.core/run &#45;&gt; phone&#45;tree.namespace/prepare&#45;namespaces">
<path fill="none" stroke="#000000" d="M443.0669,-431.0616C466.8009,-426.1378 494.6531,-420.6889 519.9953,-416.5704 549.5506,-411.7672 581.4913,-407.3617 611.5453,-403.5646"/>
<polygon fill="#000000" stroke="#000000" points="612.1704,-407.0138 621.659,-402.3004 611.3021,-400.0678 612.1704,-407.0138"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;type clojure.lang.Var&#45;&gt;phone&#45;tree.parse.build/node&#45;type -->
<g id="edge164" class="edge edge">
<title>phone&#45;tree.parse.build/node&#45;type clojure.lang.Var&#45;&gt;phone&#45;tree.parse.build/node&#45;type</title>
<g id="a_edge164"><a xlink:title="phone&#45;tree.parse.build/node&#45;type clojure.lang.Var &#45;&gt; phone&#45;tree.parse.build/node&#45;type">
<path fill="none" stroke="#000000" d="M3732.7664,-2205.3014C3708.1926,-2205.3643 3683.2748,-2205.271 3659.723,-2205.0215"/>
<polygon fill="#000000" stroke="#000000" points="3659.758,-2201.5218 3649.7179,-2204.9051 3659.6764,-2208.5213 3659.758,-2201.5218"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/filter&#45;nodes&#45;&gt;phone&#45;tree.graph/remove&#45;nodes -->
<g id="edge165" class="edge edge">
<title>phone&#45;tree.graph/filter&#45;nodes&#45;&gt;phone&#45;tree.graph/remove&#45;nodes</title>
<g id="a_edge165"><a xlink:title="phone&#45;tree.graph/filter&#45;nodes &#45;&gt; phone&#45;tree.graph/remove&#45;nodes">
<path fill="none" stroke="#000000" d="M1594.6661,-527.5704C1656.1393,-527.5704 1732.5714,-527.5704 1796.971,-527.5704"/>
<polygon fill="#000000" stroke="#000000" points="1797.1993,-531.0705 1807.1993,-527.5704 1797.1992,-524.0705 1797.1993,-531.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _reify -->
<g id="edge166" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _reify</title>
<g id="a_edge166"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse :reify">
<path fill="none" stroke="#000000" d="M1484.1692,-2879.6783C1493.6272,-2947.8754 1535.1767,-3188.8233 1682.5503,-3295.5704 1715.4286,-3319.3851 1757.4852,-3329.3729 1797.5801,-3332.9118"/>
<polygon fill="#000000" stroke="#000000" points="1797.4896,-3336.4148 1807.7246,-3333.677 1798.0163,-3329.4346 1797.4896,-3336.4148"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _instance&#45;call -->
<g id="edge167" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _instance&#45;call</title>
<g id="a_edge167"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse :instance&#45;call">
<path fill="none" stroke="#000000" d="M1494.3107,-2879.5771C1522.6819,-2918.6085 1596.0251,-3010.6969 1682.5503,-3050.5704 1709.3014,-3062.8981 1739.3442,-3070.5795 1769.0377,-3075.2137"/>
<polygon fill="#000000" stroke="#000000" points="1768.6904,-3078.6998 1779.0891,-3076.6708 1769.6947,-3071.7722 1768.6904,-3078.6998"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _static&#45;call -->
<g id="edge168" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _static&#45;call</title>
<g id="a_edge168"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse :static&#45;call">
<path fill="none" stroke="#000000" d="M1501.0229,-2879.3503C1534.8475,-2909.3695 1608.3695,-2969.4749 1682.5503,-2996.5704 1713.5896,-3007.9079 1748.1587,-3014.8843 1781.3912,-3019.0925"/>
<polygon fill="#000000" stroke="#000000" points="1781.3134,-3022.6078 1791.6564,-3020.3114 1782.1389,-3015.6566 1781.3134,-3022.6078"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol) -->
<g id="edge169" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol)</title>
<g id="a_edge169"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse (quote clojure.core/defprotocol)">
<path fill="none" stroke="#000000" d="M1428.1538,-2846.1449C1333.5788,-2817.2354 1133.533,-2748.3933 990.1851,-2645.5704 886.6441,-2571.3008 793.5648,-2448.8031 755.4123,-2395.1423"/>
<polygon fill="#000000" stroke="#000000" points="758.1818,-2392.9964 749.5588,-2386.8406 752.4609,-2397.0302 758.1818,-2392.9964"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _method -->
<g id="edge170" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _method</title>
<g id="a_edge170"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse :method">
<path fill="none" stroke="#000000" d="M1496.6307,-2843.7598C1528.6938,-2804.5192 1604.7621,-2706.6057 1646.5503,-2612.5704 1672.6406,-2553.86 1637.2307,-2518.1087 1682.5503,-2472.5704 1712.833,-2442.1416 1755.5062,-2425.4178 1796.9234,-2416.3902"/>
<polygon fill="#000000" stroke="#000000" points="1797.7548,-2419.7928 1806.8532,-2414.3643 1796.3554,-2412.9341 1797.7548,-2419.7928"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _quote -->
<g id="edge171" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _quote</title>
<g id="a_edge171"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse :quote">
<path fill="none" stroke="#000000" d="M1490.3782,-2879.637C1513.7601,-2926.3277 1583.3092,-3051.0797 1682.5503,-3104.5704 1717.5978,-3123.4609 1759.4586,-3132.2615 1798.7103,-3135.7843"/>
<polygon fill="#000000" stroke="#000000" points="1798.651,-3139.2904 1808.8952,-3136.5875 1799.2014,-3132.3121 1798.651,-3139.2904"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _var -->
<g id="edge172" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _var</title>
<g id="a_edge172"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse :var">
<path fill="none" stroke="#000000" d="M1561.8129,-2850.3354C1598.5705,-2845.2982 1642.7441,-2839.4142 1682.5503,-2834.5704 1728.3875,-2828.9927 1779.0627,-2823.3746 1822.5822,-2818.7185"/>
<polygon fill="#000000" stroke="#000000" points="1823.0437,-2822.1892 1832.6161,-2817.6484 1822.3013,-2815.2287 1823.0437,-2822.1892"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse&#45;dispatch -->
<g id="edge173" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse&#45;dispatch</title>
<g id="a_edge173"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse&#45;dispatch">
<path fill="none" stroke="#000000" d="M1495.9682,-2843.48C1527.0279,-2811.2588 1604.4237,-2746.1071 1682.5503,-2717.5704 1717.8518,-2704.6761 1757.7191,-2697.4228 1794.9931,-2693.8184"/>
<polygon fill="#000000" stroke="#000000" points="1795.7781,-2697.2628 1805.4316,-2692.8969 1795.1625,-2690.2899 1795.7781,-2697.2628"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _protocol&#45;invoke -->
<g id="edge174" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _protocol&#45;invoke</title>
<g id="a_edge174"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse :protocol&#45;invoke">
<path fill="none" stroke="#000000" d="M1579.4774,-2866.6911C1612.2204,-2870.6497 1648.942,-2875.4808 1682.5503,-2879.5704 1735.2849,-2885.9874 1794.4231,-2892.4579 1841.7012,-2898.4474"/>
<polygon fill="#000000" stroke="#000000" points="1841.5452,-2901.956 1851.9095,-2899.7579 1842.4366,-2895.013 1841.5452,-2901.956"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _the&#45;var -->
<g id="edge175" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _the&#45;var</title>
<g id="a_edge175"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse :the&#45;var">
<path fill="none" stroke="#000000" d="M1515.6049,-2844.55C1554.7624,-2825.6686 1621.6628,-2795.8563 1682.5503,-2780.5704 1719.4466,-2771.3075 1760.2215,-2765.2224 1797.8622,-2761.225"/>
<polygon fill="#000000" stroke="#000000" points="1798.2804,-2764.7006 1807.8731,-2760.2026 1797.5692,-2757.7368 1798.2804,-2764.7006"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse (quote clojure.core/in&#45;ns) -->
<g id="edge176" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse (quote clojure.core/in&#45;ns)</title>
<g id="a_edge176"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse (quote clojure.core/in&#45;ns)">
<path fill="none" stroke="#000000" d="M1493.9682,-2843.4933C1529.249,-2791.8864 1631.9662,-2645.8351 1682.5503,-2618.5704 1698.3016,-2610.0805 1715.4291,-2603.6286 1733.0774,-2598.7779"/>
<polygon fill="#000000" stroke="#000000" points="1734.1165,-2602.1246 1742.9301,-2596.245 1732.3736,-2595.3451 1734.1165,-2602.1246"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _def -->
<g id="edge177" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _def</title>
<g id="a_edge177"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse :def">
<path fill="none" stroke="#000000" d="M1493.3496,-2843.6713C1534.072,-2780.9449 1668.7743,-2574.3304 1682.5503,-2564.5704 1722.7887,-2536.0622 1774.6545,-2520.0554 1820.5301,-2511.0687"/>
<polygon fill="#000000" stroke="#000000" points="1821.3376,-2514.4785 1830.5249,-2509.2017 1820.0522,-2507.5975 1821.3376,-2514.4785"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _new -->
<g id="edge178" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _new</title>
<g id="a_edge178"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse :new">
<path fill="none" stroke="#000000" d="M1515.6049,-2878.5908C1554.7624,-2897.4722 1621.6628,-2927.2845 1682.5503,-2942.5704 1722.0222,-2952.4799 1765.9332,-2958.7524 1805.6968,-2962.7228"/>
<polygon fill="#000000" stroke="#000000" points="1805.4231,-2966.2125 1815.7116,-2963.6834 1806.0915,-2959.2445 1805.4231,-2966.2125"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.lang.MultiFn/addMethod) -->
<g id="node134" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse (quote clojure.lang.MultiFn/addMethod)</title>
<g id="a_node134"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/multimethod.clj, line 11&#10;(defmethod ast/parse &#39;clojure.lang.MultiFn/addMethod&#10; &#160;[{:keys [instance args] :as ast}]&#10; &#160;;; &#45; symbol is the multifn (an object that we&#39;re calling .addMethod on)&#10; &#160;;; &#45; dispatch is the first argument to .addMethod&#10; &#160;;; &#45; body is the second argument to .addMethod&#10; &#160;(let [[dispatch body] args&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;multimethod&#45;node {:symbol (:var instance) :dispatch (:form dispatch)}]&#10; &#160;&#160;&#160;(concat ;; the multimethod itself&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(build/node ast multimethod&#45;node body)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; edge from the main method&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(build/edge ast {:src (dissoc multimethod&#45;node :dispatch)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:dest multimethod&#45;node}))))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="1930.3771" cy="-2645.5704" rx="247.6537" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-2641.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse (quote clojure.lang.MultiFn/addMethod)</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse (quote clojure.lang.MultiFn/addMethod) -->
<g id="edge179" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse (quote clojure.lang.MultiFn/addMethod)</title>
<g id="a_edge179"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse (quote clojure.lang.MultiFn/addMethod)">
<path fill="none" stroke="#000000" d="M1494.3107,-2843.5637C1522.6819,-2804.5323 1596.0251,-2712.4439 1682.5503,-2672.5704 1694.2964,-2667.1574 1706.6771,-2662.6403 1719.3842,-2658.8836"/>
<polygon fill="#000000" stroke="#000000" points="1720.468,-2662.215 1729.1599,-2656.1568 1718.5872,-2655.4723 1720.468,-2662.215"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.core/defmacro) -->
<g id="node139" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse (quote clojure.core/defmacro)</title>
<g id="a_node139"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/macro.clj, line 15&#10;(defmethod ast/parse &#39;clojure.core/defmacro&#10; &#160;[ast]&#10; &#160;(binding [*in&#45;macro* true]&#10; &#160;&#160;&#160;(&#45;&gt;&gt; (ana.ast/nodes ast)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(filter (comp #{:def} :op))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(first)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(ast/parse)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(doall))))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="1930.3771" cy="-3223.5704" rx="209.9394" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-3219.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse (quote clojure.core/defmacro)</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse (quote clojure.core/defmacro) -->
<g id="edge180" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse (quote clojure.core/defmacro)</title>
<g id="a_edge180"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse (quote clojure.core/defmacro)">
<path fill="none" stroke="#000000" d="M1487.9426,-2879.835C1506.1272,-2936.2143 1565.5851,-3106.5583 1682.5503,-3182.5704 1702.7721,-3195.7119 1725.8977,-3204.655 1749.7125,-3210.6955"/>
<polygon fill="#000000" stroke="#000000" points="1749.0524,-3214.1358 1759.5894,-3213.0303 1750.6628,-3207.3236 1749.0524,-3214.1358"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.core/extend) -->
<g id="node161" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse (quote clojure.core/extend)</title>
<g id="a_node161"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/protocol.clj, line 127&#10;(defmethod ast/parse &#39;clojure.core/extend&#10; &#160;[{[the&#45;cls &amp; proto+maps] :args :as ast}]&#10; &#160;;; extend takes multiple protocols and function maps:&#10; &#160;;;&#10; &#160;;; &#160;&#160;(extend AType&#10; &#160;;; &#160;&#160;&#160;&#160;AProtocol&#10; &#160;;; &#160;&#160;&#160;&#160;{:some&#45;fn (fn [] ...)&#10; &#160;;; &#160;&#160;&#160;&#160;&#160;...}&#10; &#160;;; &#160;&#160;&#160;&#160;BProtocol&#10; &#160;;; &#160;&#160;&#160;&#160;{...})&#10; &#160;;;&#10; &#160;(when&#45;let [class&#45;sym (some&#45;&gt; the&#45;cls :val (.getName) symbol)]&#10; &#160;&#160;&#160;(flatten&#10; &#160;&#160;&#160;&#160;;; 1. Outer loop &#45;&#45; each protocol and function map&#10; &#160;&#160;&#160;&#160;(for [[protocol&#45;var method&#45;map] (partition&#45;all 2 proto+maps)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:let [protocol (util/var&#45;&gt;symbol (:var protocol&#45;var))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;protocol&#45;ns (some&#45;&gt; protocol namespace)]]&#10; &#160;&#160;&#160;&#160;&#160;&#160;(cond&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(not protocol&#45;ns)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(log/warnf &quot;Unable to parse extend without protocol: %s&quot;&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(:form ast))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(not= :map (:op method&#45;map))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(log/warnf &quot;Unable to parse extend with %s method&#45;map: %s&quot;&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(:op method&#45;map) (:form ast))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:else&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; 2. Inner loop &#45;&#45; each k/v pair in the function map&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(for [[fn&#45;kw body] (map vector (:keys method&#45;map) (:vals method&#45;map))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; For each function:&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; &#45; ns is the protocol&#39;s namespace&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; &#45; name is the key in the function map&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; &#45; the class (to dispatch on) is the type that is being extended&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; &#45; body is the value in the function map&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:let [protocol&#45;fn (some&#45;&gt;&gt; fn&#45;kw :val name (symbol protocol&#45;ns))]]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(if&#45;not protocol&#45;fn&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(log/warnf &quot;Unable to find protocol function in extend for %s&quot;&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(:form fn&#45;kw))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; Unlike :method, extend doesn&#39;t add _methods_ to a type, it just&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; adds _dispatches_ from the protocol. These extend functions&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; exist at (get&#45;in MyProtocol [:impls some&#45;class :fn&#45;kw])&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(concat ;; the method, which dispatches on class&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(build/node ast&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{:symbol protocol&#45;fn, :dispatch class&#45;sym}&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;body)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; call the dispatch from the protocol&#45;fn fn&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(build/edge ast {:src {:symbol protocol&#45;fn}&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:dest {:symbol protocol&#45;fn&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:dispatch class&#45;sym}})))))))))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="1930.3771" cy="-2353.5704" rx="199.8091" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-2349.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse (quote clojure.core/extend)</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse (quote clojure.core/extend) -->
<g id="edge181" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse (quote clojure.core/extend)</title>
<g id="a_edge181"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse (quote clojure.core/extend)">
<path fill="none" stroke="#000000" d="M1497.5872,-2843.7585C1531.1758,-2804.898 1609.4995,-2708.2932 1646.5503,-2612.5704 1684.2156,-2515.2604 1607.1105,-2452.6588 1682.5503,-2380.5704 1718.19,-2346.514 1771.1737,-2337.4174 1819.0133,-2337.812"/>
<polygon fill="#000000" stroke="#000000" points="1819.061,-2341.3138 1829.1356,-2338.0347 1819.215,-2334.3155 1819.061,-2341.3138"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _default -->
<g id="node164" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse _default</title>
<g id="a_node164"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/ast.clj, line 86&#10;(defmethod parse :default&#10; &#160;[ast]&#10; &#160;(parse&#45;children (ana.ast/children ast)))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="1930.3771" cy="-3277.5704" rx="131.3123" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-3273.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse :default</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _default -->
<g id="edge182" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _default</title>
<g id="a_edge182"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse :default">
<path fill="none" stroke="#000000" d="M1484.924,-2879.8466C1497.0653,-2943.6228 1546.8762,-3157.4726 1682.5503,-3250.5704 1719.6308,-3276.0145 1767.4379,-3285.2519 1811.1555,-3287.2471"/>
<polygon fill="#000000" stroke="#000000" points="1811.1788,-3290.7497 1821.2901,-3287.5857 1811.4126,-3283.7536 1811.1788,-3290.7497"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _host&#45;interop -->
<g id="node171" class="node node multimethod">
<title>phone&#45;tree.parse.ast/parse _host&#45;interop</title>
<g id="a_node171"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/interop.clj, line 26&#10;(defmethod ast/parse :host&#45;interop&#10; &#160;[{:keys [m&#45;or&#45;f target] :as ast}]&#10; &#160;(let [;; By definition, this op&#45;code means we have no type information, but&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;;; give it a guess anyways&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;cls (or (guess&#45;class target)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(guess&#45;class ast)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;java.lang.Object)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;method&#45;sym (symbol (.getName cls) (str m&#45;or&#45;f))]&#10; &#160;&#160;&#160;;; By definition, this is a 0&#45;arg function or a field, so there are no&#10; &#160;&#160;&#160;;; other child args to parse&#10; &#160;&#160;&#160;(build/edge ast {:dest method&#45;sym})))">
<ellipse fill="#e6e6fa" stroke="#000000" cx="1930.3771" cy="-2861.5704" rx="149.1794" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-2857.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.ast/parse :host&#45;interop</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _host&#45;interop -->
<g id="edge183" class="edge edge">
<title>phone&#45;tree.parse.ast/parse&#45;&gt;phone&#45;tree.parse.ast/parse _host&#45;interop</title>
<g id="a_edge183"><a xlink:title="phone&#45;tree.parse.ast/parse &#45;&gt; phone&#45;tree.parse.ast/parse :host&#45;interop">
<path fill="none" stroke="#000000" d="M1583.8292,-2861.5704C1638.939,-2861.5704 1708.2193,-2861.5704 1770.3225,-2861.5704"/>
<polygon fill="#000000" stroke="#000000" points="1770.624,-2865.0705 1780.624,-2861.5704 1770.624,-2858.0705 1770.624,-2865.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.log/trace -->
<g id="node131" class="node node function">
<title>phone&#45;tree.log/trace</title>
<g id="a_node131"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/log.clj, line 21&#10;(def trace (partial log :trace))">
<ellipse fill="#ffffff" stroke="#000000" cx="3530.8009" cy="-3758.5704" rx="81.1237" ry="18"/>
<text text-anchor="middle" x="3530.8009" y="-3754.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.log/trace</text>
</a>
</g>
</g>
<!-- phone&#45;tree.log/trace&#45;&gt;phone&#45;tree.log/log -->
<g id="edge184" class="edge edge">
<title>phone&#45;tree.log/trace&#45;&gt;phone&#45;tree.log/log</title>
<g id="a_edge184"><a xlink:title="phone&#45;tree.log/trace &#45;&gt; phone&#45;tree.log/log">
<path fill="none" stroke="#000000" d="M3592.813,-3746.977C3616.0242,-3742.4446 3642.5833,-3737.0288 3666.6119,-3731.5704 3727.6761,-3717.6989 3796.9674,-3699.7148 3845.0468,-3686.8748"/>
<polygon fill="#000000" stroke="#000000" points="3846.2197,-3690.1841 3854.9739,-3684.2163 3844.4088,-3683.4224 3846.2197,-3690.1841"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;json&#45;&gt;loom.graph/nodes -->
<g id="edge185" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;json&#45;&gt;loom.graph/nodes</title>
<g id="a_edge185"><a xlink:title="phone&#45;tree.graph/&#45;&gt;json &#45;&gt; loom.graph/nodes">
<path fill="none" stroke="#000000" d="M1155.8989,-1209.9113C1187.7639,-1183.3787 1252.5072,-1133.9583 1316.9449,-1111.5704 1386.4795,-1087.4117 1591.2314,-1127.1349 1646.5503,-1078.5704 1699.3727,-1032.1976 1628.0635,-968.9757 1682.5503,-924.5704 1778.8347,-846.1013 2160.0589,-878.2477 2324.4753,-896.374"/>
<polygon fill="#000000" stroke="#000000" points="2324.1866,-899.8634 2334.5129,-897.493 2324.9622,-892.9065 2324.1866,-899.8634"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;json&#45;&gt;loom.graph/src -->
<g id="edge186" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;json&#45;&gt;loom.graph/src</title>
<g id="a_edge186"><a xlink:title="phone&#45;tree.graph/&#45;&gt;json &#45;&gt; loom.graph/src">
<path fill="none" stroke="#000000" d="M1231.2221,-1227.2548C1453.3526,-1227.1515 1998.805,-1230.6906 2178.2039,-1266.5704 2243.9028,-1279.7102 2315.8487,-1309.6336 2359.6123,-1329.7249"/>
<polygon fill="#000000" stroke="#000000" points="2358.2328,-1332.9432 2368.777,-1333.9782 2361.1797,-1326.5937 2358.2328,-1332.9432"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;json&#45;&gt;loom.graph/edges -->
<g id="edge187" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;json&#45;&gt;loom.graph/edges</title>
<g id="a_edge187"><a xlink:title="phone&#45;tree.graph/&#45;&gt;json &#45;&gt; loom.graph/edges">
<path fill="none" stroke="#000000" d="M1169.7862,-1210.7508C1205.607,-1193.8784 1263.914,-1168.4611 1316.9449,-1154.5704 1388.4006,-1135.8536 1590.9243,-1160.1706 1646.5503,-1111.5704 1692.6666,-1071.2788 1636.0094,-1018.3707 1682.5503,-978.5704 1731.3209,-936.8634 1806.732,-934.4112 1861.5637,-939.7331"/>
<polygon fill="#000000" stroke="#000000" points="1861.2339,-943.2178 1871.5514,-940.8096 1861.984,-936.2581 1861.2339,-943.2178"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/with&#45;dot&#45;attrs -->
<g id="node135" class="node node function">
<title>phone&#45;tree.graph/with&#45;dot&#45;attrs</title>
<g id="a_node135"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 148&#10;(defn with&#45;dot&#45;attrs&#10; &#160;&quot;Returns an ubergraph with attrs suitable for dot output.&quot;&#10; &#160;[g]&#10; &#160;(let [nodes (for [n (uber/nodes g)]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[(sanitize&#45;id n)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(assoc (node&#45;attrs n (uber/attrs g n)) :label n)])&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;edges (for [e (uber/edges g)]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[(sanitize&#45;id (uber/src e))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(sanitize&#45;id (uber/dest e))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(edge&#45;attrs e (uber/attrs g e))])]&#10; &#160;&#160;&#160;(apply uber/digraph (concat nodes edges))))">
<ellipse fill="#ffffff" stroke="#000000" cx="1481.7476" cy="-1327.5704" rx="120.715" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-1323.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/with&#45;dot&#45;attrs</text>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;json&#45;&gt;phone&#45;tree.graph/with&#45;dot&#45;attrs -->
<g id="edge188" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;json&#45;&gt;phone&#45;tree.graph/with&#45;dot&#45;attrs</title>
<g id="a_edge188"><a xlink:title="phone&#45;tree.graph/&#45;&gt;json &#45;&gt; phone&#45;tree.graph/with&#45;dot&#45;attrs">
<path fill="none" stroke="#000000" d="M1225.3721,-1233.8385C1244.6733,-1237.963 1264.2632,-1244.4529 1280.9449,-1254.5704 1303.1424,-1268.0333 1294.6058,-1287.344 1316.9449,-1300.5704 1330.0427,-1308.3252 1344.6994,-1314.0349 1359.7249,-1318.2121"/>
<polygon fill="#000000" stroke="#000000" points="1359.0844,-1321.6608 1369.6393,-1320.7419 1360.8152,-1314.8781 1359.0844,-1321.6608"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;json&#45;&gt;loom.graph/dest -->
<g id="edge189" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;json&#45;&gt;loom.graph/dest</title>
<g id="a_edge189"><a xlink:title="phone&#45;tree.graph/&#45;&gt;json &#45;&gt; loom.graph/dest">
<path fill="none" stroke="#000000" d="M1231.1397,-1228.7562C1249.6814,-1233.2312 1267.5007,-1241.1493 1280.9449,-1254.5704 1342.389,-1315.9089 1253.4262,-1387.3829 1316.9449,-1446.5704 1370.8871,-1496.8344 1578.7772,-1455.5353 1646.5503,-1484.5704 1665.6947,-1492.7722 1662.967,-1507.4802 1682.5503,-1514.5704 1889.6832,-1589.5628 1960.6774,-1549.3573 2178.2039,-1514.5704 2241.7587,-1504.4067 2311.7991,-1478.8782 2355.9747,-1460.8864"/>
<polygon fill="#000000" stroke="#000000" points="2357.3561,-1464.1028 2365.2684,-1457.0568 2354.6891,-1457.6307 2357.3561,-1464.1028"/>
</a>
</g>
</g>
<!-- clojure.data.json/write&#45;str -->
<g id="node167" class="node node">
<title>clojure.data.json/write&#45;str</title>
<ellipse fill="#c0c0c0" stroke="#000000" stroke-dasharray="5,2" cx="1481.7476" cy="-1181.5704" rx="100.9365" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-1177.3704" font-family="Times,serif" font-size="14.00" fill="#000000">clojure.data.json/write&#45;str</text>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;json&#45;&gt;clojure.data.json/write&#45;str -->
<g id="edge190" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;json&#45;&gt;clojure.data.json/write&#45;str</title>
<g id="a_edge190"><a xlink:title="phone&#45;tree.graph/&#45;&gt;json &#45;&gt; clojure.data.json/write&#45;str">
<path fill="none" stroke="#000000" d="M1213.6868,-1217.1897C1266.1588,-1210.2174 1335.4952,-1201.0041 1390.5042,-1193.6946"/>
<polygon fill="#000000" stroke="#000000" points="1391.1497,-1197.1397 1400.6015,-1192.3529 1390.2276,-1190.2007 1391.1497,-1197.1397"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;json&#45;&gt;loom.attr/attrs -->
<g id="edge191" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;json&#45;&gt;loom.attr/attrs</title>
<g id="a_edge191"><a xlink:title="phone&#45;tree.graph/&#45;&gt;json &#45;&gt; loom.attr/attrs">
<path fill="none" stroke="#000000" d="M1231.2569,-1227.3124C1250.1349,-1231.8007 1268.0633,-1240.0888 1280.9449,-1254.5704 1360.5822,-1344.0994 1230.7122,-1709.3751 1316.9449,-1792.5704 1355.2907,-1829.5655 1708.2301,-1820.3474 1860.7284,-1814.5481"/>
<polygon fill="#000000" stroke="#000000" points="1861.0592,-1818.0381 1870.9165,-1814.1544 1860.7888,-1811.0433 1861.0592,-1818.0381"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.lang.MultiFn/addMethod)&#45;&gt;phone&#45;tree.parse.build/edge -->
<g id="edge192" class="edge edge">
<title>phone&#45;tree.parse.ast/parse (quote clojure.lang.MultiFn/addMethod)&#45;&gt;phone&#45;tree.parse.build/edge</title>
<g id="a_edge192"><a xlink:title="phone&#45;tree.parse.ast/parse (quote clojure.lang.MultiFn/addMethod) &#45;&gt; phone&#45;tree.parse.build/edge">
<path fill="none" stroke="#000000" d="M2099.5412,-2658.7653C2126.0362,-2662.3343 2152.9839,-2666.8534 2178.2039,-2672.5704 2239.5459,-2686.4756 2307.4102,-2711.8056 2351.846,-2729.8261"/>
<polygon fill="#000000" stroke="#000000" points="2350.6565,-2733.121 2361.2373,-2733.6674 2353.3067,-2726.642 2350.6565,-2733.121"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.lang.MultiFn/addMethod)&#45;&gt;phone&#45;tree.parse.build/node -->
<g id="edge193" class="edge edge">
<title>phone&#45;tree.parse.ast/parse (quote clojure.lang.MultiFn/addMethod)&#45;&gt;phone&#45;tree.parse.build/node</title>
<g id="a_edge193"><a xlink:title="phone&#45;tree.parse.ast/parse (quote clojure.lang.MultiFn/addMethod) &#45;&gt; phone&#45;tree.parse.build/node">
<path fill="none" stroke="#000000" d="M1718.1438,-2636.1959C1705.6538,-2631.4922 1693.6677,-2625.6876 1682.5503,-2618.5704 1656.3593,-2601.8031 1672.4857,-2575.7305 1646.5503,-2558.5704 1523.196,-2476.9531 1452.8995,-2570.8286 1316.9449,-2512.5704 1252.2807,-2484.861 1191.2784,-2427.7594 1159.1404,-2394.3885"/>
<polygon fill="#000000" stroke="#000000" points="1161.4042,-2391.6896 1151.9805,-2386.8475 1156.3278,-2396.5094 1161.4042,-2391.6896"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;loom.graph/nodes -->
<g id="edge194" class="edge edge">
<title>phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;loom.graph/nodes</title>
<g id="a_edge194"><a xlink:title="phone&#45;tree.graph/with&#45;dot&#45;attrs &#45;&gt; loom.graph/nodes">
<path fill="none" stroke="#000000" d="M1602.4604,-1325.8689C1618.9566,-1320.79 1634.3749,-1312.7913 1646.5503,-1300.5704 1718.0266,-1228.8268 1608.4052,-1144.5523 1682.5503,-1075.5704 1763.4949,-1000.2626 2078.9397,-1081.2519 2178.2039,-1032.5704 2199.3831,-1022.1836 2195.1882,-1007.5292 2214.2039,-993.5704 2255.5584,-963.2133 2309.0473,-939.2606 2348.1137,-924.0587"/>
<polygon fill="#000000" stroke="#000000" points="2349.6298,-927.2261 2357.7189,-920.3837 2347.1284,-920.6883 2349.6298,-927.2261"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;phone&#45;tree.graph/sanitize&#45;id -->
<g id="edge195" class="edge edge">
<title>phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;phone&#45;tree.graph/sanitize&#45;id</title>
<g id="a_edge195"><a xlink:title="phone&#45;tree.graph/with&#45;dot&#45;attrs &#45;&gt; phone&#45;tree.graph/sanitize&#45;id">
<path fill="none" stroke="#000000" d="M1601.4433,-1324.8055C1618.0732,-1319.8664 1633.7995,-1312.1897 1646.5503,-1300.5704 1693.4015,-1257.8768 1634.5663,-1203.9867 1682.5503,-1162.5704 1725.7061,-1125.3214 1790.0613,-1119.2557 1842.3757,-1122.1452"/>
<polygon fill="#000000" stroke="#000000" points="1842.4563,-1125.6584 1852.6682,-1122.8359 1842.925,-1118.6741 1842.4563,-1125.6584"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;loom.graph/src -->
<g id="edge196" class="edge edge">
<title>phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;loom.graph/src</title>
<g id="a_edge196"><a xlink:title="phone&#45;tree.graph/with&#45;dot&#45;attrs &#45;&gt; loom.graph/src">
<path fill="none" stroke="#000000" d="M1601.4009,-1330.4352C1794.4874,-1335.0582 2169.1078,-1344.0277 2327.2943,-1347.8151"/>
<polygon fill="#000000" stroke="#000000" points="2327.3156,-1351.3165 2337.3966,-1348.057 2327.4832,-1344.3185 2327.3156,-1351.3165"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;phone&#45;tree.graph/edge&#45;attrs -->
<g id="edge197" class="edge edge">
<title>phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;phone&#45;tree.graph/edge&#45;attrs</title>
<g id="a_edge197"><a xlink:title="phone&#45;tree.graph/with&#45;dot&#45;attrs &#45;&gt; phone&#45;tree.graph/edge&#45;attrs">
<path fill="none" stroke="#000000" d="M1555.9845,-1341.7749C1593.7983,-1348.7824 1640.5453,-1357.0971 1682.5503,-1363.5704 1731.68,-1371.1416 1786.479,-1378.346 1832.0297,-1383.9952"/>
<polygon fill="#000000" stroke="#000000" points="1831.8462,-1387.499 1842.1995,-1385.2498 1832.7033,-1380.5517 1831.8462,-1387.499"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;loom.graph/edges -->
<g id="edge198" class="edge edge">
<title>phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;loom.graph/edges</title>
<g id="a_edge198"><a xlink:title="phone&#45;tree.graph/with&#45;dot&#45;attrs &#45;&gt; loom.graph/edges">
<path fill="none" stroke="#000000" d="M1602.563,-1326.501C1619.1489,-1321.3636 1634.5676,-1313.181 1646.5503,-1300.5704 1745.7436,-1196.1794 1580.5815,-1080.252 1682.5503,-978.5704 1729.289,-931.9633 1808.2935,-931.3048 1864.5326,-938.3894"/>
<polygon fill="#000000" stroke="#000000" points="1864.3727,-941.9002 1874.7558,-939.793 1865.3249,-934.9652 1864.3727,-941.9002"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;ubergraph.core/digraph -->
<g id="edge199" class="edge edge">
<title>phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;ubergraph.core/digraph</title>
<g id="a_edge199"><a xlink:title="phone&#45;tree.graph/with&#45;dot&#45;attrs &#45;&gt; ubergraph.core/digraph">
<path fill="none" stroke="#000000" d="M1595.4879,-1333.8809C1614.0658,-1339.1305 1631.9725,-1347.2441 1646.5503,-1359.5704 1681.3467,-1388.9925 1646.8393,-1427.2655 1682.5503,-1455.5704 1726.7748,-1490.6232 1790.0416,-1498.3159 1841.5812,-1497.4029"/>
<polygon fill="#000000" stroke="#000000" points="1841.8285,-1500.8973 1851.7237,-1497.1111 1841.6271,-1493.9002 1841.8285,-1500.8973"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;loom.graph/dest -->
<g id="edge200" class="edge edge">
<title>phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;loom.graph/dest</title>
<g id="a_edge200"><a xlink:title="phone&#45;tree.graph/with&#45;dot&#45;attrs &#45;&gt; loom.graph/dest">
<path fill="none" stroke="#000000" d="M1591.3483,-1335.2095C1610.9777,-1340.2457 1630.3212,-1347.9421 1646.5503,-1359.5704 1672.7649,-1378.3533 1654.8744,-1406.0162 1682.5503,-1422.5704 1736.3935,-1454.7763 2149.3075,-1448.0892 2323.4899,-1443.7549"/>
<polygon fill="#000000" stroke="#000000" points="2323.702,-1447.2508 2333.6103,-1443.4991 2323.525,-1440.253 2323.702,-1447.2508"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/node&#45;attrs -->
<g id="node144" class="node node function">
<title>phone&#45;tree.graph/node&#45;attrs</title>
<g id="a_node144"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/graph.clj, line 129&#10;(defn node&#45;attrs [_ {:keys [external? type] :as attrs}]&#10; &#160;(let [tt (tooltip attrs)]&#10; &#160;&#160;&#160;(cond&#45;&gt; {:class &quot;node&quot;&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:style &quot;filled&quot;&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:fillcolor &quot;white&quot;}&#10; &#160;&#160;&#160;&#160;&#160;external? (update :style str &quot;,dashed&quot;)&#10; &#160;&#160;&#160;&#160;&#160;tt (assoc :tooltip (str/replace (uber/escape&#45;label tt) &quot;\n&quot; &quot;\n&quot;))&#10; &#160;&#160;&#160;&#160;&#160;;; playing around&#10; &#160;&#160;&#160;&#160;&#160;type (update :class str &quot; &quot; (name type))&#10; &#160;&#160;&#160;&#160;&#160;(= :multimethod type) (assoc :fillcolor &quot;lavender&quot;)&#10; &#160;&#160;&#160;&#160;&#160;(= :protocol&#45;fn type) (assoc :fillcolor &quot;lavender&quot;)&#10; &#160;&#160;&#160;&#160;&#160;(= :channel type) (assoc :fillcolor &quot;black&quot;)&#10; &#160;&#160;&#160;&#160;&#160;(= :function type) (assoc :fillcolor &quot;white&quot;)&#10; &#160;&#160;&#160;&#160;&#160;(= :namespace type) (assoc :fillcolor &quot;lightpink&quot;)&#10; &#160;&#160;&#160;&#160;&#160;(= :macro type) (assoc :fillcolor &quot;palegreen&quot;)&#10; &#160;&#160;&#160;&#160;&#160;(= :class type) (assoc :fillcolor &quot;lightcyan&quot;)&#10; &#160;&#160;&#160;&#160;&#160;(= :method type) (assoc :fillcolor &quot;lightcyan&quot;)&#10; &#160;&#160;&#160;&#160;&#160;(not type) (assoc :fillcolor &quot;gray&quot;))))">
<ellipse fill="#ffffff" stroke="#000000" cx="1930.3771" cy="-1189.5704" rx="108.1604" ry="18"/>
<text text-anchor="middle" x="1930.3771" y="-1185.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.graph/node&#45;attrs</text>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;phone&#45;tree.graph/node&#45;attrs -->
<g id="edge201" class="edge edge">
<title>phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;phone&#45;tree.graph/node&#45;attrs</title>
<g id="a_edge201"><a xlink:title="phone&#45;tree.graph/with&#45;dot&#45;attrs &#45;&gt; phone&#45;tree.graph/node&#45;attrs">
<path fill="none" stroke="#000000" d="M1574.4481,-1315.8903C1598.1668,-1311.9472 1623.4824,-1306.8949 1646.5503,-1300.5704 1733.1342,-1276.8318 1829.6341,-1235.7957 1884.8651,-1210.8219"/>
<polygon fill="#000000" stroke="#000000" points="1886.3726,-1213.9813 1894.0264,-1206.6553 1883.4746,-1207.6094 1886.3726,-1213.9813"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;loom.attr/attrs -->
<g id="edge202" class="edge edge">
<title>phone&#45;tree.graph/with&#45;dot&#45;attrs&#45;&gt;loom.attr/attrs</title>
<g id="a_edge202"><a xlink:title="phone&#45;tree.graph/with&#45;dot&#45;attrs &#45;&gt; loom.attr/attrs">
<path fill="none" stroke="#000000" d="M1562.5436,-1341.1171C1593.4703,-1350.4375 1626.1775,-1366.14 1646.5503,-1392.5704 1729.3421,-1499.9791 1603.1329,-1585.6432 1682.5503,-1695.5704 1726.4688,-1756.361 1810.4646,-1786.2888 1868.4076,-1800.3006"/>
<polygon fill="#000000" stroke="#000000" points="1867.6565,-1803.7192 1878.1894,-1802.5754 1869.2422,-1796.9012 1867.6565,-1803.7192"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/conform&#45;node -->
<g id="node136" class="node node function">
<title>phone&#45;tree.parse.build/conform&#45;node</title>
<g id="a_node136"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 46&#10;(defn conform&#45;node [x]&#10; &#160;(cond&#10; &#160;&#160;&#160;(not (map? x)) (recur {:symbol x})&#10; &#160;&#160;&#160;(var? (:symbol x)) (&#45;&gt; x&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(update :symbol util/var&#45;&gt;symbol)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(assoc :type (node&#45;type (:symbol x))))&#10; &#160;&#160;&#160;(symbol? (:symbol x)) (assoc x :type (node&#45;type (:symbol x)))&#10; &#160;&#160;&#160;(not (symbol? (:symbol x))) (throw (ex&#45;info &quot;Node must be a symbol or var&quot; x))&#10; &#160;&#160;&#160;:else x))">
<ellipse fill="#ffffff" stroke="#000000" cx="3194.917" cy="-2198.5704" rx="141.9539" ry="18"/>
<text text-anchor="middle" x="3194.917" y="-2194.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/conform&#45;node</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/conform&#45;node&#45;&gt;phone&#45;tree.parse.build/node&#45;type -->
<g id="edge203" class="edge edge">
<title>phone&#45;tree.parse.build/conform&#45;node&#45;&gt;phone&#45;tree.parse.build/node&#45;type</title>
<g id="a_edge203"><a xlink:title="phone&#45;tree.parse.build/conform&#45;node &#45;&gt; phone&#45;tree.parse.build/node&#45;type">
<path fill="none" stroke="#000000" d="M3336.8751,-2198.5704C3355.6943,-2198.5704 3374.9596,-2198.5704 3393.6947,-2198.5704"/>
<polygon fill="#000000" stroke="#000000" points="3393.7391,-2202.0705 3403.739,-2198.5704 3393.739,-2195.0705 3393.7391,-2202.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/conform&#45;node&#45;&gt;phone&#45;tree.util/var&#45;&gt;symbol -->
<g id="edge204" class="edge edge">
<title>phone&#45;tree.parse.build/conform&#45;node&#45;&gt;phone&#45;tree.util/var&#45;&gt;symbol</title>
<g id="a_edge204"><a xlink:title="phone&#45;tree.parse.build/conform&#45;node &#45;&gt; phone&#45;tree.util/var&#45;&gt;symbol">
<path fill="none" stroke="#000000" d="M3230.5444,-2216.0721C3292.4649,-2246.4899 3419.738,-2309.0117 3486.9672,-2342.0375"/>
<polygon fill="#000000" stroke="#000000" points="3485.5233,-2345.2276 3496.042,-2346.4954 3488.6097,-2338.9448 3485.5233,-2345.2276"/>
</a>
</g>
</g>
<!-- phone&#45;tree.log/tracef&#45;&gt;phone&#45;tree.log/logf -->
<g id="edge205" class="edge edge">
<title>phone&#45;tree.log/tracef&#45;&gt;phone&#45;tree.log/logf</title>
<g id="a_edge205"><a xlink:title="phone&#45;tree.log/tracef &#45;&gt; phone&#45;tree.log/logf">
<path fill="none" stroke="#000000" d="M3270.335,-2616.6324C3298.8775,-2621.3829 3331.1719,-2628.8598 3358.9899,-2640.5704 3580.2584,-2733.7177 3803.1328,-2925.057 3878.3555,-2992.9825"/>
<polygon fill="#000000" stroke="#000000" points="3876.2258,-2995.7762 3885.9829,-2999.9053 3880.9304,-2990.5928 3876.2258,-2995.7762"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.core/defmacro)&#45;&gt;phone&#45;tree.parse.ast/parse -->
<g id="edge206" class="edge edge">
<title>phone&#45;tree.parse.ast/parse (quote clojure.core/defmacro)&#45;&gt;phone&#45;tree.parse.ast/parse</title>
<g id="a_edge206"><a xlink:title="phone&#45;tree.parse.ast/parse (quote clojure.core/defmacro) &#45;&gt; phone&#45;tree.parse.ast/parse">
<path fill="none" stroke="#000000" d="M1723.3355,-3220.5646C1708.9664,-3215.3594 1695.191,-3208.7852 1682.5503,-3200.5704 1566.4539,-3125.1228 1507.0136,-2956.7395 1488.3546,-2889.6688"/>
<polygon fill="#000000" stroke="#000000" points="1491.6797,-2888.5553 1485.7077,-2879.804 1484.9188,-2890.3694 1491.6797,-2888.5553"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.core/defmacro)&#45;&gt;clojure.tools.analyzer.ast/nodes -->
<g id="edge207" class="edge edge">
<title>phone&#45;tree.parse.ast/parse (quote clojure.core/defmacro)&#45;&gt;clojure.tools.analyzer.ast/nodes</title>
<g id="a_edge207"><a xlink:title="phone&#45;tree.parse.ast/parse (quote clojure.core/defmacro) &#45;&gt; clojure.tools.analyzer.ast/nodes">
<path fill="none" stroke="#000000" d="M2086.9364,-3211.5006C2121.3429,-3201.6379 2154.5283,-3185.2848 2178.2039,-3158.5704 2256.4545,-3070.2762 2129.17,-2977.3521 2214.2039,-2895.5704 2339.8285,-2774.7504 2824.8816,-2858.1941 2994.844,-2819.5704 3048.585,-2807.3578 3107.5698,-2784.6199 3147.4745,-2767.753"/>
<polygon fill="#000000" stroke="#000000" points="3148.8687,-2770.9634 3156.6914,-2763.818 3146.1202,-2764.5256 3148.8687,-2770.9634"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.core/defmacro)&#45;&gt;phone&#45;tree.parse.macro/*in&#45;macro* -->
<g id="edge208" class="edge edge">
<title>phone&#45;tree.parse.ast/parse (quote clojure.core/defmacro)&#45;&gt;phone&#45;tree.parse.macro/*in&#45;macro*</title>
<g id="a_edge208"><a xlink:title="phone&#45;tree.parse.ast/parse (quote clojure.core/defmacro) &#45;&gt; phone&#45;tree.parse.macro/*in&#45;macro*">
<path fill="none" stroke="#000000" d="M2102.8028,-3213.3032C2156.6184,-3210.0987 2215.161,-3206.6128 2265.9859,-3203.5864"/>
<polygon fill="#000000" stroke="#000000" points="2266.2701,-3207.0758 2276.0443,-3202.9875 2265.8539,-3200.0881 2266.2701,-3207.0758"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/reify&#45;class&#45;&gt;phone&#45;tree.parse.class/reify&#45;prefix -->
<g id="edge210" class="edge edge">
<title>phone&#45;tree.parse.class/reify&#45;class&#45;&gt;phone&#45;tree.parse.class/reify&#45;prefix</title>
<g id="a_edge210"><a xlink:title="phone&#45;tree.parse.class/reify&#45;class &#45;&gt; phone&#45;tree.parse.class/reify&#45;prefix">
<path fill="none" stroke="#000000" d="M3614.3155,-3394.1841C3672.4692,-3403.6637 3750.1183,-3416.3212 3810.535,-3426.1697"/>
<polygon fill="#000000" stroke="#000000" points="3810.0258,-3429.6328 3820.4586,-3427.7873 3811.152,-3422.724 3810.0258,-3429.6328"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.class/reify&#45;class&#45;&gt;phone&#45;tree.parse.class/reify&#45;templates -->
<g id="edge209" class="edge edge">
<title>phone&#45;tree.parse.class/reify&#45;class&#45;&gt;phone&#45;tree.parse.class/reify&#45;templates</title>
<g id="a_edge209"><a xlink:title="phone&#45;tree.parse.class/reify&#45;class &#45;&gt; phone&#45;tree.parse.class/reify&#45;templates">
<path fill="none" stroke="#000000" d="M3633.7001,-3391.2553C3645.4296,-3395.2436 3656.7098,-3400.5468 3666.6119,-3407.5704 3692.2889,-3425.7832 3679.8786,-3446.7941 3702.6119,-3468.5704 3744.2792,-3508.4837 3803.6046,-3537.8093 3847.259,-3555.7485"/>
<polygon fill="#000000" stroke="#000000" points="3846.0188,-3559.0221 3856.6022,-3559.5131 3848.6349,-3552.5293 3846.0188,-3559.0221"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse -->
<g id="node141" class="node node namespace">
<title>phone&#45;tree.parse</title>
<g id="a_node141"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse.clj, line 1&#10;(ns phone&#45;tree.parse&#10; &#160;&quot;Functions for generating call graphs from namespaces.&#10;&#10; &#160;A call graph is represented as an `ubergraph` digraph.&#10;&#10; &#160;Each defined var, class, protocol, etc. is a node in the graph. Each&#10; &#160;reference from one var to another (e.g. a function call, but any use is&#10; &#160;counted) is an edge in the graph.&#10;&#10; &#160;Node ids are formed by concatenating the symbol with the dispatch value (if&#10; &#160;any). Nodes have the following attributes:&#10;&#10; &#160;&#160;&#160;:symbol &#160;&#160;&#160;&#45;&#45; the var that was defined (as a fully&#45;qualified symbol)&#10; &#160;&#160;&#160;:dispatch &#160;&#45;&#45; the dispatch value (for multimethods and types/records)&#10; &#160;&#160;&#160;:count &#160;&#160;&#160;&#160;&#45;&#45; number of times this var was defined&#10; &#160;&#160;&#160;:locations &#45;&#45; a set of location metadata (:ns, :file, :line, etc.)&#10; &#160;&#160;&#160;:forms &#160;&#160;&#160;&#160;&#45;&#45; a set of the original forms that defined this var&#10; &#160;&#160;&#160;:external? &#45;&#45; true for nodes that were not defined in an analyzed namespace&#10;&#10; &#160;Edges have the following attributes:&#10;&#10; &#160;&#160;&#160;:count &#160;&#160;&#160;&#160;&#45;&#45; number of times the edge&#39;s src called the edge&#39;s dest&#10; &#160;&#160;&#160;:locations &#45;&#45; a set of location metadata (:ns, :file, :line, etc.)&#10;&#10; &#160;Note: vars can be defined multiple times, and one function may call another&#10; &#160;multiple times. For the sake of simplicity, these cases are still represented&#10; &#160;as single nodes and edges in the graph, and the `:count` and `:locations`&#10; &#160;attributes can be used to identify each def or call.&quot;&#10; &#160;(:require [clojure.tools.analyzer.jvm :as ana.jvm]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.log :as log]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.ast :as ast]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.build :as build]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;;; parsing implementations&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.interop]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.multimethod]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#_[phone&#45;tree.parse.namespace]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.protocol]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.var]))">
<ellipse fill="#ffb6c1" stroke="#000000" cx="125.7541" cy="-1174.5704" rx="68.5716" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-1170.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse</text>
</a>
</g>
</g>
<!-- phone&#45;tree.core/find&#45;namespaces&#45;&gt;phone&#45;tree.core/matches&#45;any? -->
<g id="edge211" class="edge edge">
<title>phone&#45;tree.core/find&#45;namespaces&#45;&gt;phone&#45;tree.core/matches&#45;any?</title>
<g id="a_edge211"><a xlink:title="phone&#45;tree.core/find&#45;namespaces &#45;&gt; phone&#45;tree.core/matches&#45;any?">
<path fill="none" stroke="#000000" d="M862.6232,-441.0501C909.4865,-440.1093 962.6828,-439.0413 1009.5861,-438.0996"/>
<polygon fill="#000000" stroke="#000000" points="1009.8765,-441.5946 1019.8041,-437.8945 1009.7359,-434.596 1009.8765,-441.5946"/>
</a>
</g>
</g>
<!-- phone&#45;tree.core/find&#45;namespaces&#45;&gt;phone&#45;tree.namespace/nss&#45;in&#45;dirs -->
<g id="edge212" class="edge edge">
<title>phone&#45;tree.core/find&#45;namespaces&#45;&gt;phone&#45;tree.namespace/nss&#45;in&#45;dirs</title>
<g id="a_edge212"><a xlink:title="phone&#45;tree.core/find&#45;namespaces &#45;&gt; phone&#45;tree.namespace/nss&#45;in&#45;dirs">
<path fill="none" stroke="#000000" d="M849.4124,-435.2025C883.417,-431.1745 920.6328,-425.2516 954.1851,-416.5704 1002.4513,-404.0822 1055.0382,-381.8945 1091.1003,-365.2479"/>
<polygon fill="#000000" stroke="#000000" points="1092.775,-368.3288 1100.3572,-360.9288 1089.8152,-361.9853 1092.775,-368.3288"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/node&#45;attrs&#45;&gt;phone&#45;tree.graph/tooltip -->
<g id="edge213" class="edge edge">
<title>phone&#45;tree.graph/node&#45;attrs&#45;&gt;phone&#45;tree.graph/tooltip</title>
<g id="a_edge213"><a xlink:title="phone&#45;tree.graph/node&#45;attrs &#45;&gt; phone&#45;tree.graph/tooltip">
<path fill="none" stroke="#000000" d="M2034.252,-1184.4807C2079.0223,-1180.6927 2131.6754,-1174.0874 2178.2039,-1162.5704 2242.6061,-1146.6292 2313.2511,-1116.3077 2357.2595,-1095.7658"/>
<polygon fill="#000000" stroke="#000000" points="2358.9485,-1098.8391 2366.5036,-1091.4114 2355.9655,-1092.5064 2358.9485,-1098.8391"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/node&#45;attrs&#45;&gt;ubergraph.core/escape&#45;label -->
<g id="edge214" class="edge edge">
<title>phone&#45;tree.graph/node&#45;attrs&#45;&gt;ubergraph.core/escape&#45;label</title>
<g id="a_edge214"><a xlink:title="phone&#45;tree.graph/node&#45;attrs &#45;&gt; ubergraph.core/escape&#45;label">
<path fill="none" stroke="#000000" d="M2038.5522,-1189.5704C2110.8151,-1189.5704 2205.9267,-1189.5704 2280.531,-1189.5704"/>
<polygon fill="#000000" stroke="#000000" points="2280.9174,-1193.0705 2290.9173,-1189.5704 2280.9173,-1186.0705 2280.9174,-1193.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/node&#45;attrs&#45;&gt;clojure.string/replace -->
<g id="edge215" class="edge edge">
<title>phone&#45;tree.graph/node&#45;attrs&#45;&gt;clojure.string/replace</title>
<g id="a_edge215"><a xlink:title="phone&#45;tree.graph/node&#45;attrs &#45;&gt; clojure.string/replace">
<path fill="none" stroke="#000000" d="M2009.8108,-1201.7829C2063.1561,-1205.4128 2131.8957,-1200.6322 2178.2039,-1162.5704 2219.5787,-1128.5634 2173.4363,-1082.3029 2214.2039,-1047.5704 2240.7086,-1024.9894 2277.4147,-1016.5223 2311.2498,-1014.3345"/>
<polygon fill="#000000" stroke="#000000" points="2311.8181,-1017.8118 2321.6437,-1013.8484 2311.4911,-1010.8194 2311.8181,-1017.8118"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.multimethod -->
<g id="node145" class="node node namespace">
<title>phone&#45;tree.parse.multimethod</title>
<g id="a_node145"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/multimethod.clj, line 1&#10;(ns phone&#45;tree.parse.multimethod&#10; &#160;&quot;Multimethod parsing&quot;&#10; &#160;(:require [phone&#45;tree.parse.ast :as ast]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.build :as build]))">
<ellipse fill="#ffb6c1" stroke="#000000" cx="125.7541" cy="-1228.5704" rx="116.3881" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-1224.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.multimethod</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;&gt;phone&#45;tree.parse.ast/first&#45;form&#45;var -->
<g id="edge216" class="edge edge">
<title>phone&#45;tree.parse.build/node&#45;&gt;phone&#45;tree.parse.ast/first&#45;form&#45;var</title>
<g id="a_edge216"><a xlink:title="phone&#45;tree.parse.build/node &#45;&gt; phone&#45;tree.parse.ast/first&#45;form&#45;var">
<path fill="none" stroke="#000000" d="M1166.8027,-2351.197C1202.0295,-2332.6829 1261.6303,-2304.5556 1316.9449,-2293.5704 1504.6697,-2256.2893 1989.6788,-2260.5739 2178.2039,-2293.5704 2194.9604,-2296.5032 2197.4752,-2303.4828 2214.2039,-2306.5704 2374.4678,-2336.1504 2563.1466,-2333.4409 2684.3034,-2327.0112"/>
<polygon fill="#000000" stroke="#000000" points="2684.5655,-2330.5022 2694.3592,-2326.4607 2684.1828,-2323.5126 2684.5655,-2330.5022"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;&gt;phone&#45;tree.parse.build/edge -->
<g id="edge217" class="edge edge">
<title>phone&#45;tree.parse.build/node&#45;&gt;phone&#45;tree.parse.build/edge</title>
<g id="a_edge217"><a xlink:title="phone&#45;tree.parse.build/node &#45;&gt; phone&#45;tree.parse.build/edge">
<path fill="none" stroke="#000000" d="M1209.0902,-2381.8593C1242.0069,-2387.5172 1281.3457,-2393.8788 1316.9449,-2398.5704 1478.8224,-2419.9038 1519.8955,-2420.3289 1682.5503,-2434.5704 1737.5741,-2439.3881 2137.1493,-2435.6199 2178.2039,-2472.5704 2244.0352,-2531.8206 2159.2732,-2599.094 2214.2039,-2668.5704 2240.3707,-2701.6662 2282.6473,-2721.7251 2320.3282,-2733.7098"/>
<polygon fill="#000000" stroke="#000000" points="2319.7197,-2737.1825 2330.305,-2736.7328 2321.7497,-2730.4833 2319.7197,-2737.1825"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;&gt;phone&#45;tree.parse.build/*parent* -->
<g id="edge218" class="edge edge">
<title>phone&#45;tree.parse.build/node&#45;&gt;phone&#45;tree.parse.build/*parent*</title>
<g id="a_edge218"><a xlink:title="phone&#45;tree.parse.build/node &#45;&gt; phone&#45;tree.parse.build/*parent*">
<path fill="none" stroke="#000000" d="M1225.336,-2358.3248C1464.6865,-2331.9241 2104.9298,-2267.6363 2178.2039,-2326.5704 2236.3536,-2373.34 2164.7894,-2434.6509 2214.2039,-2490.5704 2335.4295,-2627.7541 2551.9773,-2675.3218 2687.6334,-2691.8156"/>
<polygon fill="#000000" stroke="#000000" points="2687.3224,-2695.3031 2697.6631,-2692.9964 2688.141,-2688.3511 2687.3224,-2695.3031"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;&gt;phone&#45;tree.parse.build/&#45;&gt;node -->
<g id="edge219" class="edge edge">
<title>phone&#45;tree.parse.build/node&#45;&gt;phone&#45;tree.parse.build/&#45;&gt;node</title>
<g id="a_edge219"><a xlink:title="phone&#45;tree.parse.build/node &#45;&gt; phone&#45;tree.parse.build/&#45;&gt;node">
<path fill="none" stroke="#000000" d="M1149.671,-2350.711C1177.4397,-2317.1412 1242.962,-2245.4992 1316.9449,-2217.5704 1489.8796,-2152.287 2035.4322,-2169.5249 2279.9689,-2181.0826"/>
<polygon fill="#000000" stroke="#000000" points="2280.1622,-2184.5957 2290.3178,-2181.5768 2280.4962,-2177.6037 2280.1622,-2184.5957"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;&gt;phone&#45;tree.parse.ast/location -->
<g id="edge220" class="edge edge">
<title>phone&#45;tree.parse.build/node&#45;&gt;phone&#45;tree.parse.ast/location</title>
<g id="a_edge220"><a xlink:title="phone&#45;tree.parse.build/node &#45;&gt; phone&#45;tree.parse.ast/location">
<path fill="none" stroke="#000000" d="M1157.3347,-2350.8966C1189.78,-2325.7972 1253.798,-2280.9454 1316.9449,-2263.5704 1575.9215,-2192.3124 2394.4999,-2236.5115 2696.0039,-2255.8641"/>
<polygon fill="#000000" stroke="#000000" points="2695.8711,-2259.3627 2706.0757,-2256.5137 2696.3217,-2252.3772 2695.8711,-2259.3627"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;&gt;phone&#45;tree.parse.ast/parse -->
<g id="edge221" class="edge edge">
<title>phone&#45;tree.parse.build/node&#45;&gt;phone&#45;tree.parse.ast/parse</title>
<g id="a_edge221"><a xlink:title="phone&#45;tree.parse.build/node &#45;&gt; phone&#45;tree.parse.ast/parse">
<path fill="none" stroke="#000000" d="M1150.018,-2386.6027C1176.6375,-2419.9997 1234.9027,-2493.9676 1280.9449,-2558.5704 1285.7196,-2565.2698 1416.0141,-2762.1951 1464.1213,-2834.9212"/>
<polygon fill="#000000" stroke="#000000" points="1461.3905,-2837.137 1469.8266,-2843.5465 1467.2288,-2833.2751 1461.3905,-2837.137"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;&gt;phone&#45;tree.parse.build/conform&#45;node -->
<g id="edge222" class="edge edge">
<title>phone&#45;tree.parse.build/node&#45;&gt;phone&#45;tree.parse.build/conform&#45;node</title>
<g id="a_edge222"><a xlink:title="phone&#45;tree.parse.build/node &#45;&gt; phone&#45;tree.parse.build/conform&#45;node">
<path fill="none" stroke="#000000" d="M1145.3048,-2350.487C1168.5786,-2309.3953 1231.8808,-2209.4768 1316.9449,-2169.5704 1440.4858,-2111.6133 1793.9169,-2141.5704 1930.3771,-2141.5704 1930.3771,-2141.5704 1930.3771,-2141.5704 2400.6058,-2141.5704 2665.048,-2141.5704 2731.5272,-2147.1993 2994.844,-2171.5704 3027.1236,-2174.558 3062.1943,-2178.9111 3093.8257,-2183.2531"/>
<polygon fill="#000000" stroke="#000000" points="3093.5806,-2186.7526 3103.9669,-2184.6608 3094.5431,-2179.8191 3093.5806,-2186.7526"/>
</a>
</g>
</g>
<!-- phone&#45;tree.log -->
<g id="node147" class="node node namespace">
<title>phone&#45;tree.log</title>
<g id="a_node147"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/log.clj, line 1&#10;(ns phone&#45;tree.log&#10; &#160;&quot;Debug logging&quot;)">
<ellipse fill="#ffb6c1" stroke="#000000" cx="125.7541" cy="-1282.5704" rx="61.3549" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-1278.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.log</text>
</a>
</g>
</g>
<!-- phone&#45;tree.log/level&#45;map -->
<g id="node148" class="node node">
<title>phone&#45;tree.log/level&#45;map</title>
<g id="a_node148"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/log.clj, line 6&#10;(def level&#45;map&#10; &#160;{:trace #{:trace :debug :warn}&#10; &#160;&#160;:debug #{:debug :warn}&#10; &#160;&#160;:warn #{:warn}})">
<ellipse fill="#c0c0c0" stroke="#000000" cx="4469.2681" cy="-3017.5704" rx="99.4826" ry="18"/>
<text text-anchor="middle" x="4469.2681" y="-3013.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.log/level&#45;map</text>
</a>
</g>
</g>
<!-- phone&#45;tree.log/debugf&#45;&gt;phone&#45;tree.log/logf -->
<g id="edge223" class="edge edge">
<title>phone&#45;tree.log/debugf&#45;&gt;phone&#45;tree.log/logf</title>
<g id="a_edge223"><a xlink:title="phone&#45;tree.log/debugf &#45;&gt; phone&#45;tree.log/logf">
<path fill="none" stroke="#000000" d="M3560.9342,-3279.4747C3588.9495,-3263.2235 3631.519,-3237.6105 3666.6119,-3212.5704 3746.5154,-3155.5562 3834.4121,-3080.0386 3877.7509,-3041.8722"/>
<polygon fill="#000000" stroke="#000000" points="3880.1347,-3044.4365 3885.3127,-3035.1932 3875.5006,-3039.19 3880.1347,-3044.4365"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/merge&#45;attrs -->
<g id="node152" class="node node function">
<title>phone&#45;tree.parse.build/merge&#45;attrs</title>
<g id="a_node152"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 108&#10;(defn merge&#45;attrs [attr&#45;seq]&#10; &#160;(let [locations (set (keep :location attr&#45;seq))]&#10; &#160;&#160;&#160;(&#45;&gt; (apply clojure.core/merge attr&#45;seq)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(dissoc :location)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(assoc :locations locations)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;(assoc :count (count locations)))))">
<ellipse fill="#ffffff" stroke="#000000" cx="1481.7476" cy="-1965.5704" rx="131.9871" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-1961.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/merge&#45;attrs</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/mark&#45;external&#45;nodes -->
<g id="node156" class="node node function">
<title>phone&#45;tree.parse.build/mark&#45;external&#45;nodes</title>
<g id="a_node156"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/build.clj, line 122&#10;(defn mark&#45;external&#45;nodes [g]&#10; &#160;(&#45;&gt;&gt; (uber/nodes g)&#10; &#160;&#160;&#160;&#160;&#160;&#160;(remove (comp seq :locations (partial uber/attrs g)))&#10; &#160;&#160;&#160;&#160;&#160;&#160;(reduce (fn [g n] (uber/add&#45;attr g n :external? true)) g)))">
<ellipse fill="#ffffff" stroke="#000000" cx="1481.7476" cy="-1765.5704" rx="164.6057" ry="18"/>
<text text-anchor="middle" x="1481.7476" y="-1761.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.build/mark&#45;external&#45;nodes</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/mark&#45;external&#45;nodes&#45;&gt;loom.graph/nodes -->
<g id="edge224" class="edge edge">
<title>phone&#45;tree.parse.build/mark&#45;external&#45;nodes&#45;&gt;loom.graph/nodes</title>
<g id="a_edge224"><a xlink:title="phone&#45;tree.parse.build/mark&#45;external&#45;nodes &#45;&gt; loom.graph/nodes">
<path fill="none" stroke="#000000" d="M1570.6271,-1750.3039C1599.3824,-1740.8229 1628.4818,-1725.4601 1646.5503,-1700.5704 1723.9778,-1593.9128 1590.2814,-1202.6837 1682.5503,-1108.5704 1759.911,-1029.6634 2087.1204,-1131.1386 2178.2039,-1068.5704 2208.6805,-1047.635 2187.9749,-1019.6309 2214.2039,-993.5704 2249.3827,-958.6175 2301.0945,-935.72 2341.1326,-922.0681"/>
<polygon fill="#000000" stroke="#000000" points="2342.3863,-925.3401 2350.7825,-918.8782 2340.1892,-918.6938 2342.3863,-925.3401"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/mark&#45;external&#45;nodes&#45;&gt;loom.attr/add&#45;attr -->
<g id="edge225" class="edge edge">
<title>phone&#45;tree.parse.build/mark&#45;external&#45;nodes&#45;&gt;loom.attr/add&#45;attr</title>
<g id="a_edge225"><a xlink:title="phone&#45;tree.parse.build/mark&#45;external&#45;nodes &#45;&gt; loom.attr/add&#45;attr">
<path fill="none" stroke="#000000" d="M1564.8509,-1749.994C1591.0306,-1744.937 1620.0314,-1739.18 1646.5503,-1733.5704 1723.0654,-1717.3851 1810.7593,-1697.0229 1868.1751,-1683.4437"/>
<polygon fill="#000000" stroke="#000000" points="1869.2568,-1686.7844 1878.1807,-1681.0734 1867.6431,-1679.9729 1869.2568,-1686.7844"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/mark&#45;external&#45;nodes&#45;&gt;loom.attr/attrs -->
<g id="edge226" class="edge edge">
<title>phone&#45;tree.parse.build/mark&#45;external&#45;nodes&#45;&gt;loom.attr/attrs</title>
<g id="a_edge226"><a xlink:title="phone&#45;tree.parse.build/mark&#45;external&#45;nodes &#45;&gt; loom.attr/attrs">
<path fill="none" stroke="#000000" d="M1601.9721,-1777.8975C1685.6632,-1786.4788 1794.1932,-1797.6068 1863.0823,-1804.6703"/>
<polygon fill="#000000" stroke="#000000" points="1863.0645,-1808.1868 1873.3694,-1805.7251 1863.7786,-1801.2233 1863.0645,-1808.1868"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.var -->
<g id="node157" class="node node namespace">
<title>phone&#45;tree.parse.var</title>
<g id="a_node157"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse/var.clj, line 1&#10;(ns phone&#45;tree.parse.var&#10; &#160;&quot;Clojure var parsing (def forms and function calls).&quot;&#10; &#160;(:require [phone&#45;tree.parse.ast :as ast]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.build :as build]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[phone&#45;tree.parse.class :refer [guess&#45;class]]))">
<ellipse fill="#ffb6c1" stroke="#000000" cx="125.7541" cy="-1336.5704" rx="82.0769" ry="18"/>
<text text-anchor="middle" x="125.7541" y="-1332.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse.var</text>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;starting&#45;nodes&#45;&gt;loom.graph/nodes -->
<g id="edge227" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;starting&#45;nodes&#45;&gt;loom.graph/nodes</title>
<g id="a_edge227"><a xlink:title="phone&#45;tree.graph/&#45;&gt;starting&#45;nodes &#45;&gt; loom.graph/nodes">
<path fill="none" stroke="#000000" d="M1570.9408,-648.8302C1595.5154,-652.851 1622.1277,-657.5465 1646.5503,-662.5704 1885.0217,-711.6252 1979.0789,-654.484 2178.2039,-794.5704 2201.7952,-811.1671 2191.0641,-831.3498 2214.2039,-848.5704 2246.5874,-872.6701 2289.2631,-886.6866 2325.6086,-894.7841"/>
<polygon fill="#000000" stroke="#000000" points="2325.1703,-898.2687 2335.6782,-896.9145 2326.6193,-891.4203 2325.1703,-898.2687"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse/nss&#45;&gt;graph&#45;&gt;phone&#45;tree.parse/parse&#45;ns -->
<g id="edge229" class="edge edge">
<title>phone&#45;tree.parse/nss&#45;&gt;graph&#45;&gt;phone&#45;tree.parse/parse&#45;ns</title>
<g id="a_edge229"><a xlink:title="phone&#45;tree.parse/nss&#45;&gt;graph &#45;&gt; phone&#45;tree.parse/parse&#45;ns">
<path fill="none" stroke="#000000" d="M774.7159,-1982.7104C824.8421,-2007.7021 912.0853,-2059.1805 954.1851,-2131.5704 1013.7185,-2233.9368 944.6897,-2286.2393 990.1851,-2395.5704 1018.0752,-2462.5937 1075.6483,-2526.6634 1109.3724,-2560.5708"/>
<polygon fill="#000000" stroke="#000000" points="1107.0281,-2563.1752 1116.5917,-2567.7347 1111.9588,-2558.2065 1107.0281,-2563.1752"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse/nss&#45;&gt;graph&#45;&gt;phone&#45;tree.parse.build/ubergraph -->
<g id="edge228" class="edge edge">
<title>phone&#45;tree.parse/nss&#45;&gt;graph&#45;&gt;phone&#45;tree.parse.build/ubergraph</title>
<g id="a_edge228"><a xlink:title="phone&#45;tree.parse/nss&#45;&gt;graph &#45;&gt; phone&#45;tree.parse.build/ubergraph">
<path fill="none" stroke="#000000" d="M847.823,-1965.5704C894.3626,-1965.5704 948.9885,-1965.5704 998.0678,-1965.5704"/>
<polygon fill="#000000" stroke="#000000" points="998.1282,-1969.0705 1008.1281,-1965.5704 998.1281,-1962.0705 998.1282,-1969.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.log/logf&#45;&gt;phone&#45;tree.log/enabled? -->
<g id="edge230" class="edge edge">
<title>phone&#45;tree.log/logf&#45;&gt;phone&#45;tree.log/enabled?</title>
<g id="a_edge230"><a xlink:title="phone&#45;tree.log/logf &#45;&gt; phone&#45;tree.log/enabled?">
<path fill="none" stroke="#000000" d="M3983.2519,-3017.5704C4027.8551,-3017.5704 4084.3598,-3017.5704 4132.8811,-3017.5704"/>
<polygon fill="#000000" stroke="#000000" points="4133.1067,-3021.0705 4143.1067,-3017.5704 4133.1066,-3014.0705 4133.1067,-3021.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.core/extend)&#45;&gt;phone&#45;tree.log/warnf -->
<g id="edge231" class="edge edge">
<title>phone&#45;tree.parse.ast/parse (quote clojure.core/extend)&#45;&gt;phone&#45;tree.log/warnf</title>
<g id="a_edge231"><a xlink:title="phone&#45;tree.parse.ast/parse (quote clojure.core/extend) &#45;&gt; phone&#45;tree.log/warnf">
<path fill="none" stroke="#000000" d="M2130.1733,-2354.4063C2147.5463,-2360.4983 2163.9188,-2368.9827 2178.2039,-2380.5704 2218.1536,-2412.9764 2175.7339,-2456.421 2214.2039,-2490.5704 2311.2145,-2576.6855 3253.6124,-2643.9235 3358.9899,-2719.5704 3408.4796,-2755.0973 3488.2148,-2923.2777 3518.5509,-2990.102"/>
<polygon fill="#000000" stroke="#000000" points="3515.5163,-2991.8866 3522.8215,-2999.5603 3521.8962,-2989.0059 3515.5163,-2991.8866"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.core/extend)&#45;&gt;phone&#45;tree.parse.build/edge -->
<g id="edge232" class="edge edge">
<title>phone&#45;tree.parse.ast/parse (quote clojure.core/extend)&#45;&gt;phone&#45;tree.parse.build/edge</title>
<g id="a_edge232"><a xlink:title="phone&#45;tree.parse.ast/parse (quote clojure.core/extend) &#45;&gt; phone&#45;tree.parse.build/edge">
<path fill="none" stroke="#000000" d="M2027.128,-2337.7926C2078.6963,-2335.1779 2139.3392,-2342.3163 2178.2039,-2380.5704 2270.1373,-2471.0593 2137.1308,-2565.1309 2214.2039,-2668.5704 2239.2181,-2702.1418 2280.9753,-2722.2006 2318.6335,-2734.0645"/>
<polygon fill="#000000" stroke="#000000" points="2318.0324,-2737.538 2328.6161,-2737.0525 2320.0397,-2730.8319 2318.0324,-2737.538"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.core/extend)&#45;&gt;phone&#45;tree.util/var&#45;&gt;symbol -->
<g id="edge233" class="edge edge">
<title>phone&#45;tree.parse.ast/parse (quote clojure.core/extend)&#45;&gt;phone&#45;tree.util/var&#45;&gt;symbol</title>
<g id="a_edge233"><a xlink:title="phone&#45;tree.parse.ast/parse (quote clojure.core/extend) &#45;&gt; phone&#45;tree.util/var&#45;&gt;symbol">
<path fill="none" stroke="#000000" d="M2129.836,-2354.8167C2466.5452,-2356.9206 3137.6713,-2361.114 3410.8946,-2362.8212"/>
<polygon fill="#000000" stroke="#000000" points="3411.2137,-2366.3231 3421.2354,-2362.8858 3411.2575,-2359.3233 3411.2137,-2366.3231"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse (quote clojure.core/extend)&#45;&gt;phone&#45;tree.parse.build/node -->
<g id="edge234" class="edge edge">
<title>phone&#45;tree.parse.ast/parse (quote clojure.core/extend)&#45;&gt;phone&#45;tree.parse.build/node</title>
<g id="a_edge234"><a xlink:title="phone&#45;tree.parse.ast/parse (quote clojure.core/extend) &#45;&gt; phone&#45;tree.parse.build/node">
<path fill="none" stroke="#000000" d="M1734.4975,-2357.2671C1583.9319,-2360.1086 1380.8821,-2363.9407 1254.1263,-2366.3329"/>
<polygon fill="#000000" stroke="#000000" points="1253.9307,-2362.8358 1243.9986,-2366.524 1254.0629,-2369.8346 1253.9307,-2362.8358"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _default&#45;&gt;phone&#45;tree.parse.ast/parse&#45;children -->
<g id="edge236" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _default&#45;&gt;phone&#45;tree.parse.ast/parse&#45;children</title>
<g id="a_edge236"><a xlink:title="phone&#45;tree.parse.ast/parse :default &#45;&gt; phone&#45;tree.parse.ast/parse&#45;children">
<path fill="none" stroke="#000000" d="M2032.8814,-3288.8223C2081.1509,-3288.8705 2137.0224,-3280.7743 2178.2039,-3250.5704 2210.2989,-3227.0309 2184.3335,-3194.8754 2214.2039,-3168.5704 2236.0621,-3149.3212 2264.3735,-3136.8 2292.3007,-3128.6581"/>
<polygon fill="#000000" stroke="#000000" points="2293.4332,-3131.9768 2302.1516,-3125.957 2291.5821,-3125.226 2293.4332,-3131.9768"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _default&#45;&gt;clojure.tools.analyzer.ast/children -->
<g id="edge235" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _default&#45;&gt;clojure.tools.analyzer.ast/children</title>
<g id="a_edge235"><a xlink:title="phone&#45;tree.parse.ast/parse :default &#45;&gt; clojure.tools.analyzer.ast/children">
<path fill="none" stroke="#000000" d="M2061.6745,-3277.5704C2123.8351,-3277.5704 2198.1099,-3277.5704 2261.2646,-3277.5704"/>
<polygon fill="#000000" stroke="#000000" points="2261.3015,-3281.0705 2271.3015,-3277.5704 2261.3014,-3274.0705 2261.3015,-3281.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.html/render&#45;&gt;phone&#45;tree.html/mini&#45;hbs -->
<g id="edge237" class="edge edge">
<title>phone&#45;tree.html/render&#45;&gt;phone&#45;tree.html/mini&#45;hbs</title>
<g id="a_edge237"><a xlink:title="phone&#45;tree.html/render &#45;&gt; phone&#45;tree.html/mini&#45;hbs">
<path fill="none" stroke="#000000" d="M1226.9732,-889.5704C1271.2036,-889.5704 1324.6671,-889.5704 1371.1744,-889.5704"/>
<polygon fill="#000000" stroke="#000000" points="1371.2931,-893.0705 1381.2931,-889.5704 1371.2931,-886.0705 1371.2931,-893.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.html/render&#45;&gt;phone&#45;tree.html/read&#45;html&#45;resource -->
<g id="edge238" class="edge edge">
<title>phone&#45;tree.html/render&#45;&gt;phone&#45;tree.html/read&#45;html&#45;resource</title>
<g id="a_edge238"><a xlink:title="phone&#45;tree.html/render &#45;&gt; phone&#45;tree.html/read&#45;html&#45;resource">
<path fill="none" stroke="#000000" d="M1205.1615,-877.8612C1238.8413,-872.5402 1279.9102,-866.5579 1316.9449,-862.5704 1479.0021,-845.1219 1665.9966,-833.901 1790.5133,-827.6866"/>
<polygon fill="#000000" stroke="#000000" points="1791.0499,-831.1645 1800.8647,-827.1744 1790.7039,-824.173 1791.0499,-831.1645"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/node&#45;id&#45;&gt;phone&#45;tree.parse.build/conform&#45;node -->
<g id="edge239" class="edge edge">
<title>phone&#45;tree.parse.build/node&#45;id&#45;&gt;phone&#45;tree.parse.build/conform&#45;node</title>
<g id="a_edge239"><a xlink:title="phone&#45;tree.parse.build/node&#45;id &#45;&gt; phone&#45;tree.parse.build/conform&#45;node">
<path fill="none" stroke="#000000" d="M2927.6222,-2198.5704C2964.0281,-2198.5704 3004.5969,-2198.5704 3042.9069,-2198.5704"/>
<polygon fill="#000000" stroke="#000000" points="3043.1186,-2202.0705 3053.1185,-2198.5704 3043.1185,-2195.0705 3043.1186,-2202.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/remove&#45;nodes&#45;&gt;loom.graph/nodes -->
<g id="edge241" class="edge edge">
<title>phone&#45;tree.graph/remove&#45;nodes&#45;&gt;loom.graph/nodes</title>
<g id="a_edge241"><a xlink:title="phone&#45;tree.graph/remove&#45;nodes &#45;&gt; loom.graph/nodes">
<path fill="none" stroke="#000000" d="M2005.9924,-513.3865C2061.2263,-507.7354 2133.9191,-510.8717 2178.2039,-554.5704 2271.9073,-647.0336 2129.6051,-747.71 2214.2039,-848.5704 2239.7571,-879.0354 2281.1219,-893.5424 2318.4005,-900.3225"/>
<polygon fill="#000000" stroke="#000000" points="2317.8445,-903.778 2328.2823,-901.9609 2318.9895,-896.8723 2317.8445,-903.778"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/remove&#45;nodes&#45;&gt;loom.graph/remove&#45;nodes -->
<g id="edge240" class="edge edge">
<title>phone&#45;tree.graph/remove&#45;nodes&#45;&gt;loom.graph/remove&#45;nodes</title>
<g id="a_edge240"><a xlink:title="phone&#45;tree.graph/remove&#45;nodes &#45;&gt; loom.graph/remove&#45;nodes">
<path fill="none" stroke="#000000" d="M2053.31,-527.5704C2125.5425,-527.5704 2216.2264,-527.5704 2286.8143,-527.5704"/>
<polygon fill="#000000" stroke="#000000" points="2287.0786,-531.0705 2297.0785,-527.5704 2287.0785,-524.0705 2287.0786,-531.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;dot&#45;&gt;ubergraph.core/viz&#45;graph -->
<g id="edge242" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;dot&#45;&gt;ubergraph.core/viz&#45;graph</title>
<g id="a_edge242"><a xlink:title="phone&#45;tree.graph/&#45;&gt;dot &#45;&gt; ubergraph.core/viz&#45;graph">
<path fill="none" stroke="#000000" d="M1167.0432,-1582.6382C1202.4831,-1601.1314 1262.2719,-1630.184 1316.9449,-1646.5704 1339.2019,-1653.2412 1363.6745,-1658.3814 1386.7943,-1662.2956"/>
<polygon fill="#000000" stroke="#000000" points="1386.5247,-1665.7978 1396.9578,-1663.9537 1387.6519,-1658.8891 1386.5247,-1665.7978"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;dot&#45;&gt;dorothy.core/safe&#45;id? -->
<g id="edge243" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;dot&#45;&gt;dorothy.core/safe&#45;id?</title>
<g id="a_edge243"><a xlink:title="phone&#45;tree.graph/&#45;&gt;dot &#45;&gt; dorothy.core/safe&#45;id?">
<path fill="none" stroke="#000000" d="M1207.7148,-1576.8248C1264.8474,-1585.7368 1344.533,-1598.1667 1403.2539,-1607.3264"/>
<polygon fill="#000000" stroke="#000000" points="1402.8063,-1610.7988 1413.2262,-1608.8819 1403.8852,-1603.8824 1402.8063,-1610.7988"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;dot&#45;&gt;java.io.StringWriter/. -->
<g id="edge244" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;dot&#45;&gt;java.io.StringWriter/.</title>
<g id="a_edge244"><a xlink:title="phone&#45;tree.graph/&#45;&gt;dot &#45;&gt; java.io.StringWriter/.">
<path fill="none" stroke="#000000" d="M1227.8808,-1565.5704C1276.8824,-1565.5704 1337.0174,-1565.5704 1386.4584,-1565.5704"/>
<polygon fill="#000000" stroke="#000000" points="1386.5175,-1569.0705 1396.5175,-1565.5704 1386.5174,-1562.0705 1386.5175,-1569.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;dot&#45;&gt;phone&#45;tree.graph/with&#45;dot&#45;attrs -->
<g id="edge245" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;dot&#45;&gt;phone&#45;tree.graph/with&#45;dot&#45;attrs</title>
<g id="a_edge245"><a xlink:title="phone&#45;tree.graph/&#45;&gt;dot &#45;&gt; phone&#45;tree.graph/with&#45;dot&#45;attrs">
<path fill="none" stroke="#000000" d="M1150.0326,-1547.7795C1178.6749,-1513.5521 1245.9951,-1437.9187 1316.9449,-1392.5704 1347.4763,-1373.0559 1384.8097,-1357.7365 1416.2182,-1346.8839"/>
<polygon fill="#000000" stroke="#000000" points="1417.4078,-1350.1764 1425.7613,-1343.6596 1415.1671,-1343.5447 1417.4078,-1350.1764"/>
</a>
</g>
</g>
<!-- phone&#45;tree.graph/&#45;&gt;dot&#45;&gt;phone&#45;tree.graph/&#45;&gt;dot -->
<g id="edge246" class="edge edge">
<title>phone&#45;tree.graph/&#45;&gt;dot&#45;&gt;phone&#45;tree.graph/&#45;&gt;dot</title>
<g id="a_edge246"><a xlink:title="phone&#45;tree.graph/&#45;&gt;dot &#45;&gt; phone&#45;tree.graph/&#45;&gt;dot">
<path fill="none" stroke="#000000" d="M1078.7083,-1579.7996C1058.1577,-1590.6101 1077.1099,-1601.5704 1135.565,-1601.5704 1182.1464,-1601.5704 1203.6431,-1594.6105 1200.0551,-1586.3127"/>
<polygon fill="#000000" stroke="#000000" points="1202.3008,-1583.6278 1192.4217,-1579.7996 1197.7572,-1588.9529 1202.3008,-1583.6278"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _host&#45;interop&#45;&gt;phone&#45;tree.parse.class/guess&#45;class -->
<g id="edge247" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _host&#45;interop&#45;&gt;phone&#45;tree.parse.class/guess&#45;class</title>
<g id="a_edge247"><a xlink:title="phone&#45;tree.parse.ast/parse :host&#45;interop &#45;&gt; phone&#45;tree.parse.class/guess&#45;class">
<path fill="none" stroke="#000000" d="M2067.2078,-2854.3238C2105.5762,-2857.9495 2145.6569,-2867.567 2178.2039,-2888.5704 2204.6548,-2905.6397 2189.1878,-2930.46 2214.2039,-2949.5704 2236.9802,-2966.9697 2265.3126,-2978.4359 2292.9567,-2985.9912"/>
<polygon fill="#000000" stroke="#000000" points="2292.1385,-2989.3946 2302.6958,-2988.5038 2293.8873,-2982.6165 2292.1385,-2989.3946"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.ast/parse _host&#45;interop&#45;&gt;phone&#45;tree.parse.build/edge -->
<g id="edge248" class="edge edge">
<title>phone&#45;tree.parse.ast/parse _host&#45;interop&#45;&gt;phone&#45;tree.parse.build/edge</title>
<g id="a_edge248"><a xlink:title="phone&#45;tree.parse.ast/parse :host&#45;interop &#45;&gt; phone&#45;tree.parse.build/edge">
<path fill="none" stroke="#000000" d="M2063.2697,-2853.329C2100.7673,-2849.324 2141.3732,-2843.3817 2178.2039,-2834.5704 2211.6218,-2826.5755 2295.6506,-2793.4465 2350.3189,-2771.2599"/>
<polygon fill="#000000" stroke="#000000" points="2351.8875,-2774.4004 2359.8312,-2767.3898 2349.2495,-2767.9165 2351.8875,-2774.4004"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/ubergraph&#45;&gt;phone&#45;tree.parse.build/attrs&#45;&gt;ubergraph -->
<g id="edge249" class="edge edge">
<title>phone&#45;tree.parse.build/ubergraph&#45;&gt;phone&#45;tree.parse.build/attrs&#45;&gt;ubergraph</title>
<g id="a_edge249"><a xlink:title="phone&#45;tree.parse.build/ubergraph &#45;&gt; phone&#45;tree.parse.build/attrs&#45;&gt;ubergraph">
<path fill="none" stroke="#000000" d="M1221.1383,-1978.9187C1269.192,-1986.4145 1329.4581,-1995.8152 1379.9289,-2003.688"/>
<polygon fill="#000000" stroke="#000000" points="1379.4659,-2007.158 1389.8859,-2005.2412 1380.5449,-2000.2417 1379.4659,-2007.158"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/ubergraph&#45;&gt;ubergraph.core/digraph -->
<g id="edge250" class="edge edge">
<title>phone&#45;tree.parse.build/ubergraph&#45;&gt;ubergraph.core/digraph</title>
<g id="a_edge250"><a xlink:title="phone&#45;tree.parse.build/ubergraph &#45;&gt; ubergraph.core/digraph">
<path fill="none" stroke="#000000" d="M1143.8324,-1947.4481C1165.1934,-1902.97 1226.9179,-1788.4225 1316.9449,-1738.5704 1445.9485,-1667.1351 1522.3114,-1780.0036 1646.5503,-1700.5704 1672.4309,-1684.0234 1660.9179,-1663.3797 1682.5503,-1641.5704 1742.2833,-1581.3489 1829.9029,-1534.0218 1883.3729,-1508.4856"/>
<polygon fill="#000000" stroke="#000000" points="1885.07,-1511.5549 1892.6214,-1504.1234 1882.0839,-1505.2238 1885.07,-1511.5549"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/ubergraph&#45;&gt;phone&#45;tree.parse.build/merge&#45;attrs -->
<g id="edge251" class="edge edge">
<title>phone&#45;tree.parse.build/ubergraph&#45;&gt;phone&#45;tree.parse.build/merge&#45;attrs</title>
<g id="a_edge251"><a xlink:title="phone&#45;tree.parse.build/ubergraph &#45;&gt; phone&#45;tree.parse.build/merge&#45;attrs">
<path fill="none" stroke="#000000" d="M1262.9958,-1965.5704C1288.0147,-1965.5704 1314.4043,-1965.5704 1339.8624,-1965.5704"/>
<polygon fill="#000000" stroke="#000000" points="1339.946,-1969.0705 1349.946,-1965.5704 1339.946,-1962.0705 1339.946,-1969.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse.build/ubergraph&#45;&gt;phone&#45;tree.parse.build/mark&#45;external&#45;nodes -->
<g id="edge252" class="edge edge">
<title>phone&#45;tree.parse.build/ubergraph&#45;&gt;phone&#45;tree.parse.build/mark&#45;external&#45;nodes</title>
<g id="a_edge252"><a xlink:title="phone&#45;tree.parse.build/ubergraph &#45;&gt; phone&#45;tree.parse.build/mark&#45;external&#45;nodes">
<path fill="none" stroke="#000000" d="M1155.8224,-1947.6476C1188.1004,-1919.7705 1254.0009,-1865.5937 1316.9449,-1830.5704 1349.0956,-1812.6811 1387.1848,-1797.3175 1418.6422,-1786.0254"/>
<polygon fill="#000000" stroke="#000000" points="1419.917,-1789.2871 1428.178,-1782.6534 1417.5833,-1782.6875 1419.917,-1789.2871"/>
</a>
</g>
</g>
<!-- phone&#45;tree.log/enabled?&#45;&gt;phone&#45;tree.log/*level* -->
<g id="edge253" class="edge edge">
<title>phone&#45;tree.log/enabled?&#45;&gt;phone&#45;tree.log/*level*</title>
<g id="a_edge253"><a xlink:title="phone&#45;tree.log/enabled? &#45;&gt; phone&#45;tree.log/*level*">
<path fill="none" stroke="#000000" d="M4241.8913,-2999.3303C4267.0012,-2854.9103 4433.539,-1897.0668 4464.365,-1719.7707"/>
<polygon fill="#000000" stroke="#000000" points="4467.8554,-1720.1274 4466.1202,-1709.6756 4460.9589,-1718.9283 4467.8554,-1720.1274"/>
</a>
</g>
</g>
<!-- phone&#45;tree.log/enabled?&#45;&gt;phone&#45;tree.log/level&#45;map -->
<g id="edge254" class="edge edge">
<title>phone&#45;tree.log/enabled?&#45;&gt;phone&#45;tree.log/level&#45;map</title>
<g id="a_edge254"><a xlink:title="phone&#45;tree.log/enabled? &#45;&gt; phone&#45;tree.log/level&#45;map">
<path fill="none" stroke="#000000" d="M4334.1569,-3017.5704C4342.6154,-3017.5704 4351.2209,-3017.5704 4359.7836,-3017.5704"/>
<polygon fill="#000000" stroke="#000000" points="4359.8045,-3021.0705 4369.8045,-3017.5704 4359.8045,-3014.0705 4359.8045,-3021.0705"/>
</a>
</g>
</g>
<!-- phone&#45;tree.parse/ast&#45;meta&#45;&gt;graph -->
<g id="node178" class="node node function">
<title>phone&#45;tree.parse/ast&#45;meta&#45;&gt;graph</title>
<g id="a_node178"><a xlink:title="file:/Users/mike/code/phone&#45;tree/phone&#45;tree/src/phone_tree/parse.clj, line 61&#10;(defn ast&#45;meta&#45;&gt;graph&#10; &#160;&quot;Returns a map of edges and nodes defined in a var&#39;s metadata.&#10;&#10; &#160;Vars may attach the following metadata:&#10;&#10; &#160;{:phone&#45;tree/nodes [&#39;symbol ...]&#10; &#160;&#160;:phone&#45;tree/edges [{:src &#39;symbol :dest &#39;symbol} ...]}&#10;&#10; &#160;Unqualified symbols will use the current namespace.&#10;&#10; &#160;Nodes may also be a map with :symbol and :dispatch keys for multiple&#45;dispatch&#10; &#160;functions and calls.&quot;&#10; &#160;[ast]&#10; &#160;(letfn [(qualify&#45;symbol [x] (if (namespace x)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;x&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(symbol (&#45;&gt; ast :meta :ns ns&#45;name str)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(name x))))&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(&#45;&gt;node [x]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(let [n (if (map? x) x {:symbol x})]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(update n :symbol qualify&#45;symbol)))]&#10; &#160;&#160;&#160;(merge&#10; &#160;&#160;&#160;&#160;&#160;(when&#45;let [edges (&#45;&gt; ast :meta :phone&#45;tree/edges)]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;{:edges (for [{:keys [caller call]} edges]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{:caller (&#45;&gt;node caller)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:call (&#45;&gt;node call)&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:location (ast/location ast)})})&#10; &#160;&#160;&#160;&#160;&#160;(when&#45;let [nodes (&#45;&gt; ast :meta :phone&#45;tree/nodes)]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;{:nodes (for [n (map &#45;&gt;node nodes)]&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(assoc n :location (ast/location ast)))}))))">
<ellipse fill="#ffffff" stroke="#000000" cx="2400.6058" cy="-2279.5704" rx="129.0299" ry="18"/>
<text text-anchor="middle" x="2400.6058" y="-2275.3704" font-family="Times,serif" font-size="14.00" fill="#000000">phone&#45;tree.parse/ast&#45;meta&#45;&gt;graph</text>
</a>
</g>
</g>
<!-- phone&#45;tree.parse/ast&#45;meta&#45;&gt;graph&#45;&gt;phone&#45;tree.parse.ast/location -->
<g id="edge255" class="edge edge">
<title>phone&#45;tree.parse/ast&#45;meta&#45;&gt;graph&#45;&gt;phone&#45;tree.parse.ast/location</title>
<g id="a_edge255"><a xlink:title="phone&#45;tree.parse/ast&#45;meta&#45;&gt;graph &#45;&gt; phone&#45;tree.parse.ast/location">
<path fill="none" stroke="#000000" d="M2525.056,-2274.6938C2577.3967,-2272.6428 2638.0289,-2270.267 2689.7858,-2268.2389"/>
<polygon fill="#000000" stroke="#000000" points="2690.1585,-2271.7271 2700.0137,-2267.8381 2689.8843,-2264.7324 2690.1585,-2271.7271"/>
</a>
</g>
</g>
</g>
</svg>
